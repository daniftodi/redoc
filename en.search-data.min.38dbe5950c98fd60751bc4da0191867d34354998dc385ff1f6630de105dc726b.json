[{"id":0,"href":"/docs/android-mobile-sdk/","title":"Android Mobile Sdk","section":"Docs","content":"About Extole’s SDK and Why You Should Use It #  Extole’s Mobile SDK for iOS / Android allow you to load content through native build code or launch a WebView hosted experience in-app.\nThe Extole SDK allows you to easily:\nInitialize a connection from your Mobile App to your Extole marketing programs\nIdentify your users to Extole to power capabilities for targeting campaigns, delivering appropriate rewards, executing A/B tests, and more. Identification also allows for consistent consumer experiences across your mobile app and other environments.\nLoad Content from Extole for the appropriate campaign, which is useful for calls-to-action or if you are building in-app experiences that don’t use Extole’s preconfigured content elements.\nLaunch a WebView sharing experience for the Extole-hosted campaign.\niOS repository: GitHub\nAndroid repository: GitHub\nGetting Started #  Understanding Programs, Campaigns, and Zones The Extole SDK/API functions by interaction with Programs, Campaigns, and Zones inside of your marketing program.\nProgram A high-level marketing program you’ve targeted to a specific audience. A program could be your “refer-a-friend” program or “influencer” program or a “welcome offer” program.\nCampaign Inside of a Program, there may be multiple campaigns. In general, as a developer, you do not need to understand what campaigns are active. When requesting content for a specific program, the Extole targeting engine will determine the appropriate campaign to return. For example, if you request content for your refer-a-friend program and the program is running an A/B test, Extole will determine whether to provide the A Variant Campaign or B Variant Campaign. This happens seamlessly in the SDK and underlying API.\nZone A zone is a specific piece of content inside of a campaign. For example, you may have a “mobile_menu” zone, that would provide the icon and text to render in the mobile menu. You may have a “homepage_tile” zone that would tell you the proper image to render on the homepage. The content of the zones is controlled by the marketing team through the My Extole admin app, allowing marketers to dynamically control the content and make sure it\u0026rsquo;s consistent across mobile app, mobile web, desktop web, etc.\nDependencies #  Repository #  maven { name \u0026#34;github\u0026#34; url \u0026#34;https://maven.pkg.github.com/extole/android-sdk\u0026#34; } Gradle Dependency #  implementation \u0026#39;com.extole.mobile:android-sdk:1.0.+\u0026#39; 0 Code initializing #   SDK APIs Documentation #  "},{"id":1,"href":"/docs/client-api/","title":"Client API","section":"Docs","content":"Client API #  It is important to use client API in cases like\u0026hellip;\nIt is documented automtically by OpenAPI\n\u0026hellip;\n SwaggerUI      window.onload = () = { window.ui = SwaggerUIBundle({ url: \"openapi\\/client.json\", dom_id: '#swagger-ui', }); };    "},{"id":2,"href":"/docs/ios-mobile-sdk/","title":"Ios Mobile Sdk","section":"Docs","content":"iOS Mobile SDK #  Mobile SDK is used \u0026hellip;\nSub Title 1 #  Some text\nSub Title 2 #  Additional text\n"},{"id":3,"href":"/docs/consumer-api/","title":"Client API","section":"Docs","content":"It is important to use client API in cases like\u0026hellip;\nIt is documented automtically by OpenAPI\n\u0026hellip;\n SwaggerUI      window.onload = () = { window.ui = SwaggerUIBundle({ url: \"openapi\\/consumer.json\", dom_id: '#swagger-ui', }); };    "}]