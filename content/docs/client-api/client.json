{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Extole client-api",
    "description" : "This is a sample generated doc.",
    "contact" : {
      "email" : "support@extole.com"
    },
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "https://api.extole.io",
    "description" : "ExtoleAPI"
  } ],
  "tags" : [ {
    "name" : "/v2/campaigns",
    "description" : "Campaign"
  }, {
    "name" : "/v4/tokens",
    "description" : "ClientAccessToken"
  }, {
    "name" : "/v4/clients",
    "description" : "Client"
  }, {
    "name" : "/v4/persons",
    "description" : "Person"
  }, {
    "name" : "/v4/runtime-persons",
    "description" : "RuntimePerson"
  }, {
    "name" : "/v4/runtime-persons/{person_id}/journeys",
    "description" : "RuntimePersonJourney"
  }, {
    "name" : "/v2/persons",
    "description" : "PersonsV2"
  }, {
    "name" : "/v6/prehandlers",
    "description" : "Prehandler"
  }, {
    "name" : "/v2/settings/security/keys/pgp-extole",
    "description" : "PgpExtoleClientKey"
  }, {
    "name" : "/v6/subscriptions",
    "description" : "Subscription"
  }, {
    "name" : "/v6/users/{user_id}/subscriptions",
    "description" : "UserSubscription"
  }, {
    "name" : "/v2/client-version",
    "description" : "ClientVersion"
  }, {
    "name" : "/v6/webhooks",
    "description" : "Webhook"
  }, {
    "name" : "/v6/audience-lists",
    "description" : "AudienceList"
  }, {
    "name" : "/v6/batches",
    "description" : "BatchJob"
  }, {
    "name" : "/v6/files",
    "description" : "FileAssets"
  }, {
    "name" : "/v6/report-runners",
    "description" : "ReportRunner"
  }, {
    "name" : "/v6/report-types",
    "description" : "ReportType"
  } ],
  "paths" : {
    "/v2/campaigns" : {
      "get" : {
        "tags" : [ "/v2/campaigns" ],
        "summary" : "Get a list with campaigns",
        "operationId" : "getCampaigns",
        "parameters" : [ {
          "name" : "version",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reward_supplier_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CampaignResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_campaign_id, message=Invalid Campaign Id\n\ncode=invalid_campaign_version, message=Invalid Campaign Version\n\ncode=date_invalid, message=Date is invalid or not ISO-8601 compliant\n\ncode=lock_missing_lock_types, message=Unable to unlock, lock types should be specified\n\ncode=unlock_missing_lock_types, message=Unable to lock, lock types should be specified\n\ncode=campaign_locked, message=Could not perform the operation. The campaign is locked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v2/campaigns" ],
        "summary" : "Creates a new campaign",
        "operationId" : "create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=step_and_controller_with_same_name, message=Campaign step and controller have the same name\n\ncode=invalid_program_type, message=Invalid program type, length must be between 1 and 128\n\ncode=incompatible_program_type, message=Program type is not compatible with an existing campaign from the current program\n\ncode=program_type_empty, message=Program type cannot be empty or null\n\ncode=invalid_theme_name, message=Invalid theme_name, length must be between 1 and 255\n\ncode=campaign_has_pending_changes, message=Campaign can't be pushed live since it has pending changes that are not discarded or published\n\ncode=campaign_invalid_tag, message=A tag contains invalid characters\n\ncode=campaign_tags_too_long, message=Tags length is too long\n\ncode=campaign_build_failed, message=Campaign build failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=campaign_name_out_of_range, message=Campaign name length must be between 2 and 50 characters\n\ncode=campaign_name_is_missing, message=Campaign name is missing\n\ncode=campaign_description_out_of_range, message=Campaign description length must be between 2 and 250 characters\n\ncode=campaign_name_already_used, message=Campaign name is already used by another campaign\n\ncode=campaign_name_illegal_character, message=Campaign name can only contain alphanumeric, space, dash, parenthesis, slash, colon, comma, period, underscore, dollar and percentage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/campaigns/{campaignId}/duplicate" : {
      "post" : {
        "tags" : [ "/v2/campaigns" ],
        "summary" : "Duplicates a campaign",
        "operationId" : "duplicate",
        "parameters" : [ {
          "name" : "campaignId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignDuplicateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_campaign_id, message=Invalid Campaign Id\n\ncode=invalid_campaign_version, message=Invalid Campaign Version\n\ncode=date_invalid, message=Date is invalid or not ISO-8601 compliant\n\ncode=lock_missing_lock_types, message=Unable to unlock, lock types should be specified\n\ncode=unlock_missing_lock_types, message=Unable to lock, lock types should be specified\n\ncode=campaign_locked, message=Could not perform the operation. The campaign is locked\n\ncode=step_and_controller_with_same_name, message=Campaign step and controller have the same name\n\ncode=invalid_program_type, message=Invalid program type, length must be between 1 and 128\n\ncode=incompatible_program_type, message=Program type is not compatible with an existing campaign from the current program\n\ncode=program_type_empty, message=Program type cannot be empty or null\n\ncode=invalid_theme_name, message=Invalid theme_name, length must be between 1 and 255\n\ncode=campaign_has_pending_changes, message=Campaign can't be pushed live since it has pending changes that are not discarded or published\n\ncode=campaign_invalid_tag, message=A tag contains invalid characters\n\ncode=campaign_tags_too_long, message=Tags length is too long\n\ncode=invalid_step_name, message=Invalid step name\n\ncode=invalid_step_category, message=Invalid step category\n\ncode=duplicate_step_name, message=A step with this name is already associated with this campaign\n\ncode=invalid_step_alias, message=Invalid step alias\n\ncode=name_same_as_a_default_controller_name, message=Campaign step name same as a default controller name\n\ncode=step_name_length_out_of_range, message=Campaign step name length must be less than 256 characters\n\ncode=campaign_build_failed, message=Campaign build failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=campaign_name_out_of_range, message=Campaign name length must be between 2 and 50 characters\n\ncode=campaign_name_is_missing, message=Campaign name is missing\n\ncode=campaign_description_out_of_range, message=Campaign description length must be between 2 and 250 characters\n\ncode=campaign_name_already_used, message=Campaign name is already used by another campaign\n\ncode=campaign_name_illegal_character, message=Campaign name can only contain alphanumeric, space, dash, parenthesis, slash, colon, comma, period, underscore, dollar and percentage\n\ncode=campaign_label_name_out_of_range, message=Campaign label name length must be between 2 and 50 characters\n\ncode=campaign_label_name_already_in_use, message=Campaign has already a label with this name\n\ncode=campaign_label_name_contains_illegal_character, message=Campaign label name can only contain alphanumeric, dash and underscore characters\n\ncode=campaign_label_name_missing, message=Campaign label name is missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/campaigns/{campaignId}/publish" : {
      "post" : {
        "tags" : [ "/v2/campaigns" ],
        "summary" : "Publish an existing campaign",
        "operationId" : "publish",
        "parameters" : [ {
          "name" : "campaignId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignPublishRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_campaign_id, message=Invalid Campaign Id\n\ncode=invalid_campaign_version, message=Invalid Campaign Version\n\ncode=date_invalid, message=Date is invalid or not ISO-8601 compliant\n\ncode=lock_missing_lock_types, message=Unable to unlock, lock types should be specified\n\ncode=unlock_missing_lock_types, message=Unable to lock, lock types should be specified\n\ncode=campaign_locked, message=Could not perform the operation. The campaign is locked\n\ncode=campaign_controller_name_out_of_range, message=Campaign controller name length must be between 2 and 255 characters\n\ncode=campaign_controller_name_already_in_use, message=Campaign controller name is already used by another controller\n\ncode=campaign_controller_name_contains_illegal_character, message=Campaign controller name can only contain alphanumeric, dash and underscore characters\n\ncode=campaign_controller_name_missing, message=Campaign controller name is missing\n\ncode=campaign_controller_invalid_enabled_on_state, message=Invalid controller enabled on state\n\ncode=invalid_step_alias, message=Invalid step alias\n\ncode=campaign_controller_name_same_as_a_default_controller_name, message=Campaign controller name is the same as a default controller name\n\ncode=campaign_controller_missing_triggers, message=A controller without triggers is invalid\n\ncode=campaign_controller_partner_id_name_out_of_range, message=Campaign controller partner id name length must be between 1 and 50 characters\n\ncode=campaign_controller_data_name_invalid, message=Data name is invalid\n\ncode=campaign_controller_data_name_length_out_of_range, message=Data name length is out of range. Max 255 characters\n\ncode=campaign_controller_data_value_invalid, message=Data value is invalid\n\ncode=campaign_controller_data_value_length_out_of_range, message=Data value length is out of range. Max 2000 characters\n\ncode=campaign_controller_duplicate_data_name, message=Data name is duplicate\n\ncode=campaign_controller_data_default_value_length_out_of_range, message=Data default value length is out of range. Max 2000 characters\n\ncode=campaign_controller_value_length_out_of_range, message=Campaign controller value length is out of range. Max 2000 characters\n\ncode=campaign_controller_value_expression_invalid, message=Campaign controller value expression is invalid\n\ncode=campaign_build_failed, message=Campaign build failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/campaigns/built" : {
      "get" : {
        "tags" : [ "/v2/campaigns" ],
        "summary" : "Get a list with built campaigns",
        "operationId" : "getBuiltCampaigns",
        "parameters" : [ {
          "name" : "version",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reward_supplier_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BuiltCampaignResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_campaign_id, message=Invalid Campaign Id\n\ncode=invalid_campaign_version, message=Invalid Campaign Version\n\ncode=date_invalid, message=Date is invalid or not ISO-8601 compliant\n\ncode=lock_missing_lock_types, message=Unable to unlock, lock types should be specified\n\ncode=unlock_missing_lock_types, message=Unable to lock, lock types should be specified\n\ncode=campaign_locked, message=Could not perform the operation. The campaign is locked\n\ncode=campaign_build_failed, message=Campaign build failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/campaigns/template" : {
      "get" : {
        "tags" : [ "/v2/campaigns" ],
        "summary" : "Gets a list of templates",
        "operationId" : "getTemplateCampaigns",
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CampaignResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/campaigns/{campaignId}{version}" : {
      "get" : {
        "tags" : [ "/v2/campaigns" ],
        "summary" : "Returns a campaign by id",
        "operationId" : "getCampaign",
        "parameters" : [ {
          "name" : "campaignId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_campaign_id, message=Invalid Campaign Id\n\ncode=invalid_campaign_version, message=Invalid Campaign Version\n\ncode=date_invalid, message=Date is invalid or not ISO-8601 compliant\n\ncode=lock_missing_lock_types, message=Unable to unlock, lock types should be specified\n\ncode=unlock_missing_lock_types, message=Unable to lock, lock types should be specified\n\ncode=campaign_locked, message=Could not perform the operation. The campaign is locked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/campaigns/{campaignId}" : {
      "put" : {
        "tags" : [ "/v2/campaigns" ],
        "summary" : "Edit an existing campaign",
        "operationId" : "editCampaign",
        "parameters" : [ {
          "name" : "campaignId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CampaignUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_campaign_id, message=Invalid Campaign Id\n\ncode=invalid_campaign_version, message=Invalid Campaign Version\n\ncode=date_invalid, message=Date is invalid or not ISO-8601 compliant\n\ncode=lock_missing_lock_types, message=Unable to unlock, lock types should be specified\n\ncode=unlock_missing_lock_types, message=Unable to lock, lock types should be specified\n\ncode=campaign_locked, message=Could not perform the operation. The campaign is locked\n\ncode=step_and_controller_with_same_name, message=Campaign step and controller have the same name\n\ncode=invalid_program_type, message=Invalid program type, length must be between 1 and 128\n\ncode=incompatible_program_type, message=Program type is not compatible with an existing campaign from the current program\n\ncode=program_type_empty, message=Program type cannot be empty or null\n\ncode=invalid_theme_name, message=Invalid theme_name, length must be between 1 and 255\n\ncode=campaign_has_pending_changes, message=Campaign can't be pushed live since it has pending changes that are not discarded or published\n\ncode=campaign_invalid_tag, message=A tag contains invalid characters\n\ncode=campaign_tags_too_long, message=Tags length is too long\n\ncode=campaign_build_failed, message=Campaign build failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=campaign_name_out_of_range, message=Campaign name length must be between 2 and 50 characters\n\ncode=campaign_name_is_missing, message=Campaign name is missing\n\ncode=campaign_description_out_of_range, message=Campaign description length must be between 2 and 250 characters\n\ncode=campaign_name_already_used, message=Campaign name is already used by another campaign\n\ncode=campaign_name_illegal_character, message=Campaign name can only contain alphanumeric, space, dash, parenthesis, slash, colon, comma, period, underscore, dollar and percentage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/tokens" : {
      "get" : {
        "tags" : [ "/v4/tokens" ],
        "description" : "Used to get access token details",
        "operationId" : "get",
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v4/tokens" ],
        "description" : "Used to create a new access token",
        "operationId" : "create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccessTokenCreationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_duration, message=The requested duration for this token must end within the first ten millenium",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=access_denied, message=Access Denied\n\ncode=invalid_credentials, message=The credentials provided with this request are invalid.\n\ncode=expired_credentials, message=The credentials provided with this request are expired.\n\ncode=missing_credentials, message=No credentials provided with this request.\n\ncode=account_locked, message=The credentials provided with this request are invalid. Account has been locked.\n\ncode=account_disabled, message=The credentials provided with this request are invalid. Account has been disabled.\n\ncode=scopes_denied, message=Requested scopes is not a subset of current scopes.\n\ncode=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/tokens/{token}" : {
      "delete" : {
        "tags" : [ "/v4/tokens" ],
        "description" : "Used to invalidate an existing access token",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/tokens/openid-connect/authorization-code-flow" : {
      "post" : {
        "tags" : [ "/v4/tokens" ],
        "description" : "Used to validate an existing access token",
        "operationId" : "validate",
        "parameters" : [ {
          "name" : "X-CSRF-TOKEN",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-NONCE",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthCodeResponseValidateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=authorization_code_missing_code, message=Authorization Code Flow required code parameter is missing\n\ncode=authorization_code_missing_state, message=Authorization Code Flow required state parameter is missing\n\ncode=authorization_code_missing_csrf_token, message=Authorization Code Flow required csrf token header is missing\n\ncode=authorization_code_missing_nonce, message=Authorization Code Flow required nonce header is missing\n\ncode=authorization_code_response_invalid, message=Authorization Code Response is invalid or expired.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/tokens/exchange/{token}" : {
      "put" : {
        "tags" : [ "/v4/tokens" ],
        "description" : "Used to change existing access token to a new one",
        "operationId" : "exchange",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/clients/{clientId}" : {
      "put" : {
        "tags" : [ "/v4/clients" ],
        "summary" : "Used to update client",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=duplicate_client, message=Client already defined\n\ncode=duplicate_domain, message=Domain already defined\n\ncode=invalid_name, message=The provided client name was invalid\n\ncode=invalid_short_name, message=The provided short name was invalid\n\ncode=invalid_pod, message=The provided pod was invalid\n\ncode=invalid_case_domain_name, message=The provided domain name is not lowercase\n\ncode=invalid_user_email, message=The provided user email was invalid\n\ncode=invalid_user_first_name, message=The provided user first name was invalid\n\ncode=invalid_user_last_name, message=The provided user last name was invalid\n\ncode=invalid_password_length, message=Password is too short\n\ncode=password_already_used, message=Password had already been used, choose another one\n\ncode=invalid_password_change_limit, message=Password has been changed too many times. Your account has been disabled. Please contact: support@extole.com\n\ncode=invalid_password_strength_letters_digits, message=Password is too weak, it must contain at least one digit, one lowercase, and one uppercase letter\n\ncode=invalid_password_strength_letters_digits_punctuation, message=Password is too weak, it must contain at least one digit, one lowercase letter, one uppercase letter, and one punctuation mark\n\ncode=common_password, message=Password is too weak\n\ncode=invalid_verification_code, message=Verification code is invalid\n\ncode=verification_code_already_used, message=Verification code was already used\n\ncode=account_disabled, message=Your account is disabled. Please contact: support@extole.com\n\ncode=invalid_property_name, message=Invalid property name\n\ncode=property_name_too_long, message=Property name must be between 1 and 255 characters\n\ncode=property_value_too_long, message=Property value must be under 255 characters\n\ncode=property_null_value, message=Property value cannot be null\n\ncode=missing_slack_channel, message=Client slack channel is missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/clients" : {
      "get" : {
        "tags" : [ "/v4/clients" ],
        "summary" : "Returns a client",
        "operationId" : "clients",
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ClientResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v4/clients" ],
        "summary" : "Creates a new client",
        "operationId" : "create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientCreationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=duplicate_client, message=Client already defined\n\ncode=duplicate_domain, message=Domain already defined\n\ncode=invalid_name, message=The provided client name was invalid\n\ncode=invalid_short_name, message=The provided short name was invalid\n\ncode=invalid_pod, message=The provided pod was invalid\n\ncode=invalid_case_domain_name, message=The provided domain name is not lowercase\n\ncode=invalid_user_email, message=The provided user email was invalid\n\ncode=invalid_user_first_name, message=The provided user first name was invalid\n\ncode=invalid_user_last_name, message=The provided user last name was invalid\n\ncode=invalid_password_length, message=Password is too short\n\ncode=password_already_used, message=Password had already been used, choose another one\n\ncode=invalid_password_change_limit, message=Password has been changed too many times. Your account has been disabled. Please contact: support@extole.com\n\ncode=invalid_password_strength_letters_digits, message=Password is too weak, it must contain at least one digit, one lowercase, and one uppercase letter\n\ncode=invalid_password_strength_letters_digits_punctuation, message=Password is too weak, it must contain at least one digit, one lowercase letter, one uppercase letter, and one punctuation mark\n\ncode=common_password, message=Password is too weak\n\ncode=invalid_verification_code, message=Verification code is invalid\n\ncode=verification_code_already_used, message=Verification code was already used\n\ncode=account_disabled, message=Your account is disabled. Please contact: support@extole.com\n\ncode=invalid_property_name, message=Invalid property name\n\ncode=property_name_too_long, message=Property name must be between 1 and 255 characters\n\ncode=property_value_too_long, message=Property value must be under 255 characters\n\ncode=property_null_value, message=Property value cannot be null\n\ncode=missing_slack_channel, message=Client slack channel is missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/data" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Get a list with profile data",
        "description" : "Returns data for a person, sorted by updated date in descending order.",
        "operationId" : "getData",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Optional filter for data name",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "Optional filter for data scope, one of PUBLIC, PRIVATE",
          "schema" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "CLIENT" ]
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Optional offset filter, defaults to 0.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Optional limit filter, defaults to 100.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonDataResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Gets Details for a Person",
        "operationId" : "getPerson",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/steps" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Get a list with steps",
        "description" : "Returns steps for a person, sorted by event date in descending order.",
        "operationId" : "getSteps",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "container",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "campaign_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "program_label",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partner_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "flow_path",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "visit_type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonStepResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=person_step_invalid_visit_type, message=Person step visit type is invalid\n\ncode=person_step_invalid_flow_query, message=Person step flow query is invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/shareables" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Get a list with shareables",
        "description" : "Returns shareables for a person, sorted by updated date in descending order.",
        "operationId" : "getShareables",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Optional offset filter, defaults to 0.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Optional limit filter, defaults to 100.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonShareableResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/shares" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Get a list with shares",
        "description" : "Returns shares for a person, sorted by share date in descending order.",
        "operationId" : "getShares",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "campaign_id",
          "in" : "query",
          "description" : "Optional campaign id filter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partner_share_id",
          "in" : "query",
          "description" : "Optional partner share id filter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partner_id",
          "in" : "query",
          "description" : "Optional partner id filter, using this format: <name>:<value>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Optional offset filter, defaults to 0.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Optional limit filter, defaults to 100.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonShareResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/shareables/{code}" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Get a shareable",
        "description" : "Returns a shareable by a given code",
        "operationId" : "getShareableByCode",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Shareable code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonShareableResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.\n\ncode=shareable_not_found, message=Shareable not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/journeys" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Get a list with journeys",
        "description" : "Returns journeys for a person, sorted by updated date in descending order.",
        "operationId" : "getJourneys",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "campaign_id",
          "in" : "query",
          "description" : "Optional campaign id filter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "program_label",
          "in" : "query",
          "description" : "Optional program label filter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "container",
          "in" : "query",
          "description" : "Optional container filter, defaults to production container. Pass \"*\" to include steps for all containers",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Optional journey type filter, one of friend or advocate.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Optional offset filter, defaults to 0.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Optional limit filter, defaults to 100.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonJourneyResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_journey_type, message=Invalid journey type\n\ncode=journey_not_found, message=Journey not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/rewards" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Get a list with rewards",
        "description" : "Returns rewards for a person, sorted by created date in descending order.",
        "operationId" : "getRewards",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "program_label",
          "in" : "query",
          "description" : "Optional program label filter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "campaign_id",
          "in" : "query",
          "description" : "Optional campaign id filter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reward_state",
          "in" : "query",
          "description" : "Optional reward states list filter separated by comma, one of earned, fulfilled, sent, redeemed, failed, canceled, revoked.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reward_type",
          "in" : "query",
          "description" : "Optional reward types list filter separated by comma, one of manual_coupon, salesforce_coupon, tango_v2, custom_reward, paypal_payouts.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Optional offset filter, defaults to 0.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Optional limit filter, defaults to 100.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonRewardResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=reward_states_invalid, message=Reward states not supported\n\ncode=reward_types_invalid, message=Reward types not supported",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/relationships" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Get a list with relationships",
        "description" : "Returns relationships for a person, sorted by updated date in descending order.",
        "operationId" : "getRelationships",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "container",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "role",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "FRIEND", "ADVOCATE" ]
          }
        }, {
          "name" : "exclude_anonymous",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "include_duplicate_identities",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "include_self_referrals",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonRelationshipResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_role, message=Invalid role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/request-contexts" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Get a list with request contexts",
        "description" : "Returns request contexts for a person",
        "operationId" : "getRequestContexts",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RequestContextResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/network-stats" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Gets calculated statistics for the network of a Person",
        "operationId" : "getNetworkStats",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "container",
          "in" : "query",
          "description" : "Optional container filter, defaults to production container. Pass \"*\" to include steps for all containers",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "exclude_anonymous",
          "in" : "query",
          "description" : "Optional flag to exclude relationships with anonymous persons.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonNetworkStatsResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/persons/{person_id}/stats" : {
      "get" : {
        "tags" : [ "/v4/persons" ],
        "summary" : "Gets calculated statistics for a Person",
        "operationId" : "getStats",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "container",
          "in" : "query",
          "description" : "Optional container filter, defaults to production container. Pass \"*\" to include steps for all containers",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonStatsResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/runtime-persons" : {
      "get" : {
        "tags" : [ "/v4/runtime-persons" ],
        "summary" : "Get a list of persons",
        "description" : "This allows searching for a person at Extole using either the email address,\npartner user id (partner user id is YOUR unique identifier for this person),\nlast name or person keys defined by the client (partner_conversion_id, partner_shipment_id etc.).\nThe result is currently an array as sometimes Extole will create multiple profiles for the same person,\n such as the instance where the same email address may be tied to multiple partner user ids,\nor multiple persons matched the client person keys that were passed in the query.",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partner_user_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "last_name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "partner_id",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v4/runtime-persons" ],
        "summary" : "Creates a Person in the Extole Platform.",
        "description" : "This operation can be done by an authorized user",
        "operationId" : "create",
        "requestBody" : {
          "description" : "PersonRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_picture_url, message=Invalid picture_url\n\ncode=invalid_email, message=Invalid email\n\ncode=person_email_already_defined, message=Person email already defined\n\ncode=partner_user_id_invalid_length, message=Partner user id length greater than 255 characters\n\ncode=invalid_length_first_name, message=First Name length greater than 50 characters\n\ncode=invalid_length_last_name, message=Last Name length greater than 50 characters\n\ncode=person_partner_user_id_already_defined, message=Person partner user id already defined\n\ncode=invalid_block_reason, message=Block reason can't be empty",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/runtime-persons/{person_id}" : {
      "get" : {
        "tags" : [ "/v4/runtime-persons" ],
        "summary" : "Gets Details for a Person",
        "operationId" : "getPerson",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "/v4/runtime-persons" ],
        "summary" : "Updates a person",
        "description" : "This operation can be done by an authorized user",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "Id for person to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "PersonRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_picture_url, message=Invalid picture_url\n\ncode=invalid_email, message=Invalid email\n\ncode=person_email_already_defined, message=Person email already defined\n\ncode=partner_user_id_invalid_length, message=Partner user id length greater than 255 characters\n\ncode=invalid_length_first_name, message=First Name length greater than 50 characters\n\ncode=invalid_length_last_name, message=Last Name length greater than 50 characters\n\ncode=person_partner_user_id_already_defined, message=Person partner user id already defined\n\ncode=invalid_block_reason, message=Block reason can't be empty",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/runtime-persons/{person_id}/shareables" : {
      "get" : {
        "tags" : [ "/v4/runtime-persons" ],
        "summary" : "Get a list with shareables",
        "description" : "Returns shareables for a person.",
        "operationId" : "getShareables",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonShareableResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/runtime-persons/{person_id}/shareables/{code}" : {
      "get" : {
        "tags" : [ "/v4/runtime-persons" ],
        "summary" : "Get a shareable",
        "description" : "Returns a shareable by a given code.",
        "operationId" : "getShareableByCode",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Shareable code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonShareableResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.\n\ncode=shareable_not_found, message=Shareable not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/runtime-persons/{person_id}/relationships" : {
      "get" : {
        "tags" : [ "/v4/runtime-persons" ],
        "summary" : "Get a list with relationships",
        "description" : "Returns relationships for a person",
        "operationId" : "getRelationships",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Optional role of the other person in the relationship, friend or advocate.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "exclude_anonymous",
          "in" : "query",
          "description" : "Optional flag to exclude relationships with anonymous persons.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "include_duplicate_identities",
          "in" : "query",
          "description" : "Optional flag to return all relationships, not de-duplicate by identity. Default behavior (or when flag is set to false) returns last relationship per person.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonRelationshipResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_role, message=Invalid role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/runtime-persons/{person_id}/request-contexts" : {
      "get" : {
        "tags" : [ "/v4/runtime-persons" ],
        "summary" : "Get a list with request contexts",
        "description" : "Returns request contexts for a person",
        "operationId" : "getRequestContexts",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RequestContextResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/runtime-persons/{first_person_id}/is-same" : {
      "get" : {
        "tags" : [ "/v4/runtime-persons" ],
        "summary" : "Check if is the same person",
        "description" : "Verify if two IDs refer to the same person",
        "operationId" : "isSamePerson",
        "parameters" : [ {
          "name" : "first_person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "person_id",
          "in" : "query",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IsSamePersonResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/runtime-persons/{person_id}/journeys" : {
      "get" : {
        "tags" : [ "/v4/runtime-persons/{person_id}/journeys" ],
        "summary" : "Get a list with journeys",
        "description" : "Returns journeys for a person.",
        "operationId" : "getJourneys",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "container",
          "in" : "query",
          "description" : "Optional container filter, defaults to production container. Pass \"*\" to include steps for all containers",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Optional journey type filter, one of friend or advocate.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonJourneyResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_journey_type, message=Invalid journey type\n\ncode=journey_not_found, message=Journey not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v4/runtime-persons/{person_id}/journeys/{journey_id}" : {
      "get" : {
        "tags" : [ "/v4/runtime-persons/{person_id}/journeys" ],
        "summary" : "Get a journey",
        "description" : "Returns journey for a person and id.",
        "operationId" : "getJourney",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "journey_id",
          "in" : "path",
          "description" : "Journey id parameter.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonJourneyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_journey_type, message=Invalid journey type\n\ncode=journey_not_found, message=Journey not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.\n\ncode=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/persons" : {
      "get" : {
        "tags" : [ "/v2/persons" ],
        "summary" : "Get a list of persons",
        "description" : "This allows searching for a person at Extole using either the email address,\npartner user id (partner user id is YOUR unique identifier for this person),\nlast name or person keys defined by the client (partner_conversion_id, partner_shipment_id etc.).\nThe result is currently an array as sometimes Extole will create multiple profiles for the same person,\n such as the instance where the same email address may be tied to multiple partner user ids,\nor multiple persons matched the client person keys that were passed in the query.",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partner_user_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "last_name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "partner_id",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonV2Response"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v2/persons" ],
        "summary" : "Creates a Person in the Extole Platform.",
        "description" : "This operation can be done by an authorized user",
        "operationId" : "create",
        "requestBody" : {
          "description" : "PersonRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonV2Request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonV2Response"
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_picture_url, message=Invalid picture_url\n\ncode=invalid_email, message=Invalid email\n\ncode=partner_user_id_invalid_length, message=Partner user id length greater than 255 characters\n\ncode=invalid_length_first_name, message=First Name length greater than 50 characters\n\ncode=invalid_length_last_name, message=Last Name length greater than 50 characters\n\ncode=person_partner_user_id_already_defined, message=Person partner user id already defined\n\ncode=person_email_already_defined, message=Person email already defined\n\ncode=invalid_block_reason, message=Block reason can't be empty",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/persons/{person_id}" : {
      "get" : {
        "tags" : [ "/v2/persons" ],
        "summary" : "Gets Details for a Person",
        "operationId" : "getPerson",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonV2Response"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "/v2/persons" ],
        "summary" : "Updates a person",
        "description" : "This operation can be done by an authorized user",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "Id for person to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "PersonRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonV2Request"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonV2Response"
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_picture_url, message=Invalid picture_url\n\ncode=invalid_email, message=Invalid email\n\ncode=partner_user_id_invalid_length, message=Partner user id length greater than 255 characters\n\ncode=invalid_length_first_name, message=First Name length greater than 50 characters\n\ncode=invalid_length_last_name, message=Last Name length greater than 50 characters\n\ncode=person_partner_user_id_already_defined, message=Person partner user id already defined\n\ncode=person_email_already_defined, message=Person email already defined\n\ncode=invalid_block_reason, message=Block reason can't be empty",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/persons/{first_person_id}/is-same" : {
      "get" : {
        "tags" : [ "/v2/persons" ],
        "summary" : "Check if is the same person",
        "description" : "Verify if two IDs refer to the same person",
        "operationId" : "isSamePerson",
        "parameters" : [ {
          "name" : "first_person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "person_id",
          "in" : "query",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IsSamePersonV2Response"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/persons/{person_id}/advocates" : {
      "get" : {
        "tags" : [ "/v2/persons" ],
        "summary" : "Get a list with advocates",
        "description" : "Returns advocates for a person",
        "operationId" : "getAssociatedAdvocates",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RelationshipV2Response"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/persons/{person_id}/friends" : {
      "get" : {
        "tags" : [ "/v2/persons" ],
        "summary" : "Get a list with friends",
        "description" : "Returns friends of a person",
        "operationId" : "getAssociatedFriends",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "The Extole unique profile identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RelationshipV2Response"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/persons/{person_id}/referrals-to-person" : {
      "get" : {
        "tags" : [ "/v2/persons" ],
        "summary" : "Get a list with referrals",
        "description" : "Returns a list with referrals to a person",
        "operationId" : "getReferralsToPerson",
        "parameters" : [ {
          "name" : "person_id",
          "in" : "path",
          "description" : "personId to get referrals",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RelationshipV2Response"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=person_not_found, message=Person not found\n\ncode=person_referenced_by_active_managed_authorization, message=The person can't be archived due active reference from managed authorization.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/prehandlers/{prehandlerId}" : {
      "get" : {
        "tags" : [ "/v6/prehandlers" ],
        "summary" : "Retrieve a prehandler",
        "description" : "Retrieves an existing prehandler.",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "prehandlerId",
          "in" : "path",
          "description" : "The id of the prehandler to be retrieved.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrehandlerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=prehandler_not_found, message=Prehandler not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "/v6/prehandlers" ],
        "summary" : "Update prehandler",
        "description" : "Updates an existing prehandler.",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "prehandlerId",
          "in" : "path",
          "description" : "The id of the prehandler to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "PrehandlerUpdateRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrehandlerUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrehandlerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=prehandler_not_found, message=Prehandler not found\n\ncode=prehandler_name_missing, message=Prehandler name is missing\n\ncode=prehandler_name_length_out_of_range, message=Prehandler name length must be between 1 and 255 characters\n\ncode=prehandler_name_contains_illegal_character, message=Prehandler name can only contain alphanumeric, dash, dot and underscore characters\n\ncode=prehandler_name_duplicated, message=Prehandler with this name already exists for the current client\n\ncode=prehandler_description_length_out_of_range, message=Prehandler description length must be between 1 and 512 characters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "/v6/prehandlers" ],
        "summary" : "Delete prehandler",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "prehandlerId",
          "in" : "path",
          "description" : "The id of the prehandler to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrehandlerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=prehandler_not_found, message=Prehandler not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/prehandlers" : {
      "get" : {
        "tags" : [ "/v6/prehandlers" ],
        "summary" : "List existing prehandlers",
        "description" : "Returns the existing prehandlers, sorted by their execution order.",
        "operationId" : "list",
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrehandlerResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v6/prehandlers" ],
        "summary" : "Create new prehandler",
        "description" : "Creates a new prehandler.",
        "operationId" : "create",
        "requestBody" : {
          "description" : "PrehandlerCreateRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrehandlerCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrehandlerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=prehandler_name_missing, message=Prehandler name is missing\n\ncode=prehandler_name_length_out_of_range, message=Prehandler name length must be between 1 and 255 characters\n\ncode=prehandler_name_contains_illegal_character, message=Prehandler name can only contain alphanumeric, dash, dot and underscore characters\n\ncode=prehandler_name_duplicated, message=Prehandler with this name already exists for the current client\n\ncode=prehandler_description_length_out_of_range, message=Prehandler description length must be between 1 and 512 characters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/settings/security/keys/pgp-extole" : {
      "get" : {
        "tags" : [ "/v2/settings/security/keys/pgp-extole" ],
        "summary" : "Get a list of Pgp Extole Keys",
        "description" : "This operation allows to get a list of Pgp Extole Keys, By default each Client has one Pgp Extole Key",
        "operationId" : "listPgpExtoleKeys",
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PgpExtoleClientKeyResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/settings/security/keys/pgp-extole/private" : {
      "post" : {
        "tags" : [ "/v2/settings/security/keys/pgp-extole" ],
        "summary" : "Create a Pgp Extole Key",
        "description" : "This operation allows SuperUser to create a KeyRing containing public/private Key Pair by passing a Base64 encoded private key which is configured with the Extole passphrase from environment configuration",
        "operationId" : "createPgpExtoleKey",
        "requestBody" : {
          "description" : "KeyCreateRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PgpExtoleClientKeyCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PgpExtoleClientKeyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=key_missing_name, message=Key required name is not specified\n\ncode=key_missing, message=Key value is not specified\n\ncode=key_missing_algorithm, message=Key algorithm is not specified\n\ncode=key_invalid_name, message=Allowed name length is 255 containing ASCII characters\n\ncode=key_invalid_description, message=Allowed description length is 1024 containing ASCII characters\n\ncode=key_too_short, message=Key does not satisfy min length requirement for the associated algorithm\n\ncode=key_not_base64_encoded, message=Key value is expected to be Base64 encoded\n\ncode=key_invalid, message=Invalid key\n\ncode=key_missing_partner_id, message=Key partner id is not specified\n\ncode=key_duplicate_partner_key_id, message=Key with such partner key id already defined\n\ncode=key_invalid_partner_key_id, message=Partner key id should be up to 240 characters\n\ncode=client_key_missing_type, message=Key type is not specified\n\ncode=client_key_unsupported_type, message=Key type is not supported for this algorithm\n\ncode=pgp_extole_client_key_missing_email, message=PGP Extole Client Key required email is not specified\n\ncode=pgp_extole_client_key_duplicate_email, message=PGP Extole Client Key with such email already defined\n\ncode=pgp_extole_client_key_invalid_email, message=PGP Extole Client Key email is invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/settings/security/keys/pgp-extole/private/{key_id}" : {
      "delete" : {
        "tags" : [ "/v2/settings/security/keys/pgp-extole" ],
        "summary" : "Delete a Pgp Extole Key",
        "operationId" : "archivePgpExtoleKey",
        "parameters" : [ {
          "name" : "key_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PgpExtoleClientKeyResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=key_not_found, message=Key is not found\n\ncode=associated_client_key, message=ClientKey associated with SftpServer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/subscriptions" : {
      "get" : {
        "tags" : [ "/v6/subscriptions" ],
        "summary" : "Gets subscriptions for a client",
        "operationId" : "listSubscriptions",
        "parameters" : [ {
          "name" : "having_any_tags",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "having_all_tags",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubscriptionResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/users/{user_id}/subscriptions/{subscription_id}" : {
      "get" : {
        "tags" : [ "/v6/users/{user_id}/subscriptions" ],
        "summary" : "Gets a particular subscription for a user",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "The unique identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSubscriptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=invalid_user_id, message=Invalid user id\n\ncode=invalid_scope, message=Invalid scope\n\ncode=invalid_subscription_id, message=Invalid subscription id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "/v6/users/{user_id}/subscriptions" ],
        "summary" : "create a subscription for a user",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "The unique identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserSubscriptionUpdateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSubscriptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=invalid_user_id, message=Invalid user id\n\ncode=invalid_scope, message=Invalid scope\n\ncode=duplicate_user_subscription, message=User subscription already exists\n\ncode=invalid_tags, message=total length of tags cannot exceed 1024 characters\n\ncode=invalid_dedupe_duration, message=dedupe duration must be between 0 and 604800ms\n\ncode=invalid_subscription_id, message=Invalid subscription id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "/v6/users/{user_id}/subscriptions" ],
        "summary" : "deletes a particular subscription for a user",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "The unique identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=invalid_user_id, message=Invalid user id\n\ncode=invalid_scope, message=Invalid scope\n\ncode=invalid_subscription_id, message=Invalid subscription id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/users/{user_id}/subscriptions" : {
      "get" : {
        "tags" : [ "/v6/users/{user_id}/subscriptions" ],
        "summary" : "Gets subscriptions for a user",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "The unique identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserSubscriptionResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=invalid_user_id, message=Invalid user id\n\ncode=invalid_scope, message=Invalid scope",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v6/users/{user_id}/subscriptions" ],
        "summary" : "create a subscription for a user",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "description" : "The unique identifier of this user at Extole.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserSubscriptionRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSubscriptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.\n\ncode=invalid_user_id, message=Invalid user id\n\ncode=invalid_scope, message=Invalid scope\n\ncode=duplicate_user_subscription, message=User subscription already exists\n\ncode=invalid_tags, message=total length of tags cannot exceed 1024 characters\n\ncode=invalid_dedupe_duration, message=dedupe duration must be between 0 and 604800ms",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v2/client-version" : {
      "get" : {
        "tags" : [ "/v2/client-version" ],
        "summary" : "client version information",
        "description" : "Returns current client version and whether all instances have received the versions changes",
        "operationId" : "get",
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientVersionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/webhooks/{webhook_id}" : {
      "get" : {
        "tags" : [ "/v6/webhooks" ],
        "summary" : "Get webhook",
        "operationId" : "getWebhook",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=webhook_not_found, message=Webhook is not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "/v6/webhooks" ],
        "summary" : "Update webhook",
        "operationId" : "updateWebhook",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "description" : "The id of the webhook to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "WebhookUpdateRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebhookUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=webhook_not_found, message=Webhook is not found\n\ncode=unknown_webhook_type, message=Specified webhook type is unknown\n\ncode=webhook_missing_url, message=Webhook required url is not specified\n\ncode=webhook_missing_name, message=Webhook required name is not specified\n\ncode=webhook_invalid_name, message=Webhook allowed name length is 255 containing ASCII characters\n\ncode=webhook_invalid_description, message=Webhook allowed description length is 1024 containing ASCII characters\n\ncode=webhook_malformed_url, message=Webhook url is malformed\n\ncode=webhook_invalid_tag, message=A tag contains invalid characters\n\ncode=webhook_tags_too_long, message=Tags length is too long\n\ncode=webhook_client_key_not_found, message=Client key not found\n\ncode=webhook_request_javascript_invalid, message=Request javascript is invalid\n\ncode=webhook_request_javascript_invalid_length, message=The webhook request expression can't be blank\n\ncode=webhook_response_handler_javascript_invalid, message=Response handler javascript is invalid\n\ncode=webhook_response_handler_javascript_invalid_length, message=The webhook response handler expression can't be blank\n\ncode=webhook_invalid_default_method, message=Specified webhook HTTP method is invalid, expected one of POST, GET, PUT\n\ncode=invalid_null, message=The attribute may be omitted but not nullified",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "/v6/webhooks" ],
        "summary" : "Delete webhook",
        "operationId" : "archiveWebhook",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "description" : "The id of the webhook to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=webhook_not_found, message=Webhook is not found\n\ncode=webhook_associated_with_webhook_action, message=Can't archive or disable a webhook associated with webhook actions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/webhooks" : {
      "get" : {
        "tags" : [ "/v6/webhooks" ],
        "summary" : "List webhooks",
        "operationId" : "listWebhooks",
        "parameters" : [ {
          "name" : "enabled",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "REWARD", "GENERIC" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WebhookResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v6/webhooks" ],
        "summary" : "Create webhook",
        "operationId" : "createWebhook",
        "requestBody" : {
          "description" : "WebhookCreateRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebhookCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=unknown_webhook_type, message=Specified webhook type is unknown\n\ncode=webhook_missing_url, message=Webhook required url is not specified\n\ncode=webhook_missing_name, message=Webhook required name is not specified\n\ncode=webhook_invalid_name, message=Webhook allowed name length is 255 containing ASCII characters\n\ncode=webhook_invalid_description, message=Webhook allowed description length is 1024 containing ASCII characters\n\ncode=webhook_malformed_url, message=Webhook url is malformed\n\ncode=webhook_invalid_tag, message=A tag contains invalid characters\n\ncode=webhook_tags_too_long, message=Tags length is too long\n\ncode=webhook_client_key_not_found, message=Client key not found\n\ncode=webhook_request_javascript_invalid, message=Request javascript is invalid\n\ncode=webhook_request_javascript_invalid_length, message=The webhook request expression can't be blank\n\ncode=webhook_response_handler_javascript_invalid, message=Response handler javascript is invalid\n\ncode=webhook_response_handler_javascript_invalid_length, message=The webhook response handler expression can't be blank\n\ncode=webhook_invalid_default_method, message=Specified webhook HTTP method is invalid, expected one of POST, GET, PUT",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/audience-lists/{audienceId}/refresh" : {
      "post" : {
        "tags" : [ "/v6/audience-lists" ],
        "summary" : "Refreshes the AudienceList, in case of DynamicAudienceList it is re-executed",
        "operationId" : "refresh",
        "parameters" : [ {
          "name" : "audienceId",
          "in" : "path",
          "description" : "The AudienceList unique identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AudienceListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=audience_list_source_not_found, message=Audience List source not found, check that configured report or ReportRunner is present\n\ncode=audience_list_refresh_error, message=Unable to refresh audience list\n\ncode=audience_list_content_not_available, message=Content not available\n\ncode=audience_list_format_not_available, message=Content not available in requested format\n\ncode=audience_list_format_not_supported, message=Format not supported\n\ncode=audience_list_preview_not_available, message=Preview not available",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=audience_list_not_found, message=Audience list not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/audience-lists/{audienceId}/snapshot" : {
      "post" : {
        "tags" : [ "/v6/audience-lists" ],
        "summary" : "Creates a snapshot for the AudienceList",
        "operationId" : "snapshot",
        "parameters" : [ {
          "name" : "audienceId",
          "in" : "path",
          "description" : "The AudienceList unique identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AudienceListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=audience_list_source_not_found, message=Audience List source not found, check that configured report or ReportRunner is present\n\ncode=audience_list_refresh_error, message=Unable to refresh audience list\n\ncode=audience_list_content_not_available, message=Content not available\n\ncode=audience_list_format_not_available, message=Content not available in requested format\n\ncode=audience_list_format_not_supported, message=Format not supported\n\ncode=audience_list_preview_not_available, message=Preview not available",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=audience_list_not_found, message=Audience list not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/audience-lists/{audienceId}" : {
      "get" : {
        "tags" : [ "/v6/audience-lists" ],
        "summary" : "Gets AudienceList details",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "audienceId",
          "in" : "path",
          "description" : "The AudienceList unique identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AudienceListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=audience_list_source_not_found, message=Audience List source not found, check that configured report or ReportRunner is present\n\ncode=audience_list_refresh_error, message=Unable to refresh audience list\n\ncode=audience_list_content_not_available, message=Content not available\n\ncode=audience_list_format_not_available, message=Content not available in requested format\n\ncode=audience_list_format_not_supported, message=Format not supported\n\ncode=audience_list_preview_not_available, message=Preview not available",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=audience_list_not_found, message=Audience list not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "/v6/audience-lists" ],
        "summary" : "Updates an existing AudienceList",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "audienceId",
          "in" : "path",
          "description" : "The AudienceList unique identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AudienceListRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AudienceListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=audience_list_source_not_found, message=Audience List source not found, check that configured report or ReportRunner is present\n\ncode=audience_list_refresh_error, message=Unable to refresh audience list\n\ncode=audience_list_content_not_available, message=Content not available\n\ncode=audience_list_format_not_available, message=Content not available in requested format\n\ncode=audience_list_format_not_supported, message=Format not supported\n\ncode=audience_list_preview_not_available, message=Preview not available\n\ncode=audience_list_name_empty, message=Name can't be empty\n\ncode=audience_list_name_too_long, message=Name max length is 255\n\ncode=audience_list_description_too_long, message=Description max length is 1024\n\ncode=dynamic_audience_list_report_runner_id_missing, message=ReportRunnerId is mandatory\n\ncode=dynamic_audience_list_report_runner_not_found, message=ReportRunner not found\n\ncode=dynamic_audience_list_report_runner_not_accessible, message=ReportRunner is not accessible for client\n\ncode=static_audience_list_report_id_missing, message=ReportId is mandatory\n\ncode=static_audience_list_report_not_found, message=Report not found\n\ncode=static_audience_list_report_not_accessible, message=Report is not accessible for clients\n\ncode=uploaded_audience_list_file_asset_id_missing, message=FileAsset id is mandatory\n\ncode=uploaded_audience_list_file_asset_not_found, message=FileAsset not found\n\ncode=uploaded_audience_list_update_not_allowed, message=FileAssetId update not allowed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=audience_list_not_found, message=Audience list not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/audience-lists" : {
      "get" : {
        "tags" : [ "/v6/audience-lists" ],
        "summary" : "Lists AudienceList details",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "states",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DRAFT", "BUILDING", "READY", "FAILED", "EXPIRED" ]
            }
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "STATIC", "DYNAMIC", "UPLOADED" ]
          }
        }, {
          "name" : "include_archived",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AudienceListResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=audience_list_source_not_found, message=Audience List source not found, check that configured report or ReportRunner is present\n\ncode=audience_list_refresh_error, message=Unable to refresh audience list\n\ncode=audience_list_content_not_available, message=Content not available\n\ncode=audience_list_format_not_available, message=Content not available in requested format\n\ncode=audience_list_format_not_supported, message=Format not supported\n\ncode=audience_list_preview_not_available, message=Preview not available",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=audience_list_not_found, message=Audience list not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v6/audience-lists" ],
        "summary" : "Creates a new AudienceList",
        "operationId" : "create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AudienceListRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AudienceListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=audience_list_name_empty, message=Name can't be empty\n\ncode=audience_list_name_too_long, message=Name max length is 255\n\ncode=audience_list_description_too_long, message=Description max length is 1024\n\ncode=dynamic_audience_list_report_runner_id_missing, message=ReportRunnerId is mandatory\n\ncode=dynamic_audience_list_report_runner_not_found, message=ReportRunner not found\n\ncode=dynamic_audience_list_report_runner_not_accessible, message=ReportRunner is not accessible for client\n\ncode=static_audience_list_report_id_missing, message=ReportId is mandatory\n\ncode=static_audience_list_report_not_found, message=Report not found\n\ncode=static_audience_list_report_not_accessible, message=Report is not accessible for clients\n\ncode=audience_list_source_not_found, message=Audience List source not found, check that configured report or ReportRunner is present\n\ncode=audience_list_refresh_error, message=Unable to refresh audience list\n\ncode=audience_list_content_not_available, message=Content not available\n\ncode=audience_list_format_not_available, message=Content not available in requested format\n\ncode=audience_list_format_not_supported, message=Format not supported\n\ncode=audience_list_preview_not_available, message=Preview not available\n\ncode=uploaded_audience_list_file_asset_id_missing, message=FileAsset id is mandatory\n\ncode=uploaded_audience_list_file_asset_not_found, message=FileAsset not found\n\ncode=uploaded_audience_list_update_not_allowed, message=FileAssetId update not allowed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=audience_list_not_found, message=Audience list not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/audience-lists/{audienceId}/archive" : {
      "post" : {
        "tags" : [ "/v6/audience-lists" ],
        "summary" : "Archives an AudienceList",
        "description" : "Returns the archived AudienceList",
        "operationId" : "archive",
        "parameters" : [ {
          "name" : "audienceId",
          "in" : "path",
          "description" : "The AudienceList unique identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AudienceListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=audience_list_source_not_found, message=Audience List source not found, check that configured report or ReportRunner is present\n\ncode=audience_list_refresh_error, message=Unable to refresh audience list\n\ncode=audience_list_content_not_available, message=Content not available\n\ncode=audience_list_format_not_available, message=Content not available in requested format\n\ncode=audience_list_format_not_supported, message=Format not supported\n\ncode=audience_list_preview_not_available, message=Preview not available",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=audience_list_not_found, message=Audience list not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/audience-lists/{audienceId}/download{format}" : {
      "get" : {
        "tags" : [ "/v6/audience-lists" ],
        "summary" : "Returns AudienceList content in specified format",
        "operationId" : "download",
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "audienceId",
          "in" : "path",
          "description" : "The AudienceList unique identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "path",
          "description" : "Format parameter",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit parameter",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset parameter",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          },
          "400" : {
            "description" : "code=audience_list_source_not_found, message=Audience List source not found, check that configured report or ReportRunner is present\n\ncode=audience_list_refresh_error, message=Unable to refresh audience list\n\ncode=audience_list_content_not_available, message=Content not available\n\ncode=audience_list_format_not_available, message=Content not available in requested format\n\ncode=audience_list_format_not_supported, message=Format not supported\n\ncode=audience_list_preview_not_available, message=Preview not available",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=audience_list_not_found, message=Audience list not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/batches/{batchId}/cancel" : {
      "post" : {
        "tags" : [ "/v6/batches" ],
        "summary" : "Cancel an existing batchJob",
        "operationId" : "cancel",
        "parameters" : [ {
          "name" : "batchId",
          "in" : "path",
          "description" : "BatchJob id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchJobResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=batch_job_invalid_operation, message=Current state doesn't allow the specified operation\n\ncode=batch_job_format_not_found, message=Content format not found\n\ncode=batch_job_not_found, message=Content not found\n\ncode=batch_job_progress_retrieval_failure, message=Unable to get progress\n\ncode=batch_job_progress_not_found, message=Progress not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=batch_job_not_found, message=Batch job not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/batches/{batchId}" : {
      "get" : {
        "tags" : [ "/v6/batches" ],
        "summary" : "Get a BatchJob by id",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "batchId",
          "in" : "path",
          "description" : "BatchJob id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchJobResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=batch_job_invalid_operation, message=Current state doesn't allow the specified operation\n\ncode=batch_job_format_not_found, message=Content format not found\n\ncode=batch_job_not_found, message=Content not found\n\ncode=batch_job_progress_retrieval_failure, message=Unable to get progress\n\ncode=batch_job_progress_not_found, message=Progress not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=batch_job_not_found, message=Batch job not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "/v6/batches" ],
        "summary" : "Updates a BatchJob by id",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "batchId",
          "in" : "path",
          "description" : "BatchJob id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchJobUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchJobResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=batch_job_event_name_invalid, message=Invalid batch job event_name, name should have a value, max length 255\n\ncode=batch_job_name_invalid, message=Invalid batch job name, name should have a value, max length 255\n\ncode=batch_job_tag_invalid, message=Invalid batch job tag, name should have a value, max length 255\n\ncode=batch_job_data_source_empty, message=Data source is required\n\ncode=unauthorized_batch_job_scopes, message=Attempt to update scopes to unauthorized values\n\ncode=batch_job_invalid_operation, message=Current state doesn't allow the specified operation\n\ncode=batch_job_format_not_found, message=Content format not found\n\ncode=batch_job_not_found, message=Content not found\n\ncode=batch_job_progress_retrieval_failure, message=Unable to get progress\n\ncode=batch_job_progress_not_found, message=Progress not found\n\ncode=invalid_null, message=The attribute may be omitted but not nullified",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=batch_job_not_found, message=Batch job not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/batches" : {
      "get" : {
        "tags" : [ "/v6/batches" ],
        "summary" : "Get a list with batchJobs",
        "description" : "Returns a list with batchJobs",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "event_name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PENDING", "IN_PROGRESS", "DISPATCHING", "DONE", "FAILED", "CANCELED", "EXPIRED" ]
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BatchJobResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v6/batches" ],
        "summary" : "Creates a new BatchJob",
        "operationId" : "create",
        "requestBody" : {
          "description" : "BatchJob request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchJobCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchJobResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=batch_job_event_name_invalid, message=Invalid batch job event_name, name should have a value, max length 255\n\ncode=batch_job_name_invalid, message=Invalid batch job name, name should have a value, max length 255\n\ncode=batch_job_tag_invalid, message=Invalid batch job tag, name should have a value, max length 255\n\ncode=batch_job_data_source_empty, message=Data source is required\n\ncode=unauthorized_batch_job_scopes, message=Attempt to update scopes to unauthorized values",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/batches/{batchId}/info/{format}" : {
      "get" : {
        "tags" : [ "/v6/batches" ],
        "summary" : "Get a BatchJob info by id",
        "description" : "Returns data in a specified format",
        "operationId" : "info",
        "parameters" : [ {
          "name" : "batchId",
          "in" : "path",
          "description" : "BatchJob id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "path",
          "description" : "Response format, supported formats: CSV",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchJobFormatInfoResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=batch_job_invalid_operation, message=Current state doesn't allow the specified operation\n\ncode=batch_job_format_not_found, message=Content format not found\n\ncode=batch_job_not_found, message=Content not found\n\ncode=batch_job_progress_retrieval_failure, message=Unable to get progress\n\ncode=batch_job_progress_not_found, message=Progress not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=batch_job_not_found, message=Batch job not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/batches/{batchId}/download{format}" : {
      "get" : {
        "tags" : [ "/v6/batches" ],
        "summary" : "Download a BatchJob result by id",
        "description" : "Returns data in the specified format",
        "operationId" : "download",
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "batchId",
          "in" : "path",
          "description" : "BatchJob id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "format",
          "in" : "path",
          "description" : "Format",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit filter",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset filter",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "code=batch_job_invalid_operation, message=Current state doesn't allow the specified operation\n\ncode=batch_job_format_not_found, message=Content format not found\n\ncode=batch_job_not_found, message=Content not found\n\ncode=batch_job_progress_retrieval_failure, message=Unable to get progress\n\ncode=batch_job_progress_not_found, message=Progress not found\n\ncode=invalid_limit, message=Limit should be a non negative integer\n\ncode=invalid_offset, message=Offset should be a non negative integer\n\ncode=max_fetch_size_1000, message=Maximum allowed difference between limit and offset should be 1000",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "\"success\", 12345, ok, ok, (columns on line from original file)*",
            "content" : {
              "text/csv" : { }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=batch_job_not_found, message=Batch job not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/files/{fileId}" : {
      "get" : {
        "tags" : [ "/v6/files" ],
        "summary" : "Returns a FileAsset by id",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "description" : "File asset id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileAssetResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=file_assets_file_processing_error, message=Failed to process uploaded file\n\ncode=file_assets_input_file_invalid, message=Input file is mandatory\n\ncode=file_assets_invalid_file_name, message=Name max length is 255 and should contain only alphanumeric characters\n\ncode=file_assets_file_format_not_supported, message=File format is mandatory, supported formats: CSV, PSV, JSON\n\ncode=file_assets_invalid_tag, message=Tag max length is 255\n\ncode=file_assets_not_found, message=File Asset not found\n\ncode=file_assets_download_exception, message=File Asset can't be downloaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "/v6/files" ],
        "summary" : "Used to remove a FileAsset by id",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "description" : "File asset id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileAssetResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=file_assets_file_processing_error, message=Failed to process uploaded file\n\ncode=file_assets_input_file_invalid, message=Input file is mandatory\n\ncode=file_assets_invalid_file_name, message=Name max length is 255 and should contain only alphanumeric characters\n\ncode=file_assets_file_format_not_supported, message=File format is mandatory, supported formats: CSV, PSV, JSON\n\ncode=file_assets_invalid_tag, message=Tag max length is 255\n\ncode=file_assets_not_found, message=File Asset not found\n\ncode=file_assets_download_exception, message=File Asset can't be downloaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/files" : {
      "get" : {
        "tags" : [ "/v6/files" ],
        "summary" : "Returns a filtered list of FileAssets",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FileAssetResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v6/files" ],
        "summary" : "Creates a FileAsset",
        "operationId" : "create",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FileAssetRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileAssetResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=file_assets_file_processing_error, message=Failed to process uploaded file\n\ncode=file_assets_input_file_invalid, message=Input file is mandatory\n\ncode=file_assets_invalid_file_name, message=Name max length is 255 and should contain only alphanumeric characters\n\ncode=file_assets_file_format_not_supported, message=File format is mandatory, supported formats: CSV, PSV, JSON\n\ncode=file_assets_invalid_tag, message=Tag max length is 255\n\ncode=file_assets_not_found, message=File Asset not found\n\ncode=file_assets_download_exception, message=File Asset can't be downloaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/files/{fileId}/download" : {
      "get" : {
        "tags" : [ "/v6/files" ],
        "summary" : "Downloads a FileAsset by id",
        "operationId" : "download",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "description" : "File asset id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit parameter",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset parameter",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "code=file_assets_file_processing_error, message=Failed to process uploaded file\n\ncode=file_assets_input_file_invalid, message=Input file is mandatory\n\ncode=file_assets_invalid_file_name, message=Name max length is 255 and should contain only alphanumeric characters\n\ncode=file_assets_file_format_not_supported, message=File format is mandatory, supported formats: CSV, PSV, JSON\n\ncode=file_assets_invalid_tag, message=Tag max length is 255\n\ncode=file_assets_not_found, message=File Asset not found\n\ncode=file_assets_download_exception, message=File Asset can't be downloaded\n\ncode=invalid_limit, message=Limit should be a non negative integer\n\ncode=invalid_offset, message=Offset should be a non negative integer\n\ncode=max_fetch_size_1000, message=Maximum allowed difference between limit and offset should be 1000",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/dimensions/{dimensionName}" : {
      "get" : {
        "tags" : [ "/v6/dimensions" ],
        "summary" : "Get dimension values.",
        "operationId" : "getDimensionStats",
        "parameters" : [ {
          "name" : "dimensionName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "campaign_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "program_label",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "container",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "time_period",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "NONE", "MONTHISH", "YEAR" ]
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DimensionStatsResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_limit, message=Limit should be a non negative integer\n\ncode=invalid_offset, message=Offset should be a non negative integer\n\ncode=max_fetch_size_1000, message=Maximum allowed difference between limit and offset should be 1000",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/report-runners/{reportRunnerId}/run" : {
      "post" : {
        "tags" : [ "/v6/report-runners" ],
        "summary" : "Execute report runner for the specified id. Will return existing report if there is any currently in progress or generate a new one otherwise.",
        "operationId" : "run",
        "parameters" : [ {
          "name" : "reportRunnerId",
          "in" : "path",
          "description" : "The Extole unique report runner identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_type_not_found, message=Report type not found\n\ncode=report_type_missing, message=Report type is missing\n\ncode=report_display_name_too_long, message=Report display name is too long\n\ncode=report_missing_parameters, message=Report is missing parameters\n\ncode=report_invalid_operation, message=Current report state doesn't allow the specified operation\n\ncode=report_invalid_parameter, message=Report parameter(s) of invalid format\n\ncode=report_invalid_formats, message=Report formats not supported\n\ncode=report_invalid_scopes, message=Report scopes invalid\n\ncode=report_invalid_sftp_key_missing, message=Client's SFTP key is missing\n\ncode=report_invalid_sftp_server, message=Invalid SFTP server",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=report_runner_not_found, message=Report Runner not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/report-runners/{reportRunnerId}/reports" : {
      "get" : {
        "tags" : [ "/v6/report-runners" ],
        "summary" : "Gets a filtered list of reports executed by the report runner.Results are sorted by schedule date in descending order.",
        "operationId" : "getReports",
        "parameters" : [ {
          "name" : "reportRunnerId",
          "in" : "path",
          "description" : "The Extole unique report runner identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statuses",
          "in" : "query",
          "description" : "Optional filter for statuses, will return reports that have one of the specified values. Valid values: PENDING, IN_PROGRESS, DONE, FAILED, CANCELED, SFTP_DELIVERY_FAILED, EXPIRED",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Optional filter for offset, defaults to 0.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Optional filter for limit, defaults to all.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReportResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_limit, message=Limit should be a non negative integer\n\ncode=invalid_offset, message=Offset should be a non negative integer\n\ncode=max_fetch_size_1000, message=Maximum allowed difference between limit and offset should be 1000\n\ncode=report_runner_invalid_type, message=Report runner type is invalid\n\ncode=report_runner_invalid_status, message=Report runner status is invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/report-runners" : {
      "get" : {
        "tags" : [ "/v6/report-runners" ],
        "summary" : "Gets a filtered list of report runners",
        "operationId" : "getReportRunners",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "report_type_name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "required_tags",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "exclude_tags",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReportRunnerResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_limit, message=Limit should be a non negative integer\n\ncode=invalid_offset, message=Offset should be a non negative integer\n\ncode=max_fetch_size_1000, message=Maximum allowed difference between limit and offset should be 1000\n\ncode=report_runner_invalid_type, message=Report runner type is invalid\n\ncode=report_runner_invalid_status, message=Report runner status is invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v6/report-runners" ],
        "summary" : "Create a report runner.",
        "operationId" : "createReportRunner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportRunnerRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportRunnerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_runner_name_missing, message=Report runner name is missing\n\ncode=report_runner_report_type_missing, message=Report runner report type is missing\n\ncode=report_runner_start_date_missing, message=Report runner start date is missing\n\ncode=report_runner_frequency_missing, message=Report runner frequency is missing\n\ncode=report_runner_type_not_found, message=Report runner type not found\n\ncode=report_runner_missing_parameters, message=Report runner is missing parameters\n\ncode=report_runner_invalid_parameter, message=Report runner parameter(s) of invalid format\n\ncode=report_runner_invalid_formats, message=Report runner formats not supported\n\ncode=report_runner_frequency_not_supported_for_legacy_sftp, message=Report runner frequency is not supported for legacy SFTP name format\n\ncode=report_runner_invalid_scopes, message=Report runner scopes invalid\n\ncode=report_runner_invalid_sftp_server, message=Invalid SFTP server\n\ncode=report_runner_name_exists, message=Report runner name already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/report-runners/{reportRunnerId}" : {
      "get" : {
        "tags" : [ "/v6/report-runners" ],
        "summary" : "Get report runner for the specified id.",
        "operationId" : "getReportRunner",
        "parameters" : [ {
          "name" : "reportRunnerId",
          "in" : "path",
          "description" : "The Extole unique report runner identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportRunnerResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=report_runner_not_found, message=Report Runner not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "/v6/report-runners" ],
        "summary" : "Update report runner for the specified id.",
        "operationId" : "updateReportRunner",
        "parameters" : [ {
          "name" : "reportRunnerId",
          "in" : "path",
          "description" : "The Extole unique report runner identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportRunnerRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportRunnerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_runner_name_missing, message=Report runner name is missing\n\ncode=report_runner_report_type_missing, message=Report runner report type is missing\n\ncode=report_runner_start_date_missing, message=Report runner start date is missing\n\ncode=report_runner_frequency_missing, message=Report runner frequency is missing\n\ncode=report_runner_type_not_found, message=Report runner type not found\n\ncode=report_runner_missing_parameters, message=Report runner is missing parameters\n\ncode=report_runner_invalid_parameter, message=Report runner parameter(s) of invalid format\n\ncode=report_runner_invalid_formats, message=Report runner formats not supported\n\ncode=report_runner_frequency_not_supported_for_legacy_sftp, message=Report runner frequency is not supported for legacy SFTP name format\n\ncode=report_runner_invalid_scopes, message=Report runner scopes invalid\n\ncode=report_runner_invalid_sftp_server, message=Invalid SFTP server\n\ncode=report_runner_name_exists, message=Report runner name already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=report_runner_not_found, message=Report Runner not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "/v6/report-runners" ],
        "summary" : "Delete report runner for the specified id.",
        "operationId" : "deleteReportRunner",
        "parameters" : [ {
          "name" : "reportRunnerId",
          "in" : "path",
          "description" : "The Extole unique report runner identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportRunnerResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "code=report_runner_not_found, message=Report Runner not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/report-types/{id}" : {
      "get" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Get report type for the specified id.",
        "operationId" : "readReportType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Extole unique report type identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportTypeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_type_not_found, message=Report type not found\n\ncode=report_type_missing, message=Report type is missing\n\ncode=report_type_has_dependent_types, message=Report type has dependent types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Update report type for the specified id.",
        "operationId" : "updateReportType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Extole unique report type identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTypeUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportTypeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_type_not_found, message=Report type not found\n\ncode=report_type_missing, message=Report type is missing\n\ncode=report_type_has_dependent_types, message=Report type has dependent types\n\ncode=report_type_visibility_invalid, message=Report type visibility can not be changed\n\ncode=report_type_invalid_allowed_scopes, message=Report type allowed scopes invalid\n\ncode=report_type_display_name_too_long, message=Report type display name is too long\n\ncode=report_type_description_too_long, message=Report type description is too long\n\ncode=report_type_invalid_description_link, message=Report type description link is invalid\n\ncode=report_type_change_clients_invalid, message=Report type clients can not be changed for not PRIVATE report type\n\ncode=report_type_empty_tag_name, message=Report type tags can not have null names\n\ncode=report_type_parameter_description_too_long, message=Report type parameter description are too long",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Delete report type for the specified id.",
        "operationId" : "deleteReportType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Extole unique report type identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportTypeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_type_not_found, message=Report type not found\n\ncode=report_type_missing, message=Report type is missing\n\ncode=report_type_has_dependent_types, message=Report type has dependent types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/report-types" : {
      "get" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Gets a list of report types",
        "operationId" : "listReportTypes",
        "parameters" : [ {
          "name" : "report_type_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "display_name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "visibility",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "EXTOLE_ONLY" ]
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "exclude_tags",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "TYPE", "ID", "DISPLAY_NAME", "VISIBILITY" ]
          }
        }, {
          "name" : "order",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "ASCENDING", "DESCENDING" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReportTypeResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_limit, message=Limit should be a non negative integer\n\ncode=invalid_offset, message=Offset should be a non negative integer\n\ncode=max_fetch_size_1000, message=Maximum allowed difference between limit and offset should be 1000",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Create a report type.",
        "operationId" : "createReportType",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportTypeCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportTypeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_type_not_found, message=Report type not found\n\ncode=report_type_missing, message=Report type is missing\n\ncode=report_type_has_dependent_types, message=Report type has dependent types\n\ncode=report_type_visibility_invalid, message=Report type visibility can not be changed\n\ncode=report_type_invalid_allowed_scopes, message=Report type allowed scopes invalid\n\ncode=report_type_display_name_too_long, message=Report type display name is too long\n\ncode=report_type_description_too_long, message=Report type description is too long\n\ncode=report_type_invalid_description_link, message=Report type description link is invalid\n\ncode=report_type_change_clients_invalid, message=Report type clients can not be changed for not PRIVATE report type\n\ncode=report_type_empty_tag_name, message=Report type tags can not have null names\n\ncode=report_type_parameter_description_too_long, message=Report type parameter description are too long",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/report-types/{id}/clients" : {
      "get" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Get ids of the clients that have access to the specified report type.",
        "operationId" : "listReportTypeClients",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Extole unique report type identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_type_not_found, message=Report type not found\n\ncode=report_type_missing, message=Report type is missing\n\ncode=report_type_has_dependent_types, message=Report type has dependent types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Update report type client Ids for the specified id.",
        "operationId" : "updateReportTypeClients",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Extole unique report type identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportTypeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_type_not_found, message=Report type not found\n\ncode=report_type_missing, message=Report type is missing\n\ncode=report_type_has_dependent_types, message=Report type has dependent types\n\ncode=report_type_visibility_invalid, message=Report type visibility can not be changed\n\ncode=report_type_invalid_allowed_scopes, message=Report type allowed scopes invalid\n\ncode=report_type_display_name_too_long, message=Report type display name is too long\n\ncode=report_type_description_too_long, message=Report type description is too long\n\ncode=report_type_invalid_description_link, message=Report type description link is invalid\n\ncode=report_type_change_clients_invalid, message=Report type clients can not be changed for not PRIVATE report type\n\ncode=report_type_empty_tag_name, message=Report type tags can not have null names\n\ncode=report_type_parameter_description_too_long, message=Report type parameter description are too long",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Delete report type client Ids for the specified id.",
        "operationId" : "deleteReportTypeClients",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Extole unique report type identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "client_ids",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportTypeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_type_not_found, message=Report type not found\n\ncode=report_type_missing, message=Report type is missing\n\ncode=report_type_has_dependent_types, message=Report type has dependent types\n\ncode=report_type_visibility_invalid, message=Report type visibility can not be changed\n\ncode=report_type_invalid_allowed_scopes, message=Report type allowed scopes invalid\n\ncode=report_type_display_name_too_long, message=Report type display name is too long\n\ncode=report_type_description_too_long, message=Report type description is too long\n\ncode=report_type_invalid_description_link, message=Report type description link is invalid\n\ncode=report_type_change_clients_invalid, message=Report type clients can not be changed for not PRIVATE report type\n\ncode=report_type_empty_tag_name, message=Report type tags can not have null names\n\ncode=report_type_parameter_description_too_long, message=Report type parameter description are too long",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/report-types/clients" : {
      "get" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Get report types and associated clients.",
        "operationId" : "listReportTypesWithClients",
        "parameters" : [ {
          "name" : "report_type_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "display_name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "visibility",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "EXTOLE_ONLY" ]
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "exclude_tags",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "TYPE", "ID", "DISPLAY_NAME", "VISIBILITY" ]
          }
        }, {
          "name" : "order",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "ASCENDING", "DESCENDING" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReportTypeWithClientsResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "code=invalid_limit, message=Limit should be a non negative integer\n\ncode=invalid_offset, message=Offset should be a non negative integer\n\ncode=max_fetch_size_1000, message=Maximum allowed difference between limit and offset should be 1000",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/report-types/{id}/tags-add" : {
      "put" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Add report type tags for the specified id.",
        "operationId" : "addReportTypeTags",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Extole unique report type identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportTypeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_type_not_found, message=Report type not found\n\ncode=report_type_missing, message=Report type is missing\n\ncode=report_type_has_dependent_types, message=Report type has dependent types\n\ncode=report_type_visibility_invalid, message=Report type visibility can not be changed\n\ncode=report_type_invalid_allowed_scopes, message=Report type allowed scopes invalid\n\ncode=report_type_display_name_too_long, message=Report type display name is too long\n\ncode=report_type_description_too_long, message=Report type description is too long\n\ncode=report_type_invalid_description_link, message=Report type description link is invalid\n\ncode=report_type_change_clients_invalid, message=Report type clients can not be changed for not PRIVATE report type\n\ncode=report_type_empty_tag_name, message=Report type tags can not have null names\n\ncode=report_type_parameter_description_too_long, message=Report type parameter description are too long",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    },
    "/v6/report-types/{id}/tags-delete" : {
      "put" : {
        "tags" : [ "/v6/report-types" ],
        "summary" : "Delete report type tags for the specified id.",
        "operationId" : "deleteReportTypeTags",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Extole unique report type identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportTypeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "code=report_type_not_found, message=Report type not found\n\ncode=report_type_missing, message=Report type is missing\n\ncode=report_type_has_dependent_types, message=Report type has dependent types\n\ncode=report_type_visibility_invalid, message=Report type visibility can not be changed\n\ncode=report_type_invalid_allowed_scopes, message=Report type allowed scopes invalid\n\ncode=report_type_display_name_too_long, message=Report type display name is too long\n\ncode=report_type_description_too_long, message=Report type description is too long\n\ncode=report_type_invalid_description_link, message=Report type description link is invalid\n\ncode=report_type_change_clients_invalid, message=Report type clients can not be changed for not PRIVATE report type\n\ncode=report_type_empty_tag_name, message=Report type tags can not have null names\n\ncode=report_type_parameter_description_too_long, message=Report type parameter description are too long",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "code=missing_access_token, message=No access_token was provided with this request.\n\ncode=access_denied, message=The access_token provided is not permitted to access the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestExceptionResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "HEADER" : [ ]
        }, {
          "COOKIE" : [ ]
        }, {
          "QUERY" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "BuildtimeEvaluatable<CampaignBuildtimeContext,BigDecimal>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<CampaignBuildtimeContext,Boolean>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<CampaignBuildtimeContext,List<CampaignControllerSelectorType>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<CampaignBuildtimeContext,Optional<String>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<CampaignBuildtimeContext,Set<CampaignExperienceType>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<CampaignBuildtimeContext,Set<CampaignState>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<CampaignBuildtimeContext,Set<String>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<CampaignBuildtimeContext,StepScope>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<CampaignBuildtimeContext,String>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Boolean>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,CampaignControllerTriggerActionType>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,CampaignControllerTriggerEventType>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,CampaignControllerTriggerPhase>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,IncentivizeActionType>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,List<String>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<BigDecimal>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Duration>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Id<Object>>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Integer>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<PartnerEventId>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<String>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<ZonedDateTime>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,RewardFilterScope>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,RuntimeEvaluatable<ExpressionTriggerContext,Boolean>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,RuntimeEvaluatable<HasPriorRewardTriggerContext,Boolean>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,RuntimeEvaluatable<HasPriorStepTriggerContext,Set<Id<Object>>>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,RuntimeEvaluatable<HasPriorStepTriggerContext,Set<String>>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,RuntimeEvaluatable<StepHasPriorStepTriggerContext,Boolean>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Set<FaceValueType>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Set<Id<Object>>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Set<Integer>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Set<RewardState>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,Set<String>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,StepFilterScope>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,StepQuality>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<ControllerBuildtimeContext,String>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "BuildtimeEvaluatable<FlowStepBuildtimeContext,String>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "CampaignComponentReferenceResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CampaignComponentResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "component_version" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "variables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VariableResponse"
            }
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          },
          "created_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_date" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CampaignControllerActionApproveResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "legacy_action_id" : {
              "type" : "string"
            },
            "partner_event_id" : {
              "type" : "string"
            },
            "event_type" : {
              "type" : "string"
            },
            "force" : {
              "type" : "string"
            },
            "note" : {
              "type" : "string"
            },
            "cause_type" : {
              "type" : "string"
            },
            "polling_id" : {
              "type" : "string"
            },
            "polling_name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CampaignControllerActionCancelRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_id" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CampaignControllerActionDataIntelligenceResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "intelligence_provider" : {
              "type" : "string",
              "enum" : [ "NOOP", "MAXMIND", "EMAIL_AGE" ]
            },
            "event_name" : {
              "type" : "string"
            },
            "profile_risk_update_interval" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "CampaignControllerActionDeclineResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "legacy_action_id" : {
              "type" : "string"
            },
            "partner_event_id" : {
              "type" : "string"
            },
            "event_type" : {
              "type" : "string"
            },
            "note" : {
              "type" : "string"
            },
            "cause_type" : {
              "type" : "string"
            },
            "polling_id" : {
              "type" : "string"
            },
            "polling_name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CampaignControllerActionEarnRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_name" : {
              "type" : "string"
            },
            "reward_supplier_id" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Id<Object>>>"
            },
            "polling_id" : {
              "type" : "string"
            },
            "slots" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "tags" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "program_domain_id" : {
              "type" : "string"
            },
            "sandbox" : {
              "type" : "string"
            },
            "value_of_event_being_rewarded" : {
              "type" : "string"
            },
            "event_time" : {
              "$ref" : "#/components/schemas/RuntimeEvaluatable<RewardActionContext,Optional<Instant>>"
            }
          }
        } ]
      },
      "CampaignControllerActionEmailResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "zone_name" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,String>"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "CampaignControllerActionExpressionResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "expression" : {
              "$ref" : "#/components/schemas/RuntimeEvaluatable<ExpressionActionCommandContext,Void>"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/RuntimeEvaluatable<ExpressionActionContext,Optional<Object>>"
              }
            }
          }
        } ]
      },
      "CampaignControllerActionFireAsPersonResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "event_name" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,String>"
            },
            "as_person_identification" : {
              "$ref" : "#/components/schemas/FireAsPersonIdentification"
            },
            "as_person_journey" : {
              "$ref" : "#/components/schemas/FireAsPersonJourney"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "labels" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "CampaignControllerActionFulfillRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_id" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "success" : {
              "type" : "string"
            },
            "partner_reward_id" : {
              "type" : "string"
            },
            "event_time" : {
              "$ref" : "#/components/schemas/RuntimeEvaluatable<RewardActionContext,Optional<Instant>>"
            }
          }
        } ]
      },
      "CampaignControllerActionIncentivizeResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "incentivize_action_type" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,IncentivizeActionType>"
            },
            "overrides" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "action_name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CampaignControllerActionRedeemRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_id" : {
              "type" : "string"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "partner_event_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CampaignControllerActionResponse" : {
        "type" : "object",
        "properties" : {
          "action_id" : {
            "type" : "string"
          },
          "action_type" : {
            "type" : "string",
            "enum" : [ "EMAIL", "SCHEDULE", "SIGNAL", "INCENTIVIZE", "SHARE_EVENT", "FIRE_AS_PERSON", "DATA_INTELLIGENCE", "APPROVE", "DECLINE", "EARN_REWARD", "FULFILL_REWARD", "REDEEM_REWARD", "CANCEL_REWARD", "REVOKE_REWARD", "STEP_SIGNAL", "WEBHOOK", "EXPRESSION" ]
          },
          "quality" : {
            "type" : "string",
            "enum" : [ "HIGH", "LOW", "ALWAYS" ]
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "action_type"
        }
      },
      "CampaignControllerActionRevokeRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_id" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CampaignControllerActionScheduleResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "schedule_name" : {
              "type" : "string"
            },
            "delays" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int64"
              }
            },
            "dates" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "date-time"
              }
            },
            "force" : {
              "type" : "boolean"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "CampaignControllerActionShareEventResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        } ]
      },
      "CampaignControllerActionSignalResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "signal_polling_id" : {
              "type" : "string"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "CampaignControllerActionStepSignalResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "polling_id" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CampaignControllerActionWebhookResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "webhook_id" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Id<Object>>>"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/RuntimeEvaluatable<WebhookActionContext,Optional<Object>>"
              }
            }
          }
        } ]
      },
      "CampaignControllerResponse" : {
        "type" : "object",
        "properties" : {
          "controller_id" : {
            "type" : "string"
          },
          "name" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          },
          "scope" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,StepScope>"
          },
          "enabled" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Boolean>"
          },
          "enabled_on_states" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Set<CampaignState>>"
          },
          "experience_types" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Set<CampaignExperienceType>>"
          },
          "selectors" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,List<CampaignControllerSelectorType>>"
          },
          "triggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
            }
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignControllerActionResponse"
            }
          },
          "aliases" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Set<String>>"
          },
          "partner_id_name" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Optional<String>>"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StepDataResponse"
            }
          },
          "value" : {
            "type" : "string"
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          }
        }
      },
      "CampaignControllerTriggerAccessResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "trusted_scopes" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "VERIFIED_CONSUMER", "UPDATE_PROFILE", "ONE_TIME", "PASSWORD_RESET", "BACKEND", "CLIENT_REPORT_DOWNLOAD" ]
              }
            }
          }
        } ]
      },
      "CampaignControllerTriggerApiVersionCheckResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "match_type" : {
              "type" : "string",
              "enum" : [ "GREATER_THAN", "LESS_THAN", "MATCHING", "NOT_MATCHING", "GREATER_THAN_OR_EQUALS", "LESS_THAN_OR_EQUALS" ]
            },
            "api_version" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CampaignControllerTriggerDataIntelligenceEventResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "event_name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CampaignControllerTriggerEventResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "event_names" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,List<String>>"
            },
            "event_type" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,CampaignControllerTriggerEventType>"
            }
          }
        } ]
      },
      "CampaignControllerTriggerExpressionResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "expression" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,RuntimeEvaluatable<ExpressionTriggerContext,Boolean>>"
            }
          }
        } ]
      },
      "CampaignControllerTriggerHasPriorRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "filter_names" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Set<String>>"
            },
            "filter_scope" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,RewardFilterScope>"
            },
            "filter_slots" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Set<String>>"
            },
            "filter_min_age" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Duration>>"
            },
            "filter_max_age" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Duration>>"
            },
            "filter_min_date" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<ZonedDateTime>>"
            },
            "filter_max_date" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<ZonedDateTime>>"
            },
            "filter_reward_supplier_ids" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Set<Id<Object>>>"
            },
            "filter_face_value_types" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Set<FaceValueType>>"
            },
            "filter_states" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Set<RewardState>>"
            },
            "filter_expressions" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "filter_expression" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,RuntimeEvaluatable<HasPriorRewardTriggerContext,Boolean>>"
            },
            "sum_of_face_value_max" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<BigDecimal>>"
            },
            "sum_of_face_value_min" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<BigDecimal>>"
            },
            "count_max" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Integer>>"
            },
            "count_min" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Integer>>"
            },
            "count_matches" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Set<Integer>>"
            }
          }
        } ]
      },
      "CampaignControllerTriggerHasPriorStepResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "filter_names" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Set<String>>"
            },
            "filter_scope" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,StepFilterScope>"
            },
            "filter_partner_event_id_name" : {
              "type" : "string"
            },
            "filter_partner_event_id_value" : {
              "type" : "string"
            },
            "filter_partner_event_id" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<PartnerEventId>>"
            },
            "filter_matching_partner_event_id" : {
              "type" : "string",
              "enum" : [ "DISABLED", "MATCH_ANY" ]
            },
            "filter_min_age" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Duration>>"
            },
            "filter_max_age" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Duration>>"
            },
            "filter_min_value" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<BigDecimal>>"
            },
            "filter_max_value" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<BigDecimal>>"
            },
            "filter_quality" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,StepQuality>"
            },
            "filter_expressions" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "filter_expression" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,RuntimeEvaluatable<StepHasPriorStepTriggerContext,Boolean>>"
            },
            "filter_program_label" : {
              "type" : "string"
            },
            "filter_campaign_id" : {
              "type" : "string"
            },
            "filter_program_labels" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,RuntimeEvaluatable<HasPriorStepTriggerContext,Set<String>>>"
            },
            "filter_campaign_ids" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,RuntimeEvaluatable<HasPriorStepTriggerContext,Set<Id<Object>>>>"
            },
            "filter_min_date" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<ZonedDateTime>>"
            },
            "filter_max_date" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<ZonedDateTime>>"
            },
            "sum_of_value_min" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<BigDecimal>>"
            },
            "sum_of_value_max" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<BigDecimal>>"
            },
            "count_min" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Integer>>"
            },
            "count_max" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<Integer>>"
            },
            "count_matches" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Set<Integer>>"
            },
            "person_id" : {
              "$ref" : "#/components/schemas/RuntimeEvaluatable<HasPriorStepTriggerContext,Optional<Id<Person>>>"
            }
          }
        } ]
      },
      "CampaignControllerTriggerLegacyQualityResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "action_type" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,CampaignControllerTriggerActionType>"
            }
          }
        } ]
      },
      "CampaignControllerTriggerMaxMindResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "default_quality_score" : {
              "type" : "string",
              "enum" : [ "ERROR", "LOW", "HIGH" ]
            },
            "risk_threshold" : {
              "type" : "integer",
              "format" : "int64"
            },
            "ip_threshold" : {
              "type" : "integer",
              "format" : "int64"
            },
            "allow_high_risk_email" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "CampaignControllerTriggerPurchaseResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "period_since_last_purchase" : {
              "type" : "integer",
              "format" : "int64"
            },
            "operator" : {
              "type" : "string",
              "enum" : [ "LESS_THAN", "GREATER_THAN" ]
            }
          }
        } ]
      },
      "CampaignControllerTriggerReferredByEventResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "referral_originator" : {
              "type" : "string",
              "enum" : [ "FRIEND", "ADVOCATE" ]
            }
          }
        } ]
      },
      "CampaignControllerTriggerResponse" : {
        "type" : "object",
        "properties" : {
          "trigger_id" : {
            "type" : "string"
          },
          "trigger_type" : {
            "type" : "string",
            "enum" : [ "SHARE", "PURCHASE", "EVENT", "SCORE", "ZONE_STATE", "API_VERSION", "REFERRED_BY_EVENT", "LEGACY_QUALITY", "EXPRESSION", "ACCESS", "DATA_INTELLIGENCE_EVENT", "HAS_PRIOR_STEP", "MAXMIND", "REWARD_EVENT", "HAS_PRIOR_REWARD" ]
          },
          "trigger_phase" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,CampaignControllerTriggerPhase>"
          },
          "trigger_name" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,String>"
          },
          "enabled" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Boolean>"
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "trigger_type"
        }
      },
      "CampaignControllerTriggerRewardEventResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_states" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "EARNED", "FULFILLED", "CANCELED", "REVOKED", "REDEEMED" ]
              }
            },
            "event_names" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "slots" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "tags" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "CampaignControllerTriggerScoreResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "score_result" : {
              "type" : "string"
            },
            "cause_event_name" : {
              "type" : "string"
            },
            "channel" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CampaignControllerTriggerShareResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "share_types" : {
              "uniqueItems" : true,
              "type" : "array",
              "writeOnly" : true,
              "items" : {
                "type" : "string",
                "enum" : [ "ANY", "EMAIL", "FACEBOOK", "TWITTER", "EXTOLE_EMAIL", "EXTOLE_TWITTER" ]
              }
            },
            "channels" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "ANY", "EMAIL", "FACEBOOK", "TWITTER", "EXTOLE_EMAIL", "EXTOLE_TWITTER" ]
              }
            },
            "quality" : {
              "type" : "string",
              "enum" : [ "ANY", "HIGH", "LOW" ]
            }
          }
        } ]
      },
      "CampaignControllerTriggerZoneStateResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "zone_name" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<String>>"
            },
            "step_name" : {
              "$ref" : "#/components/schemas/BuildtimeEvaluatable<ControllerBuildtimeContext,Optional<String>>"
            },
            "invert_mapping_state" : {
              "type" : "boolean"
            },
            "creative_classifications" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "NONE", "ANY", "JAVASCRIPT", "EMAIL", "PAGE" ]
              }
            }
          }
        } ]
      },
      "CampaignFlowStepAppResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          },
          "description" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Optional<String>>"
          },
          "type" : {
            "$ref" : "#/components/schemas/CampaignFlowStepAppTypeResponse"
          }
        }
      },
      "CampaignFlowStepAppTypeResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          }
        }
      },
      "CampaignFlowStepMetricResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          },
          "description" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Optional<String>>"
          },
          "expression" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          },
          "unit" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CampaignFlowStepResponse" : {
        "type" : "object",
        "properties" : {
          "flow_step_id" : {
            "type" : "string"
          },
          "flow_path" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          },
          "sequence" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,BigDecimal>"
          },
          "step_name" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          },
          "icon_type" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          },
          "metrics" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignFlowStepMetricResponse"
            }
          },
          "apps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignFlowStepAppResponse"
            }
          },
          "tags" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Set<String>>"
          },
          "name" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          },
          "icon_color" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          },
          "description" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Optional<String>>"
          },
          "words" : {
            "$ref" : "#/components/schemas/CampaignFlowStepWordsResponse"
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          }
        }
      },
      "CampaignFlowStepWordsResponse" : {
        "type" : "object",
        "properties" : {
          "singular_noun" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<FlowStepBuildtimeContext,String>"
          },
          "plural_noun" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<FlowStepBuildtimeContext,String>"
          },
          "present_verb" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<FlowStepBuildtimeContext,String>"
          },
          "past_tense_verb" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<FlowStepBuildtimeContext,String>"
          },
          "person_counting_name" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<FlowStepBuildtimeContext,String>"
          }
        }
      },
      "CampaignLabelResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PROGRAM", "DATA" ]
          }
        }
      },
      "CampaignResponse" : {
        "type" : "object",
        "properties" : {
          "campaign_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "steps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignStepResponse"
            }
          },
          "incentive_id" : {
            "type" : "string"
          },
          "updated_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "last_published_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "is_published" : {
            "type" : "boolean"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "NOT_LAUNCHED", "LIVE", "PAUSED", "ENDED", "STOPPED" ]
          },
          "components" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentResponse"
            }
          },
          "controllers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignControllerResponse"
            }
          },
          "labels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignLabelResponse"
            }
          },
          "program_label" : {
            "type" : "string"
          },
          "incentive" : {
            "$ref" : "#/components/schemas/IncentiveResponse"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parent_version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "program_type" : {
            "type" : "string"
          },
          "theme_name" : {
            "type" : "string"
          },
          "flow_steps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignFlowStepResponse"
            }
          },
          "campaign_locks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DUPLICATE", "EDIT" ]
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CampaignStepMappingResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/CampaignStepMappingZoneResponse"
          },
          "creative" : {
            "$ref" : "#/components/schemas/CreativeResponse"
          },
          "scope" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,StepScope>"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "enabled_on_states" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Set<CampaignState>>"
          },
          "show_enable_toggle" : {
            "type" : "boolean"
          },
          "experience_types" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,Set<CampaignExperienceType>>"
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StepDataResponse"
            }
          }
        }
      },
      "CampaignStepMappingZoneResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/BuildtimeEvaluatable<CampaignBuildtimeContext,String>"
          }
        }
      },
      "CampaignStepProcessor" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "NONE", "DEFAULT_REVENUE" ]
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "CampaignStepResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "enum" : [ "PROMOTE", "ADVOCATE", "FRIEND", "OTHER", "ADMIN" ]
          },
          "processor" : {
            "$ref" : "#/components/schemas/CampaignStepProcessor"
          },
          "mappings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignStepMappingResponse"
            }
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "archived" : {
            "type" : "boolean"
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          }
        }
      },
      "CreativeResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "classification" : {
            "type" : "string"
          },
          "created_date" : {
            "type" : "integer",
            "format" : "int64"
          },
          "latest_version" : {
            "type" : "string"
          },
          "output" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "api_version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "theme_version" : {
            "type" : "string"
          },
          "locales" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "available_locales" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "default_locale" : {
            "type" : "string"
          }
        }
      },
      "EmailFireAsPersonIdentification" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FireAsPersonIdentification"
        } ]
      },
      "FireAsPersonIdentification" : {
        "type" : "object",
        "properties" : {
          "person_identification_type" : {
            "type" : "string",
            "enum" : [ "EMAIL", "PERSON_ID", "PARTNER_USER_ID", "PARTNER_EVENT_ID" ]
          },
          "value" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "person_identification_type"
        }
      },
      "FireAsPersonJourney" : {
        "type" : "object",
        "properties" : {
          "journey_type" : {
            "type" : "string",
            "enum" : [ "ADVOCATE", "FRIEND" ]
          },
          "referral_reason" : {
            "type" : "string",
            "enum" : [ "SHARE_RECIPIENT", "SHARE_ID", "SHAREABLE_ID", "COUPON_CODE", "ADVOCATE", "ADVOCATE_CODE", "ADVOCATE_PARTNER_USER_ID", "DISPLACED_PARTNER_USER_ID", "UNKNOWN_REASON", "INCENTIVIZED_SHARE", "PARTNER_EVENT_ID", "PARTNER_SHARE_ID" ]
          },
          "coupon_code" : {
            "type" : "string"
          },
          "advocate_code" : {
            "type" : "string"
          },
          "share_id" : {
            "type" : "string"
          },
          "shareable_id" : {
            "type" : "string"
          },
          "channel" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "campaign_id" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "zone" : {
            "type" : "string"
          },
          "promotable_code" : {
            "type" : "string"
          },
          "advocate_partner_user_id" : {
            "type" : "string"
          }
        }
      },
      "IncentiveResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "quality_rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QualityRuleResponse"
            }
          },
          "reward_rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RewardRuleResponse"
            }
          },
          "transition_rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransitionRuleResponse"
            }
          }
        }
      },
      "JavaType" : {
        "type" : "object",
        "properties" : {
          "interface" : {
            "type" : "boolean"
          },
          "primitive" : {
            "type" : "boolean"
          },
          "interfaces" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JavaType"
            }
          },
          "abstract" : {
            "type" : "boolean"
          },
          "genericSignature" : {
            "type" : "string"
          },
          "final" : {
            "type" : "boolean"
          },
          "contentType" : {
            "$ref" : "#/components/schemas/JavaType"
          },
          "containerType" : {
            "type" : "boolean"
          },
          "throwable" : {
            "type" : "boolean"
          },
          "enumType" : {
            "type" : "boolean"
          },
          "bindings" : {
            "$ref" : "#/components/schemas/TypeBindings"
          },
          "concrete" : {
            "type" : "boolean"
          },
          "keyType" : {
            "$ref" : "#/components/schemas/JavaType"
          },
          "valueHandler" : {
            "type" : "object"
          },
          "typeHandler" : {
            "type" : "object"
          },
          "collectionLikeType" : {
            "type" : "boolean"
          },
          "arrayType" : {
            "type" : "boolean"
          },
          "referencedType" : {
            "$ref" : "#/components/schemas/JavaType"
          },
          "javaLangObject" : {
            "type" : "boolean"
          },
          "recordType" : {
            "type" : "boolean"
          },
          "enumImplType" : {
            "type" : "boolean"
          },
          "mapLikeType" : {
            "type" : "boolean"
          },
          "contentTypeHandler" : {
            "type" : "object"
          },
          "contentValueHandler" : {
            "type" : "object"
          },
          "superClass" : {
            "$ref" : "#/components/schemas/JavaType"
          },
          "erasedSignature" : {
            "type" : "string"
          },
          "typeName" : {
            "type" : "string"
          },
          "referenceType" : {
            "type" : "boolean"
          }
        }
      },
      "PartnerEventIdFireAsPersonIdentification" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FireAsPersonIdentification"
        }, {
          "type" : "object",
          "properties" : {
            "partner_event_key" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PartnerUserIdFireAsPersonIdentification" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FireAsPersonIdentification"
        } ]
      },
      "PersonIdFireAsPersonIdentification" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FireAsPersonIdentification"
        } ]
      },
      "QualityRuleResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "rule_type" : {
            "type" : "string",
            "enum" : [ "REFERRAL_CAP", "BLACKLIST_REFERER_HEADER", "SIMILAR_FRIEND_ADVOCATE_EMAIL", "SELF_REFERRAL", "BAD_COUNTRY", "VALID_EMAIL", "EXISTING_CUSTOMER", "BOT_FILTER", "BLACKLIST_DOMAIN", "EVENT_SPEED", "BLOCKED", "RECENT_CUSTOMER", "PREVIEW", "SPAM_MESSAGE", "SAME_IP", "RECIPIENT_LIMIT", "GLOBAL_BLOCK", "SHARE_COUNT_LIMIT", "PERSON_DATA", "IP_FILTER", "FRIENDS_OF_ADVOCATE_CONVERSION_LIMIT", "PROFILE_DISPLACED", "FRIENDS_OF_ADVOCATE_CLICK_LIMIT", "FRIENDS_OF_ADVOCATE_REGISTRATION_LIMIT", "REFERRAL_AGE", "GENERIC" ]
          },
          "action_types" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ANY_CLICK", "ANY_SHARE", "ANY_SHARE_REWARD", "ANY_REGISTER", "ANY_PURCHASE", "ANY_PROMOTION", "GENERIC_ACTION_1", "GENERIC_ACTION_2", "GENERIC_ACTION_3", "GENERIC_ACTION_4", "GENERIC_ACTION_5", "GENERIC_ACTION_6", "GENERIC_ACTION_7", "GENERIC_ACTION_8", "GENERIC_ACTION_9", "GENERIC_ACTION_10", "GENERIC_ACTION_11", "GENERIC_ACTION_12", "GENERIC_ACTION_13", "GENERIC_ACTION_14", "GENERIC_ACTION_15", "GENERIC_ACTION_16", "GENERIC_ACTION_17", "GENERIC_ACTION_18", "GENERIC_ACTION_19", "GENERIC_ACTION_20", "GENERIC_ACTION_21", "GENERIC_ACTION_22", "GENERIC_ACTION_23", "GENERIC_ACTION_24", "GENERIC_ACTION_25", "GENERIC_ACTION_26", "GENERIC_ACTION_27", "GENERIC_ACTION_28", "GENERIC_ACTION_29", "GENERIC_ACTION_30", "GENERIC_ACTION_31", "GENERIC_ACTION_32", "GENERIC_ACTION_33", "GENERIC_ACTION_34", "GENERIC_ACTION_35", "GENERIC_ACTION_36", "GENERIC_ACTION_37", "GENERIC_ACTION_38", "GENERIC_ACTION_39", "GENERIC_ACTION_40", "GENERIC_ACTION_41", "GENERIC_ACTION_42", "GENERIC_ACTION_43", "GENERIC_ACTION_44", "GENERIC_ACTION_45", "GENERIC_ACTION_46", "GENERIC_ACTION_47", "GENERIC_ACTION_48", "GENERIC_ACTION_49", "GENERIC_ACTION_50", "GENERIC_ACTION_51", "GENERIC_ACTION_52", "GENERIC_ACTION_53", "GENERIC_ACTION_54", "GENERIC_ACTION_55", "GENERIC_ACTION_56", "GENERIC_ACTION_57", "GENERIC_ACTION_58", "GENERIC_ACTION_59", "GENERIC_ACTION_60", "GENERIC_ACTION_61", "GENERIC_ACTION_62", "GENERIC_ACTION_63", "GENERIC_ACTION_64", "GENERIC_ACTION_65", "GENERIC_ACTION_66", "GENERIC_ACTION_67", "GENERIC_ACTION_68", "GENERIC_ACTION_69", "GENERIC_ACTION_70", "GENERIC_ACTION_71", "GENERIC_ACTION_72", "GENERIC_ACTION_73", "GENERIC_ACTION_74", "GENERIC_ACTION_75", "GENERIC_ACTION_76", "GENERIC_ACTION_77", "GENERIC_ACTION_78", "GENERIC_ACTION_79", "GENERIC_ACTION_80", "GENERIC_ACTION_81", "GENERIC_ACTION_82", "GENERIC_ACTION_83", "GENERIC_ACTION_84", "GENERIC_ACTION_85", "GENERIC_ACTION_86", "GENERIC_ACTION_87", "GENERIC_ACTION_88", "GENERIC_ACTION_89", "GENERIC_ACTION_90", "GENERIC_ACTION_91", "GENERIC_ACTION_92", "GENERIC_ACTION_93", "GENERIC_ACTION_94", "GENERIC_ACTION_95", "GENERIC_ACTION_96", "GENERIC_ACTION_97", "GENERIC_ACTION_98", "GENERIC_ACTION_99", "GENERIC_ACTION_100", "GENERIC_ACTION_101", "GENERIC_ACTION_102", "GENERIC_ACTION_103", "GENERIC_ACTION_104", "GENERIC_ACTION_105", "GENERIC_ACTION_106", "GENERIC_ACTION_107", "GENERIC_ACTION_108", "GENERIC_ACTION_109", "GENERIC_ACTION_110", "GENERIC_ACTION_111", "GENERIC_ACTION_112", "GENERIC_ACTION_113", "GENERIC_ACTION_114", "GENERIC_ACTION_115", "GENERIC_ACTION_116", "GENERIC_ACTION_117", "GENERIC_ACTION_118", "GENERIC_ACTION_119", "GENERIC_ACTION_120", "GENERIC_ACTION_121", "GENERIC_ACTION_122", "GENERIC_ACTION_123", "GENERIC_ACTION_124", "GENERIC_ACTION_125", "GENERIC_ACTION_126", "GENERIC_ACTION_127", "GENERIC_ACTION_128", "GENERIC_ACTION_129", "GENERIC_ACTION_130", "THEME_GENERIC_ACTION_1", "THEME_GENERIC_ACTION_2", "THEME_GENERIC_ACTION_3", "THEME_GENERIC_ACTION_4", "THEME_GENERIC_ACTION_5", "THEME_GENERIC_ACTION_6", "THEME_GENERIC_ACTION_7", "THEME_GENERIC_ACTION_8", "THEME_GENERIC_ACTION_9", "THEME_GENERIC_ACTION_10", "THEME_GENERIC_ACTION_11", "THEME_GENERIC_ACTION_12", "THEME_GENERIC_ACTION_13", "THEME_GENERIC_ACTION_14", "THEME_GENERIC_ACTION_15", "THEME_GENERIC_ACTION_16", "THEME_GENERIC_ACTION_17", "THEME_GENERIC_ACTION_18", "THEME_GENERIC_ACTION_19", "THEME_GENERIC_ACTION_20", "THEME_GENERIC_ACTION_21", "THEME_GENERIC_ACTION_22", "THEME_GENERIC_ACTION_23", "THEME_GENERIC_ACTION_24", "THEME_GENERIC_ACTION_25", "THEME_GENERIC_ACTION_26", "THEME_GENERIC_ACTION_27", "THEME_GENERIC_ACTION_28", "THEME_GENERIC_ACTION_29", "THEME_GENERIC_ACTION_30" ]
            }
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "RewardRuleExpression" : {
        "required" : [ "type", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "SPEL", "JS" ]
          }
        }
      },
      "RewardRuleResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "rewardee" : {
            "type" : "string",
            "enum" : [ "ADVOCATE", "FRIEND" ]
          },
          "reward_supplier_id" : {
            "type" : "string"
          },
          "referrals_per_reward" : {
            "type" : "integer",
            "format" : "int32"
          },
          "reward_count_limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "reward_count_since_month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "reward_count_since_days" : {
            "type" : "integer",
            "format" : "int32"
          },
          "reward_value_limit" : {
            "type" : "number"
          },
          "reward_value_since_month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "reward_value_since_days" : {
            "type" : "integer",
            "format" : "int32"
          },
          "is_unique_friend_required" : {
            "type" : "boolean"
          },
          "reward_slots" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "min_cart_value" : {
            "type" : "number"
          },
          "trigger_action_type" : {
            "type" : "string",
            "enum" : [ "ANY_CLICK", "ANY_SHARE", "ANY_SHARE_REWARD", "ANY_REGISTER", "ANY_PURCHASE", "ANY_PROMOTION", "GENERIC_ACTION_1", "GENERIC_ACTION_2", "GENERIC_ACTION_3", "GENERIC_ACTION_4", "GENERIC_ACTION_5", "GENERIC_ACTION_6", "GENERIC_ACTION_7", "GENERIC_ACTION_8", "GENERIC_ACTION_9", "GENERIC_ACTION_10", "GENERIC_ACTION_11", "GENERIC_ACTION_12", "GENERIC_ACTION_13", "GENERIC_ACTION_14", "GENERIC_ACTION_15", "GENERIC_ACTION_16", "GENERIC_ACTION_17", "GENERIC_ACTION_18", "GENERIC_ACTION_19", "GENERIC_ACTION_20", "GENERIC_ACTION_21", "GENERIC_ACTION_22", "GENERIC_ACTION_23", "GENERIC_ACTION_24", "GENERIC_ACTION_25", "GENERIC_ACTION_26", "GENERIC_ACTION_27", "GENERIC_ACTION_28", "GENERIC_ACTION_29", "GENERIC_ACTION_30", "GENERIC_ACTION_31", "GENERIC_ACTION_32", "GENERIC_ACTION_33", "GENERIC_ACTION_34", "GENERIC_ACTION_35", "GENERIC_ACTION_36", "GENERIC_ACTION_37", "GENERIC_ACTION_38", "GENERIC_ACTION_39", "GENERIC_ACTION_40", "GENERIC_ACTION_41", "GENERIC_ACTION_42", "GENERIC_ACTION_43", "GENERIC_ACTION_44", "GENERIC_ACTION_45", "GENERIC_ACTION_46", "GENERIC_ACTION_47", "GENERIC_ACTION_48", "GENERIC_ACTION_49", "GENERIC_ACTION_50", "GENERIC_ACTION_51", "GENERIC_ACTION_52", "GENERIC_ACTION_53", "GENERIC_ACTION_54", "GENERIC_ACTION_55", "GENERIC_ACTION_56", "GENERIC_ACTION_57", "GENERIC_ACTION_58", "GENERIC_ACTION_59", "GENERIC_ACTION_60", "GENERIC_ACTION_61", "GENERIC_ACTION_62", "GENERIC_ACTION_63", "GENERIC_ACTION_64", "GENERIC_ACTION_65", "GENERIC_ACTION_66", "GENERIC_ACTION_67", "GENERIC_ACTION_68", "GENERIC_ACTION_69", "GENERIC_ACTION_70", "GENERIC_ACTION_71", "GENERIC_ACTION_72", "GENERIC_ACTION_73", "GENERIC_ACTION_74", "GENERIC_ACTION_75", "GENERIC_ACTION_76", "GENERIC_ACTION_77", "GENERIC_ACTION_78", "GENERIC_ACTION_79", "GENERIC_ACTION_80", "GENERIC_ACTION_81", "GENERIC_ACTION_82", "GENERIC_ACTION_83", "GENERIC_ACTION_84", "GENERIC_ACTION_85", "GENERIC_ACTION_86", "GENERIC_ACTION_87", "GENERIC_ACTION_88", "GENERIC_ACTION_89", "GENERIC_ACTION_90", "GENERIC_ACTION_91", "GENERIC_ACTION_92", "GENERIC_ACTION_93", "GENERIC_ACTION_94", "GENERIC_ACTION_95", "GENERIC_ACTION_96", "GENERIC_ACTION_97", "GENERIC_ACTION_98", "GENERIC_ACTION_99", "GENERIC_ACTION_100", "GENERIC_ACTION_101", "GENERIC_ACTION_102", "GENERIC_ACTION_103", "GENERIC_ACTION_104", "GENERIC_ACTION_105", "GENERIC_ACTION_106", "GENERIC_ACTION_107", "GENERIC_ACTION_108", "GENERIC_ACTION_109", "GENERIC_ACTION_110", "GENERIC_ACTION_111", "GENERIC_ACTION_112", "GENERIC_ACTION_113", "GENERIC_ACTION_114", "GENERIC_ACTION_115", "GENERIC_ACTION_116", "GENERIC_ACTION_117", "GENERIC_ACTION_118", "GENERIC_ACTION_119", "GENERIC_ACTION_120", "GENERIC_ACTION_121", "GENERIC_ACTION_122", "GENERIC_ACTION_123", "GENERIC_ACTION_124", "GENERIC_ACTION_125", "GENERIC_ACTION_126", "GENERIC_ACTION_127", "GENERIC_ACTION_128", "GENERIC_ACTION_129", "GENERIC_ACTION_130", "THEME_GENERIC_ACTION_1", "THEME_GENERIC_ACTION_2", "THEME_GENERIC_ACTION_3", "THEME_GENERIC_ACTION_4", "THEME_GENERIC_ACTION_5", "THEME_GENERIC_ACTION_6", "THEME_GENERIC_ACTION_7", "THEME_GENERIC_ACTION_8", "THEME_GENERIC_ACTION_9", "THEME_GENERIC_ACTION_10", "THEME_GENERIC_ACTION_11", "THEME_GENERIC_ACTION_12", "THEME_GENERIC_ACTION_13", "THEME_GENERIC_ACTION_14", "THEME_GENERIC_ACTION_15", "THEME_GENERIC_ACTION_16", "THEME_GENERIC_ACTION_17", "THEME_GENERIC_ACTION_18", "THEME_GENERIC_ACTION_19", "THEME_GENERIC_ACTION_20", "THEME_GENERIC_ACTION_21", "THEME_GENERIC_ACTION_22", "THEME_GENERIC_ACTION_23", "THEME_GENERIC_ACTION_24", "THEME_GENERIC_ACTION_25", "THEME_GENERIC_ACTION_26", "THEME_GENERIC_ACTION_27", "THEME_GENERIC_ACTION_28", "THEME_GENERIC_ACTION_29", "THEME_GENERIC_ACTION_30" ]
          },
          "is_email_required" : {
            "type" : "boolean"
          },
          "data_attribute_name" : {
            "type" : "string"
          },
          "data_attribute_value" : {
            "type" : "string"
          },
          "data_attribute_matcher_type" : {
            "type" : "string",
            "enum" : [ "EXACT", "REGEX" ]
          },
          "expression" : {
            "$ref" : "#/components/schemas/RewardRuleExpression"
          },
          "reward_every_x_friend_actions" : {
            "type" : "integer",
            "format" : "int32"
          },
          "count_rewards_based_on_partner_user_id" : {
            "type" : "boolean"
          }
        }
      },
      "RuntimeEvaluatable<ExpressionActionCommandContext,Void>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "RuntimeEvaluatable<ExpressionActionContext,Optional<Object>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "RuntimeEvaluatable<HasPriorStepTriggerContext,Optional<Id<Person>>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "RuntimeEvaluatable<RewardActionContext,Optional<Instant>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "RuntimeEvaluatable<WebhookActionContext,Optional<Object>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "StepDataResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "CLIENT" ]
          },
          "dimension" : {
            "type" : "boolean"
          },
          "persist_types" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "JOURNEY", "PROFILE" ]
            }
          },
          "default_value" : {
            "type" : "string"
          }
        }
      },
      "TransitionRuleResponse" : {
        "type" : "object",
        "properties" : {
          "transition_rule_id" : {
            "type" : "string"
          },
          "action_type" : {
            "type" : "string",
            "enum" : [ "ANY_CLICK", "ANY_SHARE", "ANY_SHARE_REWARD", "ANY_REGISTER", "ANY_PURCHASE", "ANY_PROMOTION", "GENERIC_ACTION_1", "GENERIC_ACTION_2", "GENERIC_ACTION_3", "GENERIC_ACTION_4", "GENERIC_ACTION_5", "GENERIC_ACTION_6", "GENERIC_ACTION_7", "GENERIC_ACTION_8", "GENERIC_ACTION_9", "GENERIC_ACTION_10", "GENERIC_ACTION_11", "GENERIC_ACTION_12", "GENERIC_ACTION_13", "GENERIC_ACTION_14", "GENERIC_ACTION_15", "GENERIC_ACTION_16", "GENERIC_ACTION_17", "GENERIC_ACTION_18", "GENERIC_ACTION_19", "GENERIC_ACTION_20", "GENERIC_ACTION_21", "GENERIC_ACTION_22", "GENERIC_ACTION_23", "GENERIC_ACTION_24", "GENERIC_ACTION_25", "GENERIC_ACTION_26", "GENERIC_ACTION_27", "GENERIC_ACTION_28", "GENERIC_ACTION_29", "GENERIC_ACTION_30", "GENERIC_ACTION_31", "GENERIC_ACTION_32", "GENERIC_ACTION_33", "GENERIC_ACTION_34", "GENERIC_ACTION_35", "GENERIC_ACTION_36", "GENERIC_ACTION_37", "GENERIC_ACTION_38", "GENERIC_ACTION_39", "GENERIC_ACTION_40", "GENERIC_ACTION_41", "GENERIC_ACTION_42", "GENERIC_ACTION_43", "GENERIC_ACTION_44", "GENERIC_ACTION_45", "GENERIC_ACTION_46", "GENERIC_ACTION_47", "GENERIC_ACTION_48", "GENERIC_ACTION_49", "GENERIC_ACTION_50", "GENERIC_ACTION_51", "GENERIC_ACTION_52", "GENERIC_ACTION_53", "GENERIC_ACTION_54", "GENERIC_ACTION_55", "GENERIC_ACTION_56", "GENERIC_ACTION_57", "GENERIC_ACTION_58", "GENERIC_ACTION_59", "GENERIC_ACTION_60", "GENERIC_ACTION_61", "GENERIC_ACTION_62", "GENERIC_ACTION_63", "GENERIC_ACTION_64", "GENERIC_ACTION_65", "GENERIC_ACTION_66", "GENERIC_ACTION_67", "GENERIC_ACTION_68", "GENERIC_ACTION_69", "GENERIC_ACTION_70", "GENERIC_ACTION_71", "GENERIC_ACTION_72", "GENERIC_ACTION_73", "GENERIC_ACTION_74", "GENERIC_ACTION_75", "GENERIC_ACTION_76", "GENERIC_ACTION_77", "GENERIC_ACTION_78", "GENERIC_ACTION_79", "GENERIC_ACTION_80", "GENERIC_ACTION_81", "GENERIC_ACTION_82", "GENERIC_ACTION_83", "GENERIC_ACTION_84", "GENERIC_ACTION_85", "GENERIC_ACTION_86", "GENERIC_ACTION_87", "GENERIC_ACTION_88", "GENERIC_ACTION_89", "GENERIC_ACTION_90", "GENERIC_ACTION_91", "GENERIC_ACTION_92", "GENERIC_ACTION_93", "GENERIC_ACTION_94", "GENERIC_ACTION_95", "GENERIC_ACTION_96", "GENERIC_ACTION_97", "GENERIC_ACTION_98", "GENERIC_ACTION_99", "GENERIC_ACTION_100", "GENERIC_ACTION_101", "GENERIC_ACTION_102", "GENERIC_ACTION_103", "GENERIC_ACTION_104", "GENERIC_ACTION_105", "GENERIC_ACTION_106", "GENERIC_ACTION_107", "GENERIC_ACTION_108", "GENERIC_ACTION_109", "GENERIC_ACTION_110", "GENERIC_ACTION_111", "GENERIC_ACTION_112", "GENERIC_ACTION_113", "GENERIC_ACTION_114", "GENERIC_ACTION_115", "GENERIC_ACTION_116", "GENERIC_ACTION_117", "GENERIC_ACTION_118", "GENERIC_ACTION_119", "GENERIC_ACTION_120", "GENERIC_ACTION_121", "GENERIC_ACTION_122", "GENERIC_ACTION_123", "GENERIC_ACTION_124", "GENERIC_ACTION_125", "GENERIC_ACTION_126", "GENERIC_ACTION_127", "GENERIC_ACTION_128", "GENERIC_ACTION_129", "GENERIC_ACTION_130", "THEME_GENERIC_ACTION_1", "THEME_GENERIC_ACTION_2", "THEME_GENERIC_ACTION_3", "THEME_GENERIC_ACTION_4", "THEME_GENERIC_ACTION_5", "THEME_GENERIC_ACTION_6", "THEME_GENERIC_ACTION_7", "THEME_GENERIC_ACTION_8", "THEME_GENERIC_ACTION_9", "THEME_GENERIC_ACTION_10", "THEME_GENERIC_ACTION_11", "THEME_GENERIC_ACTION_12", "THEME_GENERIC_ACTION_13", "THEME_GENERIC_ACTION_14", "THEME_GENERIC_ACTION_15", "THEME_GENERIC_ACTION_16", "THEME_GENERIC_ACTION_17", "THEME_GENERIC_ACTION_18", "THEME_GENERIC_ACTION_19", "THEME_GENERIC_ACTION_20", "THEME_GENERIC_ACTION_21", "THEME_GENERIC_ACTION_22", "THEME_GENERIC_ACTION_23", "THEME_GENERIC_ACTION_24", "THEME_GENERIC_ACTION_25", "THEME_GENERIC_ACTION_26", "THEME_GENERIC_ACTION_27", "THEME_GENERIC_ACTION_28", "THEME_GENERIC_ACTION_29", "THEME_GENERIC_ACTION_30" ]
          },
          "approve_low_quality" : {
            "type" : "boolean"
          },
          "approve_high_quality" : {
            "type" : "boolean"
          },
          "transition_period_milliseconds" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "TypeBindings" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "VariableResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "CampaignCreateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "program_type" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CampaignDuplicateRequest" : {
        "type" : "object",
        "properties" : {
          "program_label" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "CampaignPublishRequest" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "launch" : {
            "type" : "boolean"
          }
        }
      },
      "BuiltCampaignControllerActionApproveResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "legacy_action_id" : {
              "type" : "string"
            },
            "partner_event_id" : {
              "type" : "string"
            },
            "event_type" : {
              "type" : "string"
            },
            "force" : {
              "type" : "string"
            },
            "note" : {
              "type" : "string"
            },
            "cause_type" : {
              "type" : "string"
            },
            "polling_id" : {
              "type" : "string"
            },
            "polling_name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionCancelRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_id" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionDataIntelligenceResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "intelligence_provider" : {
              "type" : "string",
              "enum" : [ "NOOP", "MAXMIND", "EMAIL_AGE" ]
            },
            "event_name" : {
              "type" : "string"
            },
            "profile_risk_update_interval" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionDeclineResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "legacy_action_id" : {
              "type" : "string"
            },
            "partner_event_id" : {
              "type" : "string"
            },
            "event_type" : {
              "type" : "string"
            },
            "note" : {
              "type" : "string"
            },
            "cause_type" : {
              "type" : "string"
            },
            "polling_id" : {
              "type" : "string"
            },
            "polling_name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionEarnRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_name" : {
              "type" : "string"
            },
            "reward_supplier_id" : {
              "type" : "string"
            },
            "polling_id" : {
              "type" : "string"
            },
            "slots" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "tags" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "program_domain_id" : {
              "type" : "string"
            },
            "sandbox" : {
              "type" : "string"
            },
            "value_of_event_being_rewarded" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionEmailResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "zone_name" : {
              "type" : "string"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionExpressionResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "expression" : {
              "$ref" : "#/components/schemas/RuntimeEvaluatable<ExpressionActionCommandContext,Void>"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/RuntimeEvaluatable<ExpressionActionContext,Optional<Object>>"
              }
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionFireAsPersonResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "event_name" : {
              "type" : "string"
            },
            "as_person_identification" : {
              "$ref" : "#/components/schemas/FireAsPersonIdentification"
            },
            "as_person_journey" : {
              "$ref" : "#/components/schemas/FireAsPersonJourney"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "labels" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionFulfillRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_id" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            },
            "success" : {
              "type" : "string"
            },
            "partner_reward_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionIncentivizeResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "incentivize_action_type" : {
              "type" : "string",
              "enum" : [ "SHARE", "IMPRESSION", "CLICK", "PURCHASE", "REGISTER", "PROMOTION", "SHARE_REWARD", "GENERIC_ACTION_1", "GENERIC_ACTION_2", "GENERIC_ACTION_3", "GENERIC_ACTION_4", "GENERIC_ACTION_5", "GENERIC_ACTION_6", "GENERIC_ACTION_7", "GENERIC_ACTION_8", "GENERIC_ACTION_9", "GENERIC_ACTION_10", "GENERIC_ACTION_11", "GENERIC_ACTION_12", "GENERIC_ACTION_13", "GENERIC_ACTION_14", "GENERIC_ACTION_15", "GENERIC_ACTION_16", "GENERIC_ACTION_17", "GENERIC_ACTION_18", "GENERIC_ACTION_19", "GENERIC_ACTION_20", "GENERIC_ACTION_21", "GENERIC_ACTION_22", "GENERIC_ACTION_23", "GENERIC_ACTION_24", "GENERIC_ACTION_25", "GENERIC_ACTION_26", "GENERIC_ACTION_27", "GENERIC_ACTION_28", "GENERIC_ACTION_29", "GENERIC_ACTION_30", "GENERIC_ACTION_31", "GENERIC_ACTION_32", "GENERIC_ACTION_33", "GENERIC_ACTION_34", "GENERIC_ACTION_35", "GENERIC_ACTION_36", "GENERIC_ACTION_37", "GENERIC_ACTION_38", "GENERIC_ACTION_39", "GENERIC_ACTION_40", "GENERIC_ACTION_41", "GENERIC_ACTION_42", "GENERIC_ACTION_43", "GENERIC_ACTION_44", "GENERIC_ACTION_45", "GENERIC_ACTION_46", "GENERIC_ACTION_47", "GENERIC_ACTION_48", "GENERIC_ACTION_49", "GENERIC_ACTION_50", "GENERIC_ACTION_51", "GENERIC_ACTION_52", "GENERIC_ACTION_53", "GENERIC_ACTION_54", "GENERIC_ACTION_55", "GENERIC_ACTION_56", "GENERIC_ACTION_57", "GENERIC_ACTION_58", "GENERIC_ACTION_59", "GENERIC_ACTION_60", "GENERIC_ACTION_61", "GENERIC_ACTION_62", "GENERIC_ACTION_63", "GENERIC_ACTION_64", "GENERIC_ACTION_65", "GENERIC_ACTION_66", "GENERIC_ACTION_67", "GENERIC_ACTION_68", "GENERIC_ACTION_69", "GENERIC_ACTION_70", "GENERIC_ACTION_71", "GENERIC_ACTION_72", "GENERIC_ACTION_73", "GENERIC_ACTION_74", "GENERIC_ACTION_75", "GENERIC_ACTION_76", "GENERIC_ACTION_77", "GENERIC_ACTION_78", "GENERIC_ACTION_79", "GENERIC_ACTION_80", "GENERIC_ACTION_81", "GENERIC_ACTION_82", "GENERIC_ACTION_83", "GENERIC_ACTION_84", "GENERIC_ACTION_85", "GENERIC_ACTION_86", "GENERIC_ACTION_87", "GENERIC_ACTION_88", "GENERIC_ACTION_89", "GENERIC_ACTION_90", "GENERIC_ACTION_91", "GENERIC_ACTION_92", "GENERIC_ACTION_93", "GENERIC_ACTION_94", "GENERIC_ACTION_95", "GENERIC_ACTION_96", "GENERIC_ACTION_97", "GENERIC_ACTION_98", "GENERIC_ACTION_99", "GENERIC_ACTION_100", "GENERIC_ACTION_101", "GENERIC_ACTION_102", "GENERIC_ACTION_103", "GENERIC_ACTION_104", "GENERIC_ACTION_105", "GENERIC_ACTION_106", "GENERIC_ACTION_107", "GENERIC_ACTION_108", "GENERIC_ACTION_109", "GENERIC_ACTION_110", "GENERIC_ACTION_111", "GENERIC_ACTION_112", "GENERIC_ACTION_113", "GENERIC_ACTION_114", "GENERIC_ACTION_115", "GENERIC_ACTION_116", "GENERIC_ACTION_117", "GENERIC_ACTION_118", "GENERIC_ACTION_119", "GENERIC_ACTION_120", "GENERIC_ACTION_121", "GENERIC_ACTION_122", "GENERIC_ACTION_123", "GENERIC_ACTION_124", "GENERIC_ACTION_125", "GENERIC_ACTION_126", "GENERIC_ACTION_127", "GENERIC_ACTION_128", "GENERIC_ACTION_129", "GENERIC_ACTION_130", "THEME_GENERIC_ACTION_1", "THEME_GENERIC_ACTION_2", "THEME_GENERIC_ACTION_3", "THEME_GENERIC_ACTION_4", "THEME_GENERIC_ACTION_5", "THEME_GENERIC_ACTION_6", "THEME_GENERIC_ACTION_7", "THEME_GENERIC_ACTION_8", "THEME_GENERIC_ACTION_9", "THEME_GENERIC_ACTION_10", "THEME_GENERIC_ACTION_11", "THEME_GENERIC_ACTION_12", "THEME_GENERIC_ACTION_13", "THEME_GENERIC_ACTION_14", "THEME_GENERIC_ACTION_15", "THEME_GENERIC_ACTION_16", "THEME_GENERIC_ACTION_17", "THEME_GENERIC_ACTION_18", "THEME_GENERIC_ACTION_19", "THEME_GENERIC_ACTION_20", "THEME_GENERIC_ACTION_21", "THEME_GENERIC_ACTION_22", "THEME_GENERIC_ACTION_23", "THEME_GENERIC_ACTION_24", "THEME_GENERIC_ACTION_25", "THEME_GENERIC_ACTION_26", "THEME_GENERIC_ACTION_27", "THEME_GENERIC_ACTION_28", "THEME_GENERIC_ACTION_29", "THEME_GENERIC_ACTION_30" ]
            },
            "overrides" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "action_name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionRedeemRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_id" : {
              "type" : "string"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "partner_event_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionResponse" : {
        "type" : "object",
        "properties" : {
          "action_id" : {
            "type" : "string"
          },
          "action_type" : {
            "type" : "string",
            "enum" : [ "EMAIL", "SCHEDULE", "SIGNAL", "INCENTIVIZE", "SHARE_EVENT", "FIRE_AS_PERSON", "DATA_INTELLIGENCE", "APPROVE", "DECLINE", "EARN_REWARD", "FULFILL_REWARD", "REDEEM_REWARD", "CANCEL_REWARD", "REVOKE_REWARD", "STEP_SIGNAL", "WEBHOOK", "EXPRESSION" ]
          },
          "quality" : {
            "type" : "string",
            "enum" : [ "HIGH", "LOW", "ALWAYS" ]
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "action_type"
        }
      },
      "BuiltCampaignControllerActionRevokeRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_id" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionScheduleResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "schedule_name" : {
              "type" : "string"
            },
            "delays" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int64"
              }
            },
            "dates" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "date-time"
              }
            },
            "force" : {
              "type" : "boolean"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionShareEventResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        } ]
      },
      "BuiltCampaignControllerActionSignalResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "signal_polling_id" : {
              "type" : "string"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionStepSignalResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "polling_id" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerActionWebhookResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "webhook_id" : {
              "type" : "string"
            },
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/RuntimeEvaluatable<WebhookActionContext,Optional<Object>>"
              }
            }
          }
        } ]
      },
      "BuiltCampaignControllerResponse" : {
        "type" : "object",
        "properties" : {
          "controller_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "CLIENT" ]
          },
          "enabled" : {
            "type" : "boolean"
          },
          "enabled_on_states" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "NOT_LAUNCHED", "LIVE", "PAUSED", "ENDED", "STOPPED" ]
            }
          },
          "experience_types" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADVOCATE", "FRIEND" ]
            }
          },
          "selectors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "BEST_REFERRAL", "BEST_REFERRAL_SAME_PROGRAM", "TARGET", "MATCHING_CAMPAIGN", "RANDOM", "MATCHING_REFERRAL_CAMPAIGN" ]
            }
          },
          "triggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
            }
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuiltCampaignControllerActionResponse"
            }
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "partner_id_name" : {
            "type" : "string"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StepDataResponse"
            }
          },
          "value" : {
            "type" : "string"
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          }
        }
      },
      "BuiltCampaignControllerTriggerAccessResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "trusted_scopes" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "VERIFIED_CONSUMER", "UPDATE_PROFILE", "ONE_TIME", "PASSWORD_RESET", "BACKEND", "CLIENT_REPORT_DOWNLOAD" ]
              }
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerApiVersionCheckResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "match_type" : {
              "type" : "string",
              "enum" : [ "GREATER_THAN", "LESS_THAN", "MATCHING", "NOT_MATCHING", "GREATER_THAN_OR_EQUALS", "LESS_THAN_OR_EQUALS" ]
            },
            "api_version" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerDataIntelligenceEventResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "event_name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerEventResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "event_names" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "event_type" : {
              "type" : "string",
              "enum" : [ "LEGACY_CONSUMER_EVENT", "SCHEDULED", "REFERRED_BY", "INPUT", "SHARE", "STEP", "IDENTIFIED", "REFERRED", "DISPLACED", "DISPLACED_BY", "INTERNAL", "MESSAGE", "DATA_INTELLIGENCE", "SHAREABLE", "ASSET" ]
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerExpressionResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "expression" : {
              "$ref" : "#/components/schemas/RuntimeEvaluatable<ExpressionTriggerContext,Boolean>"
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerHasPriorRewardResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "filter_names" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "filter_scope" : {
              "type" : "string",
              "enum" : [ "CLIENT", "PROGRAM", "CAMPAIGN" ]
            },
            "filter_slots" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "filter_min_age" : {
              "type" : "object",
              "properties" : {
                "seconds" : {
                  "type" : "integer",
                  "format" : "int64"
                },
                "units" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "duration" : {
                        "type" : "object",
                        "properties" : {
                          "seconds" : {
                            "type" : "integer",
                            "format" : "int64"
                          },
                          "nano" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "zero" : {
                            "type" : "boolean"
                          },
                          "negative" : {
                            "type" : "boolean"
                          }
                        }
                      },
                      "timeBased" : {
                        "type" : "boolean"
                      },
                      "dateBased" : {
                        "type" : "boolean"
                      },
                      "durationEstimated" : {
                        "type" : "boolean"
                      }
                    }
                  }
                },
                "nano" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "zero" : {
                  "type" : "boolean"
                },
                "negative" : {
                  "type" : "boolean"
                }
              }
            },
            "filter_max_age" : {
              "type" : "object",
              "properties" : {
                "seconds" : {
                  "type" : "integer",
                  "format" : "int64"
                },
                "units" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "duration" : {
                        "type" : "object",
                        "properties" : {
                          "seconds" : {
                            "type" : "integer",
                            "format" : "int64"
                          },
                          "nano" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "zero" : {
                            "type" : "boolean"
                          },
                          "negative" : {
                            "type" : "boolean"
                          }
                        }
                      },
                      "timeBased" : {
                        "type" : "boolean"
                      },
                      "dateBased" : {
                        "type" : "boolean"
                      },
                      "durationEstimated" : {
                        "type" : "boolean"
                      }
                    }
                  }
                },
                "nano" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "zero" : {
                  "type" : "boolean"
                },
                "negative" : {
                  "type" : "boolean"
                }
              }
            },
            "filter_min_date" : {
              "type" : "string",
              "format" : "date-time"
            },
            "filter_max_date" : {
              "type" : "string",
              "format" : "date-time"
            },
            "filter_reward_supplier_ids" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "filter_face_value_types" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "PERCENT_OFF", "POINTS", "USD", "GBP", "EUR", "JPY", "CNY", "CAD", "AUD", "BRL", "INR", "NZD" ]
              }
            },
            "filter_states" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "EARNED", "FULFILLED", "SENT", "REDEEMED", "FAILED", "CANCELED", "REVOKED" ]
              }
            },
            "filter_expressions" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "sum_of_face_value_max" : {
              "type" : "number"
            },
            "sum_of_face_value_min" : {
              "type" : "number"
            },
            "count_max" : {
              "type" : "integer",
              "format" : "int32"
            },
            "count_min" : {
              "type" : "integer",
              "format" : "int32"
            },
            "count_matches" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerHasPriorStepResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "filter_names" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "filter_scope" : {
              "type" : "string",
              "enum" : [ "CLIENT", "PROGRAM", "CAMPAIGN", "ATTRIBUTED" ]
            },
            "filter_partner_event_id_name" : {
              "type" : "string"
            },
            "filter_partner_event_id_value" : {
              "type" : "string"
            },
            "filter_partner_event_id" : {
              "$ref" : "#/components/schemas/PartnerEventId"
            },
            "filter_matching_partner_event_id" : {
              "type" : "string",
              "enum" : [ "DISABLED", "MATCH_ANY" ]
            },
            "filter_min_age" : {
              "type" : "object",
              "properties" : {
                "seconds" : {
                  "type" : "integer",
                  "format" : "int64"
                },
                "units" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "duration" : {
                        "type" : "object",
                        "properties" : {
                          "seconds" : {
                            "type" : "integer",
                            "format" : "int64"
                          },
                          "nano" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "zero" : {
                            "type" : "boolean"
                          },
                          "negative" : {
                            "type" : "boolean"
                          }
                        }
                      },
                      "timeBased" : {
                        "type" : "boolean"
                      },
                      "dateBased" : {
                        "type" : "boolean"
                      },
                      "durationEstimated" : {
                        "type" : "boolean"
                      }
                    }
                  }
                },
                "nano" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "zero" : {
                  "type" : "boolean"
                },
                "negative" : {
                  "type" : "boolean"
                }
              }
            },
            "filter_max_age" : {
              "type" : "object",
              "properties" : {
                "seconds" : {
                  "type" : "integer",
                  "format" : "int64"
                },
                "units" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "duration" : {
                        "type" : "object",
                        "properties" : {
                          "seconds" : {
                            "type" : "integer",
                            "format" : "int64"
                          },
                          "nano" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "zero" : {
                            "type" : "boolean"
                          },
                          "negative" : {
                            "type" : "boolean"
                          }
                        }
                      },
                      "timeBased" : {
                        "type" : "boolean"
                      },
                      "dateBased" : {
                        "type" : "boolean"
                      },
                      "durationEstimated" : {
                        "type" : "boolean"
                      }
                    }
                  }
                },
                "nano" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "zero" : {
                  "type" : "boolean"
                },
                "negative" : {
                  "type" : "boolean"
                }
              }
            },
            "filter_min_value" : {
              "type" : "number"
            },
            "filter_max_value" : {
              "type" : "number"
            },
            "filter_quality" : {
              "type" : "string",
              "enum" : [ "ANY", "HIGH", "LOW" ]
            },
            "filter_expressions" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "filter_expression" : {
              "$ref" : "#/components/schemas/RuntimeEvaluatable<StepHasPriorStepTriggerContext,Boolean>"
            },
            "filter_program_label" : {
              "type" : "string"
            },
            "filter_campaign_id" : {
              "type" : "string"
            },
            "filter_program_labels" : {
              "$ref" : "#/components/schemas/RuntimeEvaluatable<HasPriorStepTriggerContext,Set<String>>"
            },
            "filter_campaign_ids" : {
              "$ref" : "#/components/schemas/RuntimeEvaluatable<HasPriorStepTriggerContext,Set<Id<Object>>>"
            },
            "filter_min_date" : {
              "type" : "string",
              "format" : "date-time"
            },
            "filter_max_date" : {
              "type" : "string",
              "format" : "date-time"
            },
            "sum_of_value_min" : {
              "type" : "number"
            },
            "sum_of_value_max" : {
              "type" : "number"
            },
            "count_min" : {
              "type" : "integer",
              "format" : "int32"
            },
            "count_max" : {
              "type" : "integer",
              "format" : "int32"
            },
            "count_matches" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerLegacyQualityResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "action_type" : {
              "type" : "string",
              "enum" : [ "ANY_CLICK", "ANY_SHARE", "ANY_REGISTER", "ANY_PURCHASE", "ANY_PROMOTION", "ANY_SHARE_REWARD", "GENERIC_ACTION_1", "GENERIC_ACTION_2", "GENERIC_ACTION_3", "GENERIC_ACTION_4", "GENERIC_ACTION_5", "GENERIC_ACTION_6", "GENERIC_ACTION_7", "GENERIC_ACTION_8", "GENERIC_ACTION_9", "GENERIC_ACTION_10", "GENERIC_ACTION_11", "GENERIC_ACTION_12", "GENERIC_ACTION_13", "GENERIC_ACTION_14", "GENERIC_ACTION_15", "GENERIC_ACTION_16", "GENERIC_ACTION_17", "GENERIC_ACTION_18", "GENERIC_ACTION_19", "GENERIC_ACTION_20", "GENERIC_ACTION_21", "GENERIC_ACTION_22", "GENERIC_ACTION_23", "GENERIC_ACTION_24", "GENERIC_ACTION_25", "GENERIC_ACTION_26", "GENERIC_ACTION_27", "GENERIC_ACTION_28", "GENERIC_ACTION_29", "GENERIC_ACTION_30", "GENERIC_ACTION_31", "GENERIC_ACTION_32", "GENERIC_ACTION_33", "GENERIC_ACTION_34", "GENERIC_ACTION_35", "GENERIC_ACTION_36", "GENERIC_ACTION_37", "GENERIC_ACTION_38", "GENERIC_ACTION_39", "GENERIC_ACTION_40", "GENERIC_ACTION_41", "GENERIC_ACTION_42", "GENERIC_ACTION_43", "GENERIC_ACTION_44", "GENERIC_ACTION_45", "GENERIC_ACTION_46", "GENERIC_ACTION_47", "GENERIC_ACTION_48", "GENERIC_ACTION_49", "GENERIC_ACTION_50", "GENERIC_ACTION_51", "GENERIC_ACTION_52", "GENERIC_ACTION_53", "GENERIC_ACTION_54", "GENERIC_ACTION_55", "GENERIC_ACTION_56", "GENERIC_ACTION_57", "GENERIC_ACTION_58", "GENERIC_ACTION_59", "GENERIC_ACTION_60", "GENERIC_ACTION_61", "GENERIC_ACTION_62", "GENERIC_ACTION_63", "GENERIC_ACTION_64", "GENERIC_ACTION_65", "GENERIC_ACTION_66", "GENERIC_ACTION_67", "GENERIC_ACTION_68", "GENERIC_ACTION_69", "GENERIC_ACTION_70", "GENERIC_ACTION_71", "GENERIC_ACTION_72", "GENERIC_ACTION_73", "GENERIC_ACTION_74", "GENERIC_ACTION_75", "GENERIC_ACTION_76", "GENERIC_ACTION_77", "GENERIC_ACTION_78", "GENERIC_ACTION_79", "GENERIC_ACTION_80", "GENERIC_ACTION_81", "GENERIC_ACTION_82", "GENERIC_ACTION_83", "GENERIC_ACTION_84", "GENERIC_ACTION_85", "GENERIC_ACTION_86", "GENERIC_ACTION_87", "GENERIC_ACTION_88", "GENERIC_ACTION_89", "GENERIC_ACTION_90", "GENERIC_ACTION_91", "GENERIC_ACTION_92", "GENERIC_ACTION_93", "GENERIC_ACTION_94", "GENERIC_ACTION_95", "GENERIC_ACTION_96", "GENERIC_ACTION_97", "GENERIC_ACTION_98", "GENERIC_ACTION_99", "GENERIC_ACTION_100", "GENERIC_ACTION_101", "GENERIC_ACTION_102", "GENERIC_ACTION_103", "GENERIC_ACTION_104", "GENERIC_ACTION_105", "GENERIC_ACTION_106", "GENERIC_ACTION_107", "GENERIC_ACTION_108", "GENERIC_ACTION_109", "GENERIC_ACTION_110", "GENERIC_ACTION_111", "GENERIC_ACTION_112", "GENERIC_ACTION_113", "GENERIC_ACTION_114", "GENERIC_ACTION_115", "GENERIC_ACTION_116", "GENERIC_ACTION_117", "GENERIC_ACTION_118", "GENERIC_ACTION_119", "GENERIC_ACTION_120", "GENERIC_ACTION_121", "GENERIC_ACTION_122", "GENERIC_ACTION_123", "GENERIC_ACTION_124", "GENERIC_ACTION_125", "GENERIC_ACTION_126", "GENERIC_ACTION_127", "GENERIC_ACTION_128", "GENERIC_ACTION_129", "GENERIC_ACTION_130", "THEME_GENERIC_ACTION_1", "THEME_GENERIC_ACTION_2", "THEME_GENERIC_ACTION_3", "THEME_GENERIC_ACTION_4", "THEME_GENERIC_ACTION_5", "THEME_GENERIC_ACTION_6", "THEME_GENERIC_ACTION_7", "THEME_GENERIC_ACTION_8", "THEME_GENERIC_ACTION_9", "THEME_GENERIC_ACTION_10", "THEME_GENERIC_ACTION_11", "THEME_GENERIC_ACTION_12", "THEME_GENERIC_ACTION_13", "THEME_GENERIC_ACTION_14", "THEME_GENERIC_ACTION_15", "THEME_GENERIC_ACTION_16", "THEME_GENERIC_ACTION_17", "THEME_GENERIC_ACTION_18", "THEME_GENERIC_ACTION_19", "THEME_GENERIC_ACTION_20", "THEME_GENERIC_ACTION_21", "THEME_GENERIC_ACTION_22", "THEME_GENERIC_ACTION_23", "THEME_GENERIC_ACTION_24", "THEME_GENERIC_ACTION_25", "THEME_GENERIC_ACTION_26", "THEME_GENERIC_ACTION_27", "THEME_GENERIC_ACTION_28", "THEME_GENERIC_ACTION_29", "THEME_GENERIC_ACTION_30" ]
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerMaxMindResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "default_quality_score" : {
              "type" : "string",
              "enum" : [ "ERROR", "LOW", "HIGH" ]
            },
            "risk_threshold" : {
              "type" : "integer",
              "format" : "int64"
            },
            "ip_threshold" : {
              "type" : "integer",
              "format" : "int64"
            },
            "allow_high_risk_email" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerPurchaseResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "period_since_last_purchase" : {
              "type" : "integer",
              "format" : "int64"
            },
            "operator" : {
              "type" : "string",
              "enum" : [ "LESS_THAN", "GREATER_THAN" ]
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerReferredByEventResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "referral_originator" : {
              "type" : "string",
              "enum" : [ "FRIEND", "ADVOCATE" ]
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerResponse" : {
        "type" : "object",
        "properties" : {
          "trigger_id" : {
            "type" : "string"
          },
          "trigger_type" : {
            "type" : "string",
            "enum" : [ "SHARE", "PURCHASE", "EVENT", "SCORE", "ZONE_STATE", "API_VERSION", "REFERRED_BY_EVENT", "LEGACY_QUALITY", "EXPRESSION", "ACCESS", "DATA_INTELLIGENCE_EVENT", "HAS_PRIOR_STEP", "MAXMIND", "REWARD_EVENT", "HAS_PRIOR_REWARD" ]
          },
          "trigger_phase" : {
            "type" : "string",
            "enum" : [ "MATCHING", "QUALIFYING", "QUALITY" ]
          },
          "trigger_name" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "trigger_type"
        }
      },
      "BuiltCampaignControllerTriggerRewardEventResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "reward_states" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "EARNED", "FULFILLED", "CANCELED", "REVOKED", "REDEEMED" ]
              }
            },
            "event_names" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "slots" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "tags" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerScoreResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "score_result" : {
              "type" : "string"
            },
            "cause_event_name" : {
              "type" : "string"
            },
            "channel" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerShareResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "share_types" : {
              "uniqueItems" : true,
              "type" : "array",
              "writeOnly" : true,
              "items" : {
                "type" : "string",
                "enum" : [ "ANY", "EMAIL", "FACEBOOK", "TWITTER", "EXTOLE_EMAIL", "EXTOLE_TWITTER" ]
              }
            },
            "channels" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "ANY", "EMAIL", "FACEBOOK", "TWITTER", "EXTOLE_EMAIL", "EXTOLE_TWITTER" ]
              }
            },
            "quality" : {
              "type" : "string",
              "enum" : [ "ANY", "HIGH", "LOW" ]
            }
          }
        } ]
      },
      "BuiltCampaignControllerTriggerZoneStateResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BuiltCampaignControllerTriggerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "zone_name" : {
              "type" : "string"
            },
            "step_name" : {
              "type" : "string"
            },
            "invert_mapping_state" : {
              "type" : "boolean"
            },
            "creative_classifications" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "NONE", "ANY", "JAVASCRIPT", "EMAIL", "PAGE" ]
              }
            }
          }
        } ]
      },
      "BuiltCampaignFlowStepAppResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/BuiltCampaignFlowStepAppTypeResponse"
          }
        }
      },
      "BuiltCampaignFlowStepAppTypeResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "BuiltCampaignFlowStepMetricResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "expression" : {
            "type" : "string"
          },
          "unit" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BuiltCampaignFlowStepResponse" : {
        "type" : "object",
        "properties" : {
          "flow_step_id" : {
            "type" : "string"
          },
          "flow_path" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "number"
          },
          "step_name" : {
            "type" : "string"
          },
          "icon_type" : {
            "type" : "string"
          },
          "metrics" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuiltCampaignFlowStepMetricResponse"
            }
          },
          "apps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuiltCampaignFlowStepAppResponse"
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "icon_color" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "words" : {
            "$ref" : "#/components/schemas/BuiltCampaignFlowStepWordsResponse"
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          }
        }
      },
      "BuiltCampaignFlowStepWordsResponse" : {
        "type" : "object",
        "properties" : {
          "singular_noun" : {
            "type" : "string"
          },
          "plural_noun" : {
            "type" : "string"
          },
          "present_verb" : {
            "type" : "string"
          },
          "past_tense_verb" : {
            "type" : "string"
          },
          "person_counting_name" : {
            "type" : "string"
          }
        }
      },
      "BuiltCampaignResponse" : {
        "type" : "object",
        "properties" : {
          "campaign_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "steps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuiltCampaignStepResponse"
            }
          },
          "incentive_id" : {
            "type" : "string"
          },
          "updated_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "last_published_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "is_published" : {
            "type" : "boolean"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "NOT_LAUNCHED", "LIVE", "PAUSED", "ENDED", "STOPPED" ]
          },
          "components" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentResponse"
            }
          },
          "controllers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuiltCampaignControllerResponse"
            }
          },
          "labels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignLabelResponse"
            }
          },
          "program_label" : {
            "type" : "string"
          },
          "incentive" : {
            "$ref" : "#/components/schemas/IncentiveResponse"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parent_version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "program_type" : {
            "type" : "string"
          },
          "theme_name" : {
            "type" : "string"
          },
          "flow_steps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuiltCampaignFlowStepResponse"
            }
          },
          "campaign_locks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DUPLICATE", "EDIT" ]
            }
          }
        }
      },
      "BuiltCampaignStepMappingResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "zone" : {
            "$ref" : "#/components/schemas/BuiltCampaignStepMappingZoneResponse"
          },
          "creative" : {
            "$ref" : "#/components/schemas/CreativeResponse"
          },
          "scope" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "CLIENT" ]
          },
          "enabled" : {
            "type" : "boolean"
          },
          "enabled_on_states" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "NOT_LAUNCHED", "LIVE", "PAUSED", "ENDED", "STOPPED" ]
            }
          },
          "show_enable_toggle" : {
            "type" : "boolean"
          },
          "experience_types" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADVOCATE", "FRIEND" ]
            }
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StepDataResponse"
            }
          }
        }
      },
      "BuiltCampaignStepMappingZoneResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "BuiltCampaignStepResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "enum" : [ "PROMOTE", "ADVOCATE", "FRIEND", "OTHER", "ADMIN" ]
          },
          "processor" : {
            "$ref" : "#/components/schemas/CampaignStepProcessor"
          },
          "mappings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuiltCampaignStepMappingResponse"
            }
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "archived" : {
            "type" : "boolean"
          },
          "component_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignComponentReferenceResponse"
            }
          }
        }
      },
      "PartnerEventId" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "RuntimeEvaluatable<ExpressionTriggerContext,Boolean>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "RuntimeEvaluatable<HasPriorStepTriggerContext,Optional<String>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "RuntimeEvaluatable<HasPriorStepTriggerContext,Set<Id<Object>>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "RuntimeEvaluatable<HasPriorStepTriggerContext,Set<String>>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "RuntimeEvaluatable<StepHasPriorStepTriggerContext,Boolean>" : {
        "type" : "object",
        "properties" : {
          "expectedResultType" : {
            "$ref" : "#/components/schemas/JavaType"
          }
        }
      },
      "CampaignUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "program_type" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AccessTokenResponse" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          },
          "client_id" : {
            "type" : "string"
          },
          "person_id" : {
            "type" : "string"
          },
          "expires_in" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "VERIFIED_CONSUMER", "UPDATE_PROFILE", "ONE_TIME", "PASSWORD_RESET", "BACKEND", "CLIENT_REPORT_DOWNLOAD" ]
            }
          }
        }
      },
      "AccessTokenCreationRequest" : {
        "type" : "object",
        "properties" : {
          "client_id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "VERIFIED_CONSUMER", "UPDATE_PROFILE", "ONE_TIME", "PASSWORD_RESET", "BACKEND", "CLIENT_REPORT_DOWNLOAD" ]
            }
          },
          "duration_seconds" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "AuthCodeResponseValidateRequest" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        }
      },
      "ClientCoreSettingsV2Response" : {
        "type" : "object",
        "properties" : {
          "core_version" : {
            "type" : "string"
          }
        }
      },
      "ClientResponse" : {
        "type" : "object",
        "properties" : {
          "client_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "short_name" : {
            "type" : "string"
          },
          "client_type" : {
            "type" : "string",
            "enum" : [ "CUSTOMER", "EX_CUSTOMER", "TEST", "UNCLASSIFIED" ]
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pod" : {
            "type" : "string"
          },
          "core_settings" : {
            "$ref" : "#/components/schemas/ClientCoreSettingsV2Response"
          }
        }
      },
      "ClientUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "client_type" : {
            "type" : "string",
            "enum" : [ "CUSTOMER", "EX_CUSTOMER", "TEST", "UNCLASSIFIED" ]
          },
          "pod" : {
            "type" : "string"
          }
        }
      },
      "ClientCreationRequest" : {
        "required" : [ "user_email", "user_password" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "short_name" : {
            "type" : "string"
          },
          "client_name" : {
            "type" : "string",
            "writeOnly" : true
          },
          "domain_name" : {
            "type" : "string",
            "writeOnly" : true
          },
          "user_email" : {
            "type" : "string"
          },
          "user_password" : {
            "type" : "string"
          },
          "user_first_name" : {
            "type" : "string"
          },
          "user_last_name" : {
            "type" : "string"
          },
          "verification_code" : {
            "type" : "string"
          },
          "pod" : {
            "type" : "string"
          },
          "client_type" : {
            "type" : "string",
            "enum" : [ "CUSTOMER", "EX_CUSTOMER", "TEST", "UNCLASSIFIED" ]
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "PersonDataResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "CLIENT" ]
          },
          "value" : {
            "type" : "object"
          }
        }
      },
      "City" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "Country" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "isoCode" : {
            "type" : "string"
          }
        }
      },
      "Location" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "PersonLocaleResponse" : {
        "type" : "object",
        "properties" : {
          "last_browser" : {
            "type" : "string"
          },
          "user_specified" : {
            "type" : "string"
          }
        }
      },
      "PersonResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The first name of the friend."
          },
          "last_name" : {
            "type" : "string",
            "description" : "The last name of the friend."
          },
          "picture_url" : {
            "type" : "string",
            "description" : "A URL that has a picture of the person."
          },
          "partner_user_id" : {
            "type" : "string",
            "description" : "Your unique identifier for this person."
          },
          "locale" : {
            "$ref" : "#/components/schemas/PersonLocaleResponse"
          },
          "version" : {
            "type" : "string"
          },
          "blocked" : {
            "type" : "boolean"
          },
          "request_contexts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RequestContextResponse"
            }
          }
        },
        "description" : "Extole PersonResponse"
      },
      "RequestContextResponse" : {
        "type" : "object",
        "properties" : {
          "ip" : {
            "type" : "string"
          },
          "device_id" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "country" : {
            "$ref" : "#/components/schemas/Country"
          },
          "state" : {
            "$ref" : "#/components/schemas/State"
          },
          "city" : {
            "$ref" : "#/components/schemas/City"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          }
        }
      },
      "State" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "isoCode" : {
            "type" : "string"
          }
        }
      },
      "PartnerEventIdResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PersonStepResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "campaign_id" : {
            "type" : "string"
          },
          "program_label" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "step_name" : {
            "type" : "string"
          },
          "event_id" : {
            "type" : "string"
          },
          "event_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "value" : {
            "type" : "string"
          },
          "partner_event_id" : {
            "$ref" : "#/components/schemas/PartnerEventIdResponse"
          },
          "quality" : {
            "type" : "string",
            "enum" : [ "HIGH", "LOW", "NONE" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonDataResponse"
            }
          }
        }
      },
      "PersonShareableContentResponse" : {
        "type" : "object",
        "properties" : {
          "partner_content_id" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "image_url" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "PersonShareableResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          },
          "person_id" : {
            "type" : "string"
          },
          "content" : {
            "$ref" : "#/components/schemas/PersonShareableContentResponse"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "PersonShareResponse" : {
        "type" : "object",
        "properties" : {
          "share_id" : {
            "type" : "string"
          },
          "shareable_id" : {
            "type" : "string"
          },
          "channel" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "share_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "recipient" : {
            "type" : "string"
          },
          "friend_person_id" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "partner_id" : {
            "$ref" : "#/components/schemas/PartnerEventIdResponse"
          },
          "subject" : {
            "type" : "string"
          }
        }
      },
      "PersonJourneyResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "campaign_id" : {
            "type" : "string"
          },
          "entry_label" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "journey_type" : {
            "type" : "string"
          },
          "entry_reason" : {
            "type" : "string"
          },
          "entry_zone" : {
            "type" : "string"
          },
          "last_zone" : {
            "type" : "string"
          },
          "entry_source" : {
            "type" : "string"
          },
          "last_source" : {
            "type" : "string"
          },
          "entry_channel" : {
            "type" : "string"
          },
          "last_channel" : {
            "type" : "string"
          },
          "entry_share_id" : {
            "type" : "string"
          },
          "last_share_id" : {
            "type" : "string"
          },
          "entry_shareable_id" : {
            "type" : "string"
          },
          "last_shareable_id" : {
            "type" : "string"
          },
          "entry_advocate_code" : {
            "type" : "string"
          },
          "last_advocate_code" : {
            "type" : "string"
          },
          "entry_promotable_code" : {
            "type" : "string"
          },
          "last_promotable_code" : {
            "type" : "string"
          },
          "entry_consumer_event_id" : {
            "type" : "string"
          },
          "last_consumer_event_id" : {
            "type" : "string"
          },
          "entry_profile_id" : {
            "type" : "string"
          },
          "last_profile_id" : {
            "type" : "string"
          },
          "entry_advocate_partner_id" : {
            "type" : "string"
          },
          "last_advocate_partner_id" : {
            "type" : "string"
          },
          "entry_coupon_code" : {
            "type" : "string"
          },
          "last_coupon_code" : {
            "type" : "string"
          },
          "entry_referral_reason" : {
            "type" : "string"
          },
          "last_referral_reason" : {
            "type" : "string"
          },
          "entry_referral_source" : {
            "type" : "string"
          },
          "last_referral_source" : {
            "type" : "string"
          },
          "created_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonDataResponse"
            }
          }
        }
      },
      "PersonRewardResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "reward_id" : {
            "type" : "string"
          },
          "partner_reward_supplier_id" : {
            "type" : "string"
          },
          "reward_supplier_id" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "string"
          },
          "face_value" : {
            "type" : "string"
          },
          "face_value_type" : {
            "type" : "string"
          },
          "date_issued" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string"
          },
          "campaign_id" : {
            "type" : "string"
          },
          "program_label" : {
            "type" : "string"
          },
          "sandbox" : {
            "type" : "string"
          },
          "partner_reward_id" : {
            "type" : "string"
          },
          "date_earned" : {
            "type" : "string",
            "format" : "date-time"
          },
          "slots" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "reward_name" : {
            "type" : "string"
          },
          "value_of_rewarded_event" : {
            "type" : "number"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "expiry_date" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PersonRelationshipResponse" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "type" : "string"
          },
          "is_parent" : {
            "type" : "boolean"
          },
          "reason" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "other_person_id" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "PersonNetworkStatsResponse" : {
        "type" : "object",
        "properties" : {
          "aov" : {
            "type" : "string"
          },
          "ltv" : {
            "type" : "string"
          },
          "activities" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactions" : {
            "type" : "integer",
            "format" : "int64"
          },
          "conversions" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PersonStatsResponse" : {
        "type" : "object",
        "properties" : {
          "aov" : {
            "type" : "string"
          },
          "ltv" : {
            "type" : "string"
          },
          "activities" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactions" : {
            "type" : "integer",
            "format" : "int64"
          },
          "conversions" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PersonRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The first name of the friend."
          },
          "last_name" : {
            "type" : "string",
            "description" : "The last name of the friend."
          },
          "picture_url" : {
            "type" : "string",
            "description" : "A URL that has a picture of the person."
          },
          "partner_user_id" : {
            "type" : "string",
            "description" : "Your unique identifier for this person."
          },
          "blocked" : {
            "type" : "boolean"
          },
          "self_rewarding_blocked" : {
            "type" : "boolean"
          },
          "friend_rewarding_blocked" : {
            "type" : "boolean"
          },
          "profile_block" : {
            "$ref" : "#/components/schemas/ProfileBlockRequest"
          }
        },
        "description" : "Extole PersonRequest"
      },
      "ProfileBlockRequest" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "BLOCK", "UNBLOCK" ]
          },
          "reason" : {
            "type" : "string"
          }
        }
      },
      "IsSamePersonResponse" : {
        "type" : "object",
        "properties" : {
          "is_same" : {
            "type" : "boolean"
          }
        }
      },
      "PersonLocaleV2Response" : {
        "type" : "object",
        "properties" : {
          "last_browser" : {
            "type" : "string"
          },
          "user_specified" : {
            "type" : "string"
          }
        }
      },
      "PersonV2Response" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The first name of the friend."
          },
          "last_name" : {
            "type" : "string",
            "description" : "The last name of the friend."
          },
          "picture_url" : {
            "type" : "string",
            "description" : "A URL that has a picture of the person."
          },
          "partner_user_id" : {
            "type" : "string",
            "description" : "Your unique identifier for this person."
          },
          "cookie_consent" : {
            "type" : "string"
          },
          "cookie_consent_type" : {
            "type" : "string",
            "enum" : [ "EXTOLE", "CLIENT", "UNSET" ]
          },
          "processing_consent" : {
            "type" : "string"
          },
          "processing_consent_type" : {
            "type" : "string",
            "enum" : [ "EXTOLE", "CLIENT", "UNSET" ]
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "blocked" : {
            "type" : "boolean"
          },
          "self_rewarding_blocked" : {
            "type" : "boolean"
          },
          "friend_rewarding_blocked" : {
            "type" : "boolean"
          },
          "request_contexts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RequestContextResponse"
            }
          },
          "locale" : {
            "$ref" : "#/components/schemas/PersonLocaleV2Response"
          },
          "profile_blocks" : {
            "$ref" : "#/components/schemas/ProfileBlockResponse"
          }
        },
        "description" : "Extole PersonResponse"
      },
      "ProfileBlockResponse" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PersonV2Request" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string",
            "description" : "The first name of the friend."
          },
          "last_name" : {
            "type" : "string",
            "description" : "The last name of the friend."
          },
          "picture_url" : {
            "type" : "string",
            "description" : "A URL that has a picture of the person."
          },
          "partner_user_id" : {
            "type" : "string",
            "description" : "Your unique identifier for this person."
          },
          "blocked" : {
            "type" : "boolean"
          },
          "self_rewarding_blocked" : {
            "type" : "boolean"
          },
          "friend_rewarding_blocked" : {
            "type" : "boolean"
          },
          "profile_block" : {
            "$ref" : "#/components/schemas/ProfileBlockRequest"
          }
        },
        "description" : "Extole PersonRequest"
      },
      "IsSamePersonV2Response" : {
        "type" : "object",
        "properties" : {
          "is_same" : {
            "type" : "boolean"
          }
        }
      },
      "RelationshipV2Response" : {
        "type" : "object",
        "properties" : {
          "shareable_id" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "person" : {
            "$ref" : "#/components/schemas/PersonV2Response"
          }
        }
      },
      "DataAttributeMapping" : {
        "type" : "object",
        "properties" : {
          "attribute" : {
            "type" : "string"
          },
          "source_attribute" : {
            "type" : "string"
          },
          "default_value" : {
            "type" : "string"
          }
        }
      },
      "EventNameMatchPrehandlerConditionResponse" : {
        "type" : "object",
        "description" : "Condition that checks the event name.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerConditionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "event_names" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "type" : {
              "type" : "string",
              "default" : "EVENT_NAME_MATCH",
              "enum" : [ "EVENT_NAME_MATCH", "HTTP_HEADER_MATCH", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "HttpHeaderMatchPrehandlerConditionResponse" : {
        "type" : "object",
        "description" : "Condition that checks the event HTTP headers.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerConditionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "http_headers" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "type" : {
              "type" : "string",
              "default" : "HTTP_HEADER_MATCH",
              "enum" : [ "EVENT_NAME_MATCH", "HTTP_HEADER_MATCH", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "JavascriptPrehandlerActionResponse" : {
        "type" : "object",
        "description" : "Action represented by Javascript that can change the event.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "javascript" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string",
              "default" : "JAVASCRIPT_V1",
              "enum" : [ "SET_DATA", "SET_SANDBOX", "MAP_DATA_ATTRIBUTES", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "JavascriptPrehandlerConditionResponse" : {
        "type" : "object",
        "description" : "Condition represented by Javascript. It evaluates to true if the javascript returns true.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerConditionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "javascript" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string",
              "default" : "JAVASCRIPT_V1",
              "enum" : [ "EVENT_NAME_MATCH", "HTTP_HEADER_MATCH", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "MapDataAttributesPrehandlerActionResponse" : {
        "type" : "object",
        "description" : "Action represented by data mappers that can change the data of the event.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data_attribute_mappings" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DataAttributeMapping"
              }
            },
            "type" : {
              "type" : "string",
              "default" : "MAP_DATA_ATTRIBUTES",
              "enum" : [ "SET_DATA", "SET_SANDBOX", "MAP_DATA_ATTRIBUTES", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "PrehandlerActionResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "SET_DATA", "SET_SANDBOX", "MAP_DATA_ATTRIBUTES", "JAVASCRIPT_V1" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "SET_DATA" : "#/components/schemas/SetDataPrehandlerActionResponse",
            "SET_SANDBOX" : "#/components/schemas/SetSandboxPrehandlerActionResponse",
            "JAVASCRIPT_V1" : "#/components/schemas/JavascriptPrehandlerActionResponse",
            "MAP_DATA_ATTRIBUTES" : "#/components/schemas/MapDataAttributesPrehandlerActionResponse"
          }
        }
      },
      "PrehandlerConditionResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "EVENT_NAME_MATCH", "HTTP_HEADER_MATCH", "JAVASCRIPT_V1" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "EVENT_NAME_MATCH" : "#/components/schemas/EventNameMatchPrehandlerConditionResponse",
            "HTTP_HEADER_MATCH" : "#/components/schemas/HttpHeaderMatchPrehandlerConditionResponse",
            "JAVASCRIPT_V1" : "#/components/schemas/JavascriptPrehandlerConditionResponse"
          }
        }
      },
      "PrehandlerResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          },
          "created_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "conditions" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/EventNameMatchPrehandlerConditionResponse"
              }, {
                "$ref" : "#/components/schemas/HttpHeaderMatchPrehandlerConditionResponse"
              }, {
                "$ref" : "#/components/schemas/JavascriptPrehandlerConditionResponse"
              } ]
            }
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/SetDataPrehandlerActionResponse"
              }, {
                "$ref" : "#/components/schemas/SetSandboxPrehandlerActionResponse"
              }, {
                "$ref" : "#/components/schemas/JavascriptPrehandlerActionResponse"
              } ]
            }
          }
        }
      },
      "SetDataPrehandlerActionResponse" : {
        "type" : "object",
        "description" : "Action that modifies the event data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "nullable" : true
              },
              "nullable" : true
            },
            "default_data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "nullable" : true
              },
              "nullable" : true
            },
            "delete_data" : {
              "uniqueItems" : true,
              "type" : "array",
              "nullable" : true,
              "items" : {
                "type" : "string",
                "nullable" : true
              }
            },
            "type" : {
              "type" : "string",
              "default" : "SET_DATA",
              "enum" : [ "SET_DATA", "SET_SANDBOX", "MAP_DATA_ATTRIBUTES", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "SetSandboxPrehandlerActionResponse" : {
        "type" : "object",
        "description" : "Action that modifies the event sandbox.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerActionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "sandbox_id" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string",
              "default" : "SET_SANDBOX",
              "enum" : [ "SET_DATA", "SET_SANDBOX", "MAP_DATA_ATTRIBUTES", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "EventNameMatchPrehandlerConditionRequest" : {
        "required" : [ "event_names", "type" ],
        "type" : "object",
        "description" : "Condition that checks the event name.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerConditionRequest"
        }, {
          "type" : "object",
          "properties" : {
            "event_names" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "Condition evaluates to true if the event name is present in this set. Event names are not case sensitive.",
              "items" : {
                "type" : "string",
                "description" : "Condition evaluates to true if the event name is present in this set. Event names are not case sensitive."
              }
            },
            "type" : {
              "type" : "string",
              "default" : "EVENT_NAME_MATCH",
              "enum" : [ "EVENT_NAME_MATCH", "HTTP_HEADER_MATCH", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "HttpHeaderMatchPrehandlerConditionRequest" : {
        "required" : [ "http_headers", "type" ],
        "type" : "object",
        "description" : "Condition that checks the event HTTP headers.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerConditionRequest"
        }, {
          "type" : "object",
          "properties" : {
            "http_headers" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "description" : "Condition evaluates to true if any of these HTTP headers are present in the request. At least one HTTP header value should match. HTTP header names are not case sensitive.",
                "items" : {
                  "type" : "string",
                  "description" : "Condition evaluates to true if any of these HTTP headers are present in the request. At least one HTTP header value should match. HTTP header names are not case sensitive."
                }
              },
              "description" : "Condition evaluates to true if any of these HTTP headers are present in the request. At least one HTTP header value should match. HTTP header names are not case sensitive."
            },
            "type" : {
              "type" : "string",
              "default" : "HTTP_HEADER_MATCH",
              "enum" : [ "EVENT_NAME_MATCH", "HTTP_HEADER_MATCH", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "JavascriptPrehandlerActionRequest" : {
        "required" : [ "javascript", "type" ],
        "type" : "object",
        "description" : "Action represented by Javascript that can change the event.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerActionRequest"
        }, {
          "type" : "object",
          "properties" : {
            "javascript" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string",
              "default" : "JAVASCRIPT_V1",
              "enum" : [ "SET_DATA", "SET_SANDBOX", "MAP_DATA_ATTRIBUTES", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "JavascriptPrehandlerConditionRequest" : {
        "required" : [ "javascript", "type" ],
        "type" : "object",
        "description" : "Condition represented by Javascript. It evaluates to true if the javascript returns true.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerConditionRequest"
        }, {
          "type" : "object",
          "properties" : {
            "javascript" : {
              "type" : "string"
            },
            "type" : {
              "type" : "string",
              "default" : "JAVASCRIPT_V1",
              "enum" : [ "EVENT_NAME_MATCH", "HTTP_HEADER_MATCH", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "MapDataAttributesPrehandlerActionRequest" : {
        "required" : [ "data_attribute_mappings", "type" ],
        "type" : "object",
        "description" : "Action that modifies the event data based on data mappers attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerActionRequest"
        }, {
          "type" : "object",
          "properties" : {
            "data_attribute_mappings" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DataAttributeMapping"
              }
            },
            "type" : {
              "type" : "string",
              "default" : "MAP_DATA_ATTRIBUTES",
              "enum" : [ "SET_DATA", "SET_SANDBOX", "MAP_DATA_ATTRIBUTES", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "PrehandlerActionRequest" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SET_DATA", "SET_SANDBOX", "MAP_DATA_ATTRIBUTES", "JAVASCRIPT_V1" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "SET_DATA" : "#/components/schemas/SetDataPrehandlerActionRequest",
            "SET_SANDBOX" : "#/components/schemas/SetSandboxPrehandlerActionRequest",
            "JAVASCRIPT_V1" : "#/components/schemas/JavascriptPrehandlerActionRequest",
            "MAP_DATA_ATTRIBUTES" : "#/components/schemas/MapDataAttributesPrehandlerActionRequest"
          }
        }
      },
      "PrehandlerConditionRequest" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "EVENT_NAME_MATCH", "HTTP_HEADER_MATCH", "JAVASCRIPT_V1" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "EVENT_NAME_MATCH" : "#/components/schemas/EventNameMatchPrehandlerConditionRequest",
            "HTTP_HEADER_MATCH" : "#/components/schemas/HttpHeaderMatchPrehandlerConditionRequest",
            "JAVASCRIPT_V1" : "#/components/schemas/JavascriptPrehandlerConditionRequest"
          }
        }
      },
      "PrehandlerUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Prehandler name must be unique.",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "order" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "conditions" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/EventNameMatchPrehandlerConditionRequest"
              }, {
                "$ref" : "#/components/schemas/HttpHeaderMatchPrehandlerConditionRequest"
              }, {
                "$ref" : "#/components/schemas/JavascriptPrehandlerConditionRequest"
              } ]
            }
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/SetDataPrehandlerActionRequest"
              }, {
                "$ref" : "#/components/schemas/SetSandboxPrehandlerActionRequest"
              }, {
                "$ref" : "#/components/schemas/JavascriptPrehandlerActionRequest"
              } ]
            }
          }
        }
      },
      "SetDataPrehandlerActionRequest" : {
        "required" : [ "type" ],
        "type" : "object",
        "description" : "Action that modifies the event data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerActionRequest"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "description" : "Data to be set to the event. Data names (keys) are not case sensitive.",
                "nullable" : true
              },
              "description" : "Data to be set to the event. Data names (keys) are not case sensitive.",
              "nullable" : true
            },
            "default_data" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "description" : "Default data to be set to the event. Only data (keys) that are not already present in the event will be set. Data names (keys) are not case sensitive.",
                "nullable" : true
              },
              "description" : "Default data to be set to the event. Only data (keys) that are not already present in the event will be set. Data names (keys) are not case sensitive.",
              "nullable" : true
            },
            "delete_data" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "Names (keys) of the data that should be removed from the event. Data names (keys) are not case sensitive.",
              "nullable" : true,
              "items" : {
                "type" : "string",
                "description" : "Names (keys) of the data that should be removed from the event. Data names (keys) are not case sensitive.",
                "nullable" : true
              }
            },
            "type" : {
              "type" : "string",
              "default" : "SET_DATA",
              "enum" : [ "SET_DATA", "SET_SANDBOX", "MAP_DATA_ATTRIBUTES", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "SetSandboxPrehandlerActionRequest" : {
        "required" : [ "sandbox_id", "type" ],
        "type" : "object",
        "description" : "Action that modifies the event sandbox.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PrehandlerActionRequest"
        }, {
          "type" : "object",
          "properties" : {
            "sandbox_id" : {
              "type" : "string",
              "description" : "Id of the sandbox to be set into the event."
            },
            "type" : {
              "type" : "string",
              "default" : "SET_SANDBOX",
              "enum" : [ "SET_DATA", "SET_SANDBOX", "MAP_DATA_ATTRIBUTES", "JAVASCRIPT_V1" ]
            }
          }
        } ]
      },
      "PrehandlerCreateRequest" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Prehandler name must be unique."
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true,
            "default" : false
          },
          "order" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "default" : 0
          },
          "conditions" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/EventNameMatchPrehandlerConditionRequest"
              }, {
                "$ref" : "#/components/schemas/HttpHeaderMatchPrehandlerConditionRequest"
              }, {
                "$ref" : "#/components/schemas/JavascriptPrehandlerConditionRequest"
              } ]
            }
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "anyOf" : [ {
                "$ref" : "#/components/schemas/SetDataPrehandlerActionRequest"
              }, {
                "$ref" : "#/components/schemas/SetSandboxPrehandlerActionRequest"
              }, {
                "$ref" : "#/components/schemas/JavascriptPrehandlerActionRequest"
              } ]
            }
          }
        }
      },
      "PgpExtoleClientKeyResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "algorithm" : {
            "type" : "string",
            "enum" : [ "RSA" ]
          },
          "key" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PgpExtoleClientKeyCreateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "algorithm" : {
            "type" : "string",
            "enum" : [ "RSA" ]
          },
          "key" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "EmailSubscriptionChannelResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubscriptionChannelResponse"
        } ]
      },
      "ExtoleClientSlackSubscriptionChannelResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubscriptionChannelResponse"
        } ]
      },
      "SlackSubscriptionChannelResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubscriptionChannelResponse"
        }, {
          "type" : "object",
          "properties" : {
            "webhook_url" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SubscriptionChannelResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "SLACK", "EMAIL", "EXTOLE_CLIENT_SLACK" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "SubscriptionResponse" : {
        "type" : "object",
        "properties" : {
          "subscription_id" : {
            "type" : "string"
          },
          "having_all_tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "filtering_level" : {
            "type" : "string",
            "enum" : [ "ALL", "SOME", "NOTEWORTHY", "NONE" ]
          },
          "dedupe_duration_ms" : {
            "type" : "integer",
            "format" : "int64"
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionChannelResponse"
            }
          },
          "user" : {
            "$ref" : "#/components/schemas/SubscriptionUserResponse"
          }
        }
      },
      "SubscriptionUserResponse" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          }
        }
      },
      "UserSubscriptionResponse" : {
        "type" : "object",
        "properties" : {
          "subscription_id" : {
            "type" : "string"
          },
          "having_all_tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "filtering_level" : {
            "type" : "string",
            "enum" : [ "ALL", "SOME", "NOTEWORTHY", "NONE" ]
          },
          "dedupe_duration_ms" : {
            "type" : "integer",
            "format" : "int64"
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionChannelResponse"
            }
          }
        }
      },
      "EmailSubscriptionChannelRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubscriptionChannelRequest"
        } ]
      },
      "ExtoleClientSlackSubscriptionChannelRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubscriptionChannelRequest"
        } ]
      },
      "SlackSubscriptionChannelRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubscriptionChannelRequest"
        }, {
          "type" : "object",
          "properties" : {
            "webhook_url" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SubscriptionChannelRequest" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SLACK", "EMAIL", "EXTOLE_CLIENT_SLACK" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "UserSubscriptionUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "having_all_tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "filtering_level" : {
            "type" : "string",
            "enum" : [ "ALL", "SOME", "NOTEWORTHY", "NONE" ]
          },
          "dedupe_duration_ms" : {
            "type" : "integer",
            "format" : "int64"
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionChannelRequest"
            }
          }
        }
      },
      "SuccessResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          }
        }
      },
      "UserSubscriptionRequest" : {
        "required" : [ "having_all_tags" ],
        "type" : "object",
        "properties" : {
          "having_all_tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "filtering_level" : {
            "type" : "string",
            "enum" : [ "ALL", "SOME", "NOTEWORTHY", "NONE" ]
          },
          "dedupe_duration_ms" : {
            "type" : "integer",
            "format" : "int64"
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionChannelRequest"
            }
          }
        }
      },
      "ClientVersionResponse" : {
        "type" : "object",
        "properties" : {
          "client_id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "changes_pending" : {
            "type" : "boolean"
          }
        }
      },
      "GenericWebhookResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WebhookResponse"
        } ]
      },
      "RewardWebhookFilterResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "STATE", "SUPPLIER" ]
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "RewardWebhookResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WebhookResponse"
        }, {
          "type" : "object",
          "properties" : {
            "filters" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/RewardWebhookFilterResponse"
              }
            }
          }
        } ]
      },
      "WebhookResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "REWARD", "GENERIC" ]
          },
          "url" : {
            "type" : "string"
          },
          "client_key_id" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "request" : {
            "type" : "string"
          },
          "response_handler" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "default_method" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "GENERIC" : "#/components/schemas/GenericWebhookResponse",
            "REWARD" : "#/components/schemas/RewardWebhookResponse"
          }
        }
      },
      "WebhookUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "client_key_id" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "request" : {
            "type" : "string"
          },
          "response_handler" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "default_method" : {
            "type" : "string"
          }
        }
      },
      "WebhookCreateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "REWARD", "GENERIC" ]
          },
          "url" : {
            "type" : "string"
          },
          "client_key_id" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "request" : {
            "type" : "string"
          },
          "response_handler" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "default_method" : {
            "type" : "string"
          }
        }
      },
      "AudienceListResponse" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "STATIC", "DYNAMIC", "UPLOADED" ]
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "state" : {
            "type" : "string",
            "enum" : [ "DRAFT", "BUILDING", "READY", "FAILED", "EXPIRED" ]
          },
          "description" : {
            "type" : "string"
          },
          "event_columns" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "event_data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "member_count" : {
            "type" : "integer",
            "format" : "int64"
          },
          "last_update" : {
            "type" : "string",
            "format" : "date-time"
          },
          "error_code" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "DynamicAudienceListResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AudienceListResponse"
        }, {
          "type" : "object",
          "properties" : {
            "report_runner_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "StaticAudienceListResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AudienceListResponse"
        }, {
          "type" : "object",
          "properties" : {
            "report_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "UploadedAudienceListResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AudienceListResponse"
        }, {
          "type" : "object",
          "properties" : {
            "file_asset_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AudienceListRequest" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "STATIC", "DYNAMIC", "UPLOADED" ]
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "event_columns" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "event_data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "DynamicAudienceListRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AudienceListRequest"
        }, {
          "type" : "object",
          "properties" : {
            "report_runner_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "StaticAudienceListRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AudienceListRequest"
        }, {
          "type" : "object",
          "properties" : {
            "report_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "UploadedAudienceListRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AudienceListRequest"
        }, {
          "type" : "object",
          "properties" : {
            "file_asset_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AudienceListDataSourceResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataSourceResponse"
        }, {
          "type" : "object",
          "properties" : {
            "audience_list_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BatchJobResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "event_name" : {
            "type" : "string"
          },
          "created_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "started_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completed_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "DISPATCHING", "DONE", "FAILED", "CANCELED", "EXPIRED" ]
          },
          "name" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "event_data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "event_columns" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "download_uri" : {
            "type" : "string"
          },
          "data_source" : {
            "$ref" : "#/components/schemas/DataSourceResponse"
          },
          "success_rows" : {
            "type" : "integer",
            "format" : "int64"
          },
          "failed_rows" : {
            "type" : "integer",
            "format" : "int64"
          },
          "topic_name" : {
            "type" : "string"
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN" ]
            }
          }
        }
      },
      "DataSourceResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "REPORT", "AUDIENCE_LIST", "FILE_ASSET" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "FileAssetDataSourceResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataSourceResponse"
        }, {
          "type" : "object",
          "properties" : {
            "file_asset_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ReportDataSourceResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataSourceResponse"
        }, {
          "type" : "object",
          "properties" : {
            "report_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BatchJobUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN" ]
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AudienceListDataSourceRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataSourceRequest"
        }, {
          "type" : "object",
          "properties" : {
            "audience_list_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BatchJobCreateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "event_name" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "event_data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "data_source" : {
            "$ref" : "#/components/schemas/DataSourceRequest"
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN" ]
            }
          },
          "event_columns" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DataSourceRequest" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "REPORT", "AUDIENCE_LIST", "FILE_ASSET" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "FileAssetDataSourceRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataSourceRequest"
        }, {
          "type" : "object",
          "properties" : {
            "file_asset_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ReportDataSourceRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DataSourceRequest"
        }, {
          "type" : "object",
          "properties" : {
            "report_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BatchJobFormatInfoResponse" : {
        "type" : "object",
        "properties" : {
          "content_length" : {
            "type" : "integer",
            "format" : "int64"
          },
          "total_rows" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "FileAssetResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "format" : {
            "type" : "string",
            "enum" : [ "CSV", "JSON", "PSV" ]
          },
          "created_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "user_id" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "FileAssetMetadata" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "format" : {
            "type" : "string",
            "enum" : [ "CSV", "JSON", "PSV" ]
          }
        }
      },
      "FileAssetRequest" : {
        "type" : "object",
        "properties" : {
          "fileAssetMetadata" : {
            "$ref" : "#/components/schemas/FileAssetMetadata"
          },
          "fileInputStreamRequest" : {
            "$ref" : "#/components/schemas/FileInputStreamRequest"
          }
        }
      },
      "FileAttributes" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "FileInputStreamRequest" : {
        "type" : "object",
        "properties" : {
          "inputStream" : {
            "type" : "object"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/FileAttributes"
          }
        }
      },
      "DimensionStatsResponse" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ReportParameterDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "display_name" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/ReportParameterTypeResponse"
          },
          "is_required" : {
            "type" : "boolean"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ReportParameterResponse" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "details" : {
            "$ref" : "#/components/schemas/ReportParameterDetailsResponse"
          }
        }
      },
      "ReportParameterTypeResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "enum" : [ "BOOLEAN", "STRING", "STRING_LIST", "INTEGER", "DATE", "DATE_RANGE", "TIME", "TIME_RANGE", "ENUM", "ENUM_LIST", "CAMPAIGN_ID", "PROGRAM_LABEL", "STEPS", "STEP", "REGEX", "LONG", "CLIENT_ID", "STEP_COLUMN_LIST", "NORMALIZED_EMAIL", "CHANNEL_MAPPING", "FLOWS", "TIERS", "ROW_MAPPINGS", "PERSON_MAPPINGS", "FILTER_MAPPINGS", "SORT_ORDER_MAPPINGS", "PERSON_DIMENSION_MAPPINGS", "METRIC_MAPPINGS", "EMAIL_NAMES", "GRANULAR_TIME_RANGE", "CLIENT_IDS", "EQUALITY" ]
          },
          "values" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ReportResponse" : {
        "type" : "object",
        "properties" : {
          "report_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "display_name" : {
            "type" : "string"
          },
          "executor_type" : {
            "type" : "string",
            "enum" : [ "SQL", "SPARK", "DASHBOARD" ]
          },
          "format" : {
            "type" : "string",
            "enum" : [ "JSON", "CSV", "XLSX", "PSV", "HEADLESS_CSV", "HEADLESS_PSV" ]
          },
          "formats" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "JSON", "CSV", "XLSX", "PSV", "HEADLESS_CSV", "HEADLESS_PSV" ]
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "IN_PROGRESS", "DONE", "FAILED", "CANCELED", "SFTP_DELIVERY_FAILED", "EXPIRED" ]
          },
          "user_id" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ReportParameterResponse"
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "created_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "started_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completed_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "error_code" : {
            "type" : "string"
          },
          "download_uri" : {
            "type" : "string"
          },
          "sftp_report_name" : {
            "type" : "string"
          },
          "visible" : {
            "type" : "boolean"
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
            }
          },
          "sftp_server_id" : {
            "type" : "string"
          }
        }
      },
      "RefreshingReportRunnerResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportRunnerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "expiration_ms" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "ReportRunnerResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "report_type_name" : {
            "type" : "string"
          },
          "formats" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "JSON", "CSV", "XLSX", "PSV", "HEADLESS_CSV", "HEADLESS_PSV" ]
            }
          },
          "created_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ReportParameterResponse"
            }
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "user_id" : {
            "type" : "string"
          },
          "sftp_server_id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ScheduledReportRunnerResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportRunnerResponse"
        }, {
          "type" : "object",
          "properties" : {
            "frequency" : {
              "type" : "string",
              "enum" : [ "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "LOGIN" ]
            },
            "schedule_start_date" : {
              "type" : "string",
              "format" : "date-time"
            },
            "legacy_sftp_report_name_format" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "RefreshingReportRunnerRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportRunnerRequest"
        }, {
          "type" : "object",
          "properties" : {
            "expiration_ms" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "ReportRunnerRequest" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SCHEDULED", "REFRESHING" ]
          },
          "name" : {
            "type" : "string"
          },
          "report_type" : {
            "type" : "string"
          },
          "formats" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "JSON", "CSV", "XLSX", "PSV", "HEADLESS_CSV", "HEADLESS_PSV" ]
            }
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
            }
          },
          "sftp_server_id" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ScheduledReportRunnerRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportRunnerRequest"
        }, {
          "type" : "object",
          "properties" : {
            "frequency" : {
              "type" : "string",
              "enum" : [ "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "LOGIN" ]
            },
            "schedule_start_date" : {
              "type" : "string",
              "format" : "date-time"
            },
            "legacy_sftp_report_name_format" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "ConfiguredReportTypeResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportTypeResponse"
        }, {
          "type" : "object",
          "properties" : {
            "created_date" : {
              "type" : "string",
              "format" : "date-time"
            },
            "updated_date" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        } ]
      },
      "DashboardReportTypeResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportTypeResponse"
        } ]
      },
      "ReportTypeColumnResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "sample_value" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          }
        }
      },
      "ReportTypeParameterDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "display_name" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/ReportParameterTypeResponse"
          },
          "is_required" : {
            "type" : "boolean"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          },
          "default_value" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ReportTypeResponse" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SQL", "SPARK", "DASHBOARD", "CONFIGURED" ]
          },
          "name" : {
            "type" : "string"
          },
          "display_name" : {
            "type" : "string"
          },
          "executor_type" : {
            "type" : "string",
            "enum" : [ "SQL", "SPARK", "DASHBOARD" ]
          },
          "description" : {
            "type" : "string"
          },
          "categories" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
            }
          },
          "visibility" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "EXTOLE_ONLY" ]
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReportTypeParameterDetailsResponse"
            }
          },
          "formats" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "JSON", "CSV", "XLSX", "PSV", "HEADLESS_CSV", "HEADLESS_PSV" ]
            }
          },
          "allowed_scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
            }
          },
          "preview_columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReportTypeColumnResponse"
            }
          },
          "data_start" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReportTypeTagResponse"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ReportTypeTagResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "GLOBAL", "PRIVATE" ]
          }
        }
      },
      "SparkReportTypeResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportTypeResponse"
        } ]
      },
      "SqlReportTypeResponse" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportTypeResponse"
        }, {
          "type" : "object",
          "properties" : {
            "database" : {
              "type" : "string",
              "enum" : [ "LABS", "INCENTIVES", "ANALYTICS", "CUSTOMER_PORTAL", "OPTOUT" ]
            },
            "query" : {
              "type" : "string"
            },
            "created_date" : {
              "type" : "string",
              "format" : "date-time"
            },
            "updated_date" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        } ]
      },
      "ReportTypeWithClientsResponse" : {
        "type" : "object",
        "properties" : {
          "report_type" : {
            "$ref" : "#/components/schemas/ReportTypeResponse"
          },
          "client_ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ConfiguredReportTypeCreateRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportTypeCreateRequest"
        }, {
          "type" : "object",
          "properties" : {
            "parameters" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ReportTypeParameterDetailsRequest"
              }
            },
            "parent_report_type_id" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ReportTypeCreateRequest" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SQL", "SPARK", "DASHBOARD", "CONFIGURED" ]
          },
          "display_name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "categories" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
            }
          },
          "visibility" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "EXTOLE_ONLY" ]
          },
          "formats" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "JSON", "CSV", "XLSX", "PSV", "HEADLESS_CSV", "HEADLESS_PSV" ]
            }
          },
          "allowed_scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
            }
          },
          "data_start" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReportTypeTagRequest"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ReportTypeParameterDetailsRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "display_name" : {
            "type" : "string"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          },
          "category" : {
            "type" : "string"
          },
          "default_value" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ReportTypeTagRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "GLOBAL", "PRIVATE" ]
          }
        }
      },
      "SqlReportTypeCreateRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportTypeCreateRequest"
        }, {
          "type" : "object",
          "properties" : {
            "database" : {
              "type" : "string",
              "enum" : [ "LABS", "INCENTIVES", "ANALYTICS", "CUSTOMER_PORTAL", "OPTOUT" ]
            },
            "query" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ConfiguredReportTypeUpdateRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportTypeUpdateRequest"
        }, {
          "type" : "object",
          "properties" : {
            "display_name" : {
              "type" : "string"
            },
            "description" : {
              "type" : "string"
            },
            "categories" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "scopes" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
              }
            },
            "visibility" : {
              "type" : "string",
              "enum" : [ "PUBLIC", "PRIVATE", "EXTOLE_ONLY" ]
            },
            "parameters" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ReportTypeParameterDetailsRequest"
              }
            },
            "formats" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "JSON", "CSV", "XLSX", "PSV", "HEADLESS_CSV", "HEADLESS_PSV" ]
              }
            },
            "allowed_scopes" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
              }
            },
            "data_start" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        } ]
      },
      "DashboardReportTypeUpdateRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportTypeUpdateRequest"
        } ]
      },
      "ReportTypeUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SQL", "SPARK", "DASHBOARD", "CONFIGURED" ]
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReportTypeTagRequest"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "SparkReportTypeUpdateRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportTypeUpdateRequest"
        } ]
      },
      "SqlReportTypeUpdateRequest" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReportTypeUpdateRequest"
        }, {
          "type" : "object",
          "properties" : {
            "display_name" : {
              "type" : "string"
            },
            "description" : {
              "type" : "string"
            },
            "categories" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "scopes" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
              }
            },
            "visibility" : {
              "type" : "string",
              "enum" : [ "PUBLIC", "PRIVATE", "EXTOLE_ONLY" ]
            },
            "formats" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "JSON", "CSV", "XLSX", "PSV", "HEADLESS_CSV", "HEADLESS_PSV" ]
              }
            },
            "allowed_scopes" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "CLIENT_SUPERUSER", "CLIENT_ADMIN", "CONSUMER_PUBLIC" ]
              }
            },
            "data_start" : {
              "type" : "string",
              "format" : "date-time"
            },
            "database" : {
              "type" : "string",
              "enum" : [ "LABS", "INCENTIVES", "ANALYTICS", "CUSTOMER_PORTAL", "OPTOUT" ]
            },
            "query" : {
              "type" : "string"
            }
          }
        } ]
      },
      "RestExceptionResponse" : {
        "type" : "object",
        "properties" : {
          "unique_id" : {
            "type" : "string",
            "description" : "Unique id associated with this error, useful for discussions with Extole"
          },
          "http_status_code" : {
            "type" : "integer",
            "description" : "HTTP status code that was returned with this error, useful if client get response code",
            "format" : "int32"
          },
          "code" : {
            "type" : "string",
            "description" : "Specific error code for this error type, documented per endpoint"
          },
          "message" : {
            "type" : "string",
            "description" : "User readable English description of the error"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "Attributes related to the error, varies be error code, documented per endpoint"
            },
            "description" : "Attributes related to the error, varies be error code, documented per endpoint"
          }
        },
        "description" : "Represents the API error response"
      },
      "FaceValueType" : {
        "type" : "string",
        "enum" : [ "PERCENT_OFF", "POINTS", "USD", "GBP", "EUR", "JPY", "CNY", "CAD", "AUD", "BRL", "INR", "NZD" ]
      },
      "HasPriorStepTriggerContext" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "targetingContext" : {
            "$ref" : "#/components/schemas/TargetingContext"
          },
          "causeEvent" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "RequestContext" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string"
          },
          "ip" : {
            "type" : "string"
          },
          "geoIp" : {
            "$ref" : "#/components/schemas/GeoIp"
          },
          "deviceId" : {
            "type" : "string"
          }
        }
      },
      "SelectedCampaignContext" : {
        "type" : "object",
        "properties" : {
          "quality" : {
            "type" : "string"
          },
          "campaignId" : {
            "type" : "string"
          },
          "programLabel" : {
            "type" : "string"
          },
          "campaignVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "campaignState" : {
            "type" : "string"
          },
          "triggerResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StepConsumerEventTriggerResult"
            }
          }
        }
      },
      "EvaluationResult" : {
        "type" : "object",
        "properties" : {
          "resultCode" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "passed" : {
            "type" : "boolean"
          }
        }
      },
      "ConsumerEvent" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "eventTime" : {
            "type" : "string"
          },
          "sandbox" : {
            "$ref" : "#/components/schemas/Sandbox"
          },
          "causeEventId" : {
            "type" : "string"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          },
          "requestTime" : {
            "type" : "string"
          },
          "rootEventId" : {
            "type" : "string"
          },
          "eventContext" : {
            "$ref" : "#/components/schemas/EventContext"
          },
          "clientDomainContext" : {
            "$ref" : "#/components/schemas/ClientDomainContext"
          }
        }
      },
      "RewardRuleContext" : {
        "type" : "object",
        "properties" : {
          "resultBuilder" : {
            "$ref" : "#/components/schemas/EvaluationResultBuilder"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "event" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "RewardState" : {
        "type" : "string",
        "enum" : [ "EARNED", "FULFILLED", "SENT", "REDEEMED", "FAILED", "CANCELED", "REVOKED" ]
      },
      "CampaignBuildtimeContext" : {
        "type" : "object",
        "properties" : {
          "variableContext" : {
            "$ref" : "#/components/schemas/VariableContext"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "NotificationBuilder" : {
        "type" : "object"
      },
      "HasPriorRewardTriggerContext" : {
        "type" : "object",
        "properties" : {
          "reward" : {
            "$ref" : "#/components/schemas/PersonReward"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "targetingContext" : {
            "$ref" : "#/components/schemas/TargetingContext"
          },
          "causeEvent" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "StepScope" : {
        "type" : "string",
        "enum" : [ "PUBLIC", "PRIVATE", "CLIENT" ]
      },
      "PersonReward" : {
        "type" : "object",
        "properties" : {
          "dateEarned" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "campaignId" : {
            "type" : "string"
          },
          "programLabel" : {
            "type" : "string"
          },
          "rewardSupplierId" : {
            "type" : "string"
          },
          "sandbox" : {
            "type" : "string"
          },
          "rewardId" : {
            "type" : "string"
          },
          "partnerRewardId" : {
            "type" : "string"
          },
          "rewardSlots" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "faceValue" : {
            "type" : "string"
          },
          "faceValueType" : {
            "type" : "string"
          },
          "rewardedDate" : {
            "type" : "string"
          },
          "personRole" : {
            "type" : "string"
          }
        }
      },
      "VariableContext" : {
        "type" : "object"
      },
      "InternalConsumerEvent" : {
        "type" : "object",
        "properties" : {
          "labels" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "campaignId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "eventTime" : {
            "type" : "string"
          },
          "sandbox" : {
            "$ref" : "#/components/schemas/Sandbox"
          },
          "causeEventId" : {
            "type" : "string"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          },
          "requestTime" : {
            "type" : "string"
          },
          "rootEventId" : {
            "type" : "string"
          },
          "eventContext" : {
            "$ref" : "#/components/schemas/EventContext"
          },
          "clientDomainContext" : {
            "$ref" : "#/components/schemas/ClientDomainContext"
          }
        }
      },
      "StepConsumerEventTriggerPhase" : {
        "type" : "string",
        "enum" : [ "MATCHING", "QUALIFYING", "QUALITY" ]
      },
      "IncentivizeActionType" : {
        "type" : "string",
        "enum" : [ "SHARE", "IMPRESSION", "CLICK", "PURCHASE", "REGISTER", "PROMOTION", "SHARE_REWARD", "GENERIC_ACTION_1", "GENERIC_ACTION_2", "GENERIC_ACTION_3", "GENERIC_ACTION_4", "GENERIC_ACTION_5", "GENERIC_ACTION_6", "GENERIC_ACTION_7", "GENERIC_ACTION_8", "GENERIC_ACTION_9", "GENERIC_ACTION_10", "GENERIC_ACTION_11", "GENERIC_ACTION_12", "GENERIC_ACTION_13", "GENERIC_ACTION_14", "GENERIC_ACTION_15", "GENERIC_ACTION_16", "GENERIC_ACTION_17", "GENERIC_ACTION_18", "GENERIC_ACTION_19", "GENERIC_ACTION_20", "GENERIC_ACTION_21", "GENERIC_ACTION_22", "GENERIC_ACTION_23", "GENERIC_ACTION_24", "GENERIC_ACTION_25", "GENERIC_ACTION_26", "GENERIC_ACTION_27", "GENERIC_ACTION_28", "GENERIC_ACTION_29", "GENERIC_ACTION_30", "GENERIC_ACTION_31", "GENERIC_ACTION_32", "GENERIC_ACTION_33", "GENERIC_ACTION_34", "GENERIC_ACTION_35", "GENERIC_ACTION_36", "GENERIC_ACTION_37", "GENERIC_ACTION_38", "GENERIC_ACTION_39", "GENERIC_ACTION_40", "GENERIC_ACTION_41", "GENERIC_ACTION_42", "GENERIC_ACTION_43", "GENERIC_ACTION_44", "GENERIC_ACTION_45", "GENERIC_ACTION_46", "GENERIC_ACTION_47", "GENERIC_ACTION_48", "GENERIC_ACTION_49", "GENERIC_ACTION_50", "GENERIC_ACTION_51", "GENERIC_ACTION_52", "GENERIC_ACTION_53", "GENERIC_ACTION_54", "GENERIC_ACTION_55", "GENERIC_ACTION_56", "GENERIC_ACTION_57", "GENERIC_ACTION_58", "GENERIC_ACTION_59", "GENERIC_ACTION_60", "GENERIC_ACTION_61", "GENERIC_ACTION_62", "GENERIC_ACTION_63", "GENERIC_ACTION_64", "GENERIC_ACTION_65", "GENERIC_ACTION_66", "GENERIC_ACTION_67", "GENERIC_ACTION_68", "GENERIC_ACTION_69", "GENERIC_ACTION_70", "GENERIC_ACTION_71", "GENERIC_ACTION_72", "GENERIC_ACTION_73", "GENERIC_ACTION_74", "GENERIC_ACTION_75", "GENERIC_ACTION_76", "GENERIC_ACTION_77", "GENERIC_ACTION_78", "GENERIC_ACTION_79", "GENERIC_ACTION_80", "GENERIC_ACTION_81", "GENERIC_ACTION_82", "GENERIC_ACTION_83", "GENERIC_ACTION_84", "GENERIC_ACTION_85", "GENERIC_ACTION_86", "GENERIC_ACTION_87", "GENERIC_ACTION_88", "GENERIC_ACTION_89", "GENERIC_ACTION_90", "GENERIC_ACTION_91", "GENERIC_ACTION_92", "GENERIC_ACTION_93", "GENERIC_ACTION_94", "GENERIC_ACTION_95", "GENERIC_ACTION_96", "GENERIC_ACTION_97", "GENERIC_ACTION_98", "GENERIC_ACTION_99", "GENERIC_ACTION_100", "GENERIC_ACTION_101", "GENERIC_ACTION_102", "GENERIC_ACTION_103", "GENERIC_ACTION_104", "GENERIC_ACTION_105", "GENERIC_ACTION_106", "GENERIC_ACTION_107", "GENERIC_ACTION_108", "GENERIC_ACTION_109", "GENERIC_ACTION_110", "GENERIC_ACTION_111", "GENERIC_ACTION_112", "GENERIC_ACTION_113", "GENERIC_ACTION_114", "GENERIC_ACTION_115", "GENERIC_ACTION_116", "GENERIC_ACTION_117", "GENERIC_ACTION_118", "GENERIC_ACTION_119", "GENERIC_ACTION_120", "GENERIC_ACTION_121", "GENERIC_ACTION_122", "GENERIC_ACTION_123", "GENERIC_ACTION_124", "GENERIC_ACTION_125", "GENERIC_ACTION_126", "GENERIC_ACTION_127", "GENERIC_ACTION_128", "GENERIC_ACTION_129", "GENERIC_ACTION_130", "THEME_GENERIC_ACTION_1", "THEME_GENERIC_ACTION_2", "THEME_GENERIC_ACTION_3", "THEME_GENERIC_ACTION_4", "THEME_GENERIC_ACTION_5", "THEME_GENERIC_ACTION_6", "THEME_GENERIC_ACTION_7", "THEME_GENERIC_ACTION_8", "THEME_GENERIC_ACTION_9", "THEME_GENERIC_ACTION_10", "THEME_GENERIC_ACTION_11", "THEME_GENERIC_ACTION_12", "THEME_GENERIC_ACTION_13", "THEME_GENERIC_ACTION_14", "THEME_GENERIC_ACTION_15", "THEME_GENERIC_ACTION_16", "THEME_GENERIC_ACTION_17", "THEME_GENERIC_ACTION_18", "THEME_GENERIC_ACTION_19", "THEME_GENERIC_ACTION_20", "THEME_GENERIC_ACTION_21", "THEME_GENERIC_ACTION_22", "THEME_GENERIC_ACTION_23", "THEME_GENERIC_ACTION_24", "THEME_GENERIC_ACTION_25", "THEME_GENERIC_ACTION_26", "THEME_GENERIC_ACTION_27", "THEME_GENERIC_ACTION_28", "THEME_GENERIC_ACTION_29", "THEME_GENERIC_ACTION_30" ]
      },
      "StepDataContext" : {
        "type" : "object",
        "properties" : {
          "channel" : {
            "type" : "string"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "journey" : {
            "$ref" : "#/components/schemas/PersonJourney"
          },
          "referralSource" : {
            "type" : "string"
          },
          "event" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "otherPerson" : {
            "$ref" : "#/components/schemas/Person"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "GlobalServices" : {
        "type" : "object",
        "properties" : {
          "publicClientDomainService" : {
            "$ref" : "#/components/schemas/PublicClientDomainService"
          },
          "encoderService" : {
            "$ref" : "#/components/schemas/EncoderService"
          },
          "emailVerificationService" : {
            "$ref" : "#/components/schemas/EmailVerificationService"
          },
          "personService" : {
            "$ref" : "#/components/schemas/PersonService"
          },
          "jsonService" : {
            "$ref" : "#/components/schemas/JsonService"
          },
          "notificationService" : {
            "$ref" : "#/components/schemas/NotificationService"
          },
          "stringService" : {
            "$ref" : "#/components/schemas/StringService"
          },
          "couponService" : {
            "$ref" : "#/components/schemas/CouponService"
          },
          "jwtService" : {
            "$ref" : "#/components/schemas/JwtService"
          },
          "dateService" : {
            "$ref" : "#/components/schemas/DateService"
          },
          "shareableService" : {
            "$ref" : "#/components/schemas/ShareableService"
          }
        }
      },
      "EncoderService" : {
        "type" : "object"
      },
      "EmailVerificationService" : {
        "type" : "object"
      },
      "FlowStepBuildtimeContext" : {
        "type" : "object",
        "properties" : {
          "stepName" : {
            "type" : "string"
          },
          "variableContext" : {
            "$ref" : "#/components/schemas/VariableContext"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "CampaignControllerSelectorType" : {
        "type" : "string",
        "enum" : [ "BEST_REFERRAL", "BEST_REFERRAL_SAME_PROGRAM", "TARGET", "MATCHING_CAMPAIGN", "RANDOM", "MATCHING_REFERRAL_CAMPAIGN" ]
      },
      "PrehandlerContext" : {
        "type" : "object",
        "properties" : {
          "processedRawEvent" : {
            "$ref" : "#/components/schemas/ProcessedRawEvent"
          },
          "rawEvent" : {
            "$ref" : "#/components/schemas/RawEvent"
          },
          "candidatePerson" : {
            "$ref" : "#/components/schemas/Person"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "PublicClientDomainService" : {
        "type" : "object",
        "properties" : {
          "publicClientDomains" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicClientDomain"
            }
          }
        }
      },
      "CampaignState" : {
        "type" : "string",
        "enum" : [ "NOT_LAUNCHED", "LIVE", "PAUSED", "ENDED", "STOPPED" ]
      },
      "ExpressionActionContext" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "causeEvent" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "stepEvent" : {
            "$ref" : "#/components/schemas/StepConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "PrehandlerActionContext" : {
        "type" : "object",
        "properties" : {
          "eventBuilder" : {
            "$ref" : "#/components/schemas/ProcessedRawEventBuilder"
          },
          "processedRawEvent" : {
            "$ref" : "#/components/schemas/ProcessedRawEvent"
          },
          "rawEvent" : {
            "$ref" : "#/components/schemas/RawEvent"
          },
          "candidatePerson" : {
            "$ref" : "#/components/schemas/Person"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "NotificationService" : {
        "type" : "object"
      },
      "Shareable" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "label" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "content" : {
            "$ref" : "#/components/schemas/ShareableContent"
          },
          "personId" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "clientDomainId" : {
            "type" : "string"
          }
        }
      },
      "GlobalContext" : {
        "type" : "object",
        "properties" : {
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "PersonJourney" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "container" : {
            "type" : "string"
          },
          "campaignId" : {
            "type" : "string"
          },
          "journeyType" : {
            "type" : "string"
          },
          "privateData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "publicData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "PublicClientDomain" : {
        "type" : "object",
        "properties" : {
          "clientDomain" : {
            "type" : "string"
          },
          "clientDomainId" : {
            "type" : "string"
          }
        }
      },
      "PersonStep" : {
        "type" : "object",
        "properties" : {
          "aliasName" : {
            "type" : "boolean"
          },
          "scope" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "value" : {
            "type" : "string"
          },
          "quality" : {
            "type" : "string"
          },
          "campaignId" : {
            "type" : "string"
          },
          "programLabel" : {
            "type" : "string"
          },
          "stepName" : {
            "type" : "string"
          },
          "partnerEventId" : {
            "$ref" : "#/components/schemas/PartnerEventId"
          },
          "personId" : {
            "type" : "string"
          },
          "eventId" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string"
          },
          "privateData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "publicData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "eventDate" : {
            "type" : "string"
          },
          "rootEventId" : {
            "type" : "string"
          }
        }
      },
      "StepTriggerContext" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "targetingContext" : {
            "$ref" : "#/components/schemas/TargetingContext"
          },
          "causeEvent" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "RewardConsumerEvent" : {
        "type" : "object",
        "properties" : {
          "rewardState" : {
            "type" : "string"
          },
          "reward" : {
            "$ref" : "#/components/schemas/RewardContext"
          },
          "labels" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "campaignId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "eventTime" : {
            "type" : "string"
          },
          "sandbox" : {
            "$ref" : "#/components/schemas/Sandbox"
          },
          "causeEventId" : {
            "type" : "string"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          },
          "requestTime" : {
            "type" : "string"
          },
          "rootEventId" : {
            "type" : "string"
          },
          "eventContext" : {
            "$ref" : "#/components/schemas/EventContext"
          },
          "clientDomainContext" : {
            "$ref" : "#/components/schemas/ClientDomainContext"
          }
        }
      },
      "ClientKey" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "algorithm" : {
            "type" : "string"
          }
        }
      },
      "Authorization" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string"
          },
          "scopes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "personId" : {
            "type" : "string"
          },
          "accessToken" : {
            "type" : "string"
          }
        }
      },
      "Sandbox" : {
        "type" : "object",
        "properties" : {
          "container" : {
            "type" : "string"
          },
          "sandbox" : {
            "type" : "string"
          },
          "sandboxId" : {
            "type" : "string"
          }
        }
      },
      "ShareableService" : {
        "type" : "object"
      },
      "EventData" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string",
            "enum" : [ "JWT", "PREHANDLER", "REQUEST_BODY", "REQUEST_QUERY_PARAMETER", "BACKEND", "EXPIRED_JWT" ]
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "verified" : {
            "type" : "boolean"
          }
        }
      },
      "StepHasPriorStepTriggerContext" : {
        "type" : "object",
        "properties" : {
          "step" : {
            "$ref" : "#/components/schemas/PersonStep"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "targetingContext" : {
            "$ref" : "#/components/schemas/TargetingContext"
          },
          "causeEvent" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "ExpressionActionCommandContext" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          }
        }
      },
      "RawEvent" : {
        "type" : "object",
        "properties" : {
          "eventName" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "httpHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "httpRequestBody" : {
            "type" : "string"
          },
          "httpCookies" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "requestTime" : {
            "type" : "string"
          },
          "clientDomainContext" : {
            "$ref" : "#/components/schemas/ClientDomainContext"
          },
          "referrer" : {
            "type" : "string"
          },
          "sourceIps" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "apiType" : {
            "type" : "string"
          },
          "httpParameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "rawEventId" : {
            "type" : "string"
          },
          "httpRequestMethod" : {
            "type" : "string"
          }
        }
      },
      "RewardActionContext" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "causeEvent" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "stepEvent" : {
            "$ref" : "#/components/schemas/StepConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "GeoIp" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "state" : {
            "$ref" : "#/components/schemas/State"
          },
          "country" : {
            "$ref" : "#/components/schemas/Country"
          },
          "city" : {
            "$ref" : "#/components/schemas/City"
          },
          "ipAddress" : {
            "type" : "string"
          }
        }
      },
      "StepRecord" : {
        "type" : "object",
        "properties" : {
          "deviceProfileId" : {
            "type" : "string"
          },
          "identityProfileId" : {
            "type" : "string"
          },
          "journeyName" : {
            "type" : "string"
          },
          "attribution" : {
            "type" : "string"
          },
          "firstProgramVisit" : {
            "type" : "boolean"
          },
          "firstCampaignVisit" : {
            "type" : "boolean"
          },
          "relatedPersonId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "quality" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "string"
          },
          "campaignId" : {
            "type" : "string"
          },
          "programLabel" : {
            "type" : "string"
          },
          "eventTime" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "visitType" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string"
          },
          "rootEventId" : {
            "type" : "string"
          },
          "firstSiteVisit" : {
            "type" : "boolean"
          },
          "primaryStepName" : {
            "type" : "string"
          }
        }
      },
      "StringService" : {
        "type" : "object"
      },
      "Person" : {
        "type" : "object",
        "properties" : {
          "recentAssociatedFriends" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonReferral"
            }
          },
          "recentAssociatedAdvocates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonReferral"
            }
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "id" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "normalizedEmail" : {
            "type" : "string"
          },
          "steps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonStep"
            }
          },
          "shareables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Shareable"
            }
          },
          "rewards" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonReward"
            }
          },
          "recentRequestContexts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RequestContext"
            }
          },
          "privateData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "publicData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "partnerUserId" : {
            "type" : "string"
          },
          "blocked" : {
            "type" : "boolean"
          },
          "preferredLocale" : {
            "type" : "string"
          },
          "displacedPersonId" : {
            "type" : "string"
          }
        }
      },
      "EvaluationResultBuilder" : {
        "type" : "object",
        "properties" : {
          "evaluationResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EvaluationResult"
            }
          }
        }
      },
      "CampaignControllerTriggerPhase" : {
        "type" : "string",
        "enum" : [ "MATCHING", "QUALIFYING", "QUALITY" ]
      },
      "PersonContext" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          }
        }
      },
      "PersonReferral" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "string"
          },
          "updatedDate" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string"
          },
          "mySide" : {
            "type" : "string"
          },
          "otherPersonId" : {
            "type" : "string"
          },
          "displaced" : {
            "type" : "boolean"
          }
        }
      },
      "JsonService" : {
        "type" : "object"
      },
      "ShareableWithLink" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "label" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "content" : {
            "$ref" : "#/components/schemas/ShareableContent"
          },
          "personId" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "clientDomainId" : {
            "type" : "string"
          }
        }
      },
      "ClientDomainContext" : {
        "type" : "object",
        "properties" : {
          "clientDomain" : {
            "type" : "string"
          },
          "clientDomainId" : {
            "type" : "string"
          }
        }
      },
      "RewardFilterScope" : {
        "type" : "string",
        "enum" : [ "CLIENT", "PROGRAM", "CAMPAIGN" ]
      },
      "Webhook" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "defaultMethod" : {
            "type" : "string"
          },
          "clientKey" : {
            "$ref" : "#/components/schemas/ClientKey"
          }
        }
      },
      "StepFilterScope" : {
        "type" : "string",
        "enum" : [ "CLIENT", "PROGRAM", "CAMPAIGN", "ATTRIBUTED" ]
      },
      "CampaignExperienceType" : {
        "type" : "string",
        "enum" : [ "ADVOCATE", "FRIEND" ]
      },
      "RewardContext" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "rewardId" : {
            "type" : "string"
          },
          "partnerRewardId" : {
            "type" : "string"
          },
          "faceValue" : {
            "type" : "number"
          },
          "faceValueType" : {
            "type" : "string"
          },
          "valueOfRewardedEvent" : {
            "type" : "number"
          },
          "slots" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PersonService" : {
        "type" : "object"
      },
      "DateService" : {
        "type" : "object"
      },
      "InputEventLocale" : {
        "type" : "object",
        "properties" : {
          "lastBrowser" : {
            "type" : "string"
          },
          "userSpecified" : {
            "type" : "string"
          }
        }
      },
      "ProcessedRawEvent" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "eventName" : {
            "type" : "string"
          },
          "eventTime" : {
            "type" : "string"
          },
          "sandbox" : {
            "$ref" : "#/components/schemas/Sandbox"
          },
          "clientDomain" : {
            "$ref" : "#/components/schemas/PublicClientDomain"
          },
          "deviceId" : {
            "type" : "string"
          },
          "sourceGeoIps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GeoIp"
            }
          },
          "pageId" : {
            "type" : "string"
          },
          "appType" : {
            "type" : "string"
          },
          "appData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "verifiedData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "allData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventData"
            }
          }
        }
      },
      "WebhookEvent" : {
        "type" : "object",
        "properties" : {
          "deviceProfileId" : {
            "type" : "string"
          },
          "identityProfileId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "campaignId" : {
            "type" : "string"
          },
          "programLabel" : {
            "type" : "string"
          },
          "eventTime" : {
            "type" : "string"
          },
          "webhookId" : {
            "type" : "string"
          },
          "eventId" : {
            "type" : "string"
          },
          "clientDomain" : {
            "type" : "string"
          },
          "causeEventId" : {
            "type" : "string"
          },
          "rootEventId" : {
            "type" : "string"
          },
          "clientDomainId" : {
            "type" : "string"
          },
          "causeEventSequence" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TargetingContext" : {
        "type" : "object",
        "properties" : {
          "referral" : {
            "$ref" : "#/components/schemas/PersonReferral"
          }
        }
      },
      "WebhookDispatchResultEvent" : {
        "type" : "object",
        "properties" : {
          "responseBody" : {
            "type" : "string"
          },
          "responseStatusCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "responseHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "requestBody" : {
            "type" : "string"
          }
        }
      },
      "InputEventLabel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          }
        }
      },
      "ClientDomain" : {
        "type" : "object",
        "properties" : {
          "domain" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "scheme" : {
            "type" : "string"
          },
          "shareUri" : {
            "type" : "string"
          }
        }
      },
      "ClientContext" : {
        "type" : "object",
        "properties" : {
          "timezone" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "string"
          },
          "clientShortName" : {
            "type" : "string"
          }
        }
      },
      "JwtService" : {
        "type" : "object"
      },
      "StepConsumerEventTriggerResult" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "triggerPhase" : {
            "type" : "string",
            "enum" : [ "MATCHING", "QUALIFYING", "QUALITY" ]
          },
          "logMessages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "triggerType" : {
            "type" : "string"
          },
          "passed" : {
            "type" : "boolean"
          },
          "triggerId" : {
            "type" : "string"
          }
        }
      },
      "ExpressionTriggerContext" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "targetingContext" : {
            "$ref" : "#/components/schemas/TargetingContext"
          },
          "causeEvent" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "CampaignControllerTriggerEventType" : {
        "type" : "string",
        "enum" : [ "LEGACY_CONSUMER_EVENT", "SCHEDULED", "REFERRED_BY", "INPUT", "SHARE", "STEP", "IDENTIFIED", "REFERRED", "DISPLACED", "DISPLACED_BY", "INTERNAL", "MESSAGE", "DATA_INTELLIGENCE", "SHAREABLE", "ASSET" ]
      },
      "InputConsumerEvent" : {
        "type" : "object",
        "properties" : {
          "handlerMessages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "labels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InputEventLabel"
            }
          },
          "locale" : {
            "$ref" : "#/components/schemas/InputEventLocale"
          },
          "eventName" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "httpHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "httpCookies" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "referrer" : {
            "type" : "string"
          },
          "sourceIps" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "eventTime" : {
            "type" : "string"
          },
          "sandbox" : {
            "$ref" : "#/components/schemas/Sandbox"
          },
          "causeEventId" : {
            "type" : "string"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          },
          "requestTime" : {
            "type" : "string"
          },
          "rootEventId" : {
            "type" : "string"
          },
          "eventContext" : {
            "$ref" : "#/components/schemas/EventContext"
          },
          "clientDomainContext" : {
            "$ref" : "#/components/schemas/ClientDomainContext"
          }
        }
      },
      "InputRecord" : {
        "type" : "object",
        "properties" : {
          "deviceProfileId" : {
            "type" : "string"
          },
          "identityProfileId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string"
          },
          "eventTime" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "userAgent" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string"
          },
          "apiType" : {
            "type" : "string"
          }
        }
      },
      "ReferralContext" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "PrehandlerConditionContext" : {
        "type" : "object",
        "properties" : {
          "processedRawEvent" : {
            "$ref" : "#/components/schemas/ProcessedRawEvent"
          },
          "rawEvent" : {
            "$ref" : "#/components/schemas/RawEvent"
          },
          "candidatePerson" : {
            "$ref" : "#/components/schemas/Person"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "LegacyQualityRuleTriggerContext" : {
        "type" : "object",
        "properties" : {
          "resultBuilder" : {
            "$ref" : "#/components/schemas/EvaluationResultBuilder"
          },
          "bestReferral" : {
            "$ref" : "#/components/schemas/PersonReferral"
          },
          "friendController" : {
            "type" : "boolean"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "targetingContext" : {
            "$ref" : "#/components/schemas/TargetingContext"
          },
          "causeEvent" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "CampaignControllerTriggerActionType" : {
        "type" : "string",
        "enum" : [ "ANY_CLICK", "ANY_SHARE", "ANY_REGISTER", "ANY_PURCHASE", "ANY_PROMOTION", "ANY_SHARE_REWARD", "GENERIC_ACTION_1", "GENERIC_ACTION_2", "GENERIC_ACTION_3", "GENERIC_ACTION_4", "GENERIC_ACTION_5", "GENERIC_ACTION_6", "GENERIC_ACTION_7", "GENERIC_ACTION_8", "GENERIC_ACTION_9", "GENERIC_ACTION_10", "GENERIC_ACTION_11", "GENERIC_ACTION_12", "GENERIC_ACTION_13", "GENERIC_ACTION_14", "GENERIC_ACTION_15", "GENERIC_ACTION_16", "GENERIC_ACTION_17", "GENERIC_ACTION_18", "GENERIC_ACTION_19", "GENERIC_ACTION_20", "GENERIC_ACTION_21", "GENERIC_ACTION_22", "GENERIC_ACTION_23", "GENERIC_ACTION_24", "GENERIC_ACTION_25", "GENERIC_ACTION_26", "GENERIC_ACTION_27", "GENERIC_ACTION_28", "GENERIC_ACTION_29", "GENERIC_ACTION_30", "GENERIC_ACTION_31", "GENERIC_ACTION_32", "GENERIC_ACTION_33", "GENERIC_ACTION_34", "GENERIC_ACTION_35", "GENERIC_ACTION_36", "GENERIC_ACTION_37", "GENERIC_ACTION_38", "GENERIC_ACTION_39", "GENERIC_ACTION_40", "GENERIC_ACTION_41", "GENERIC_ACTION_42", "GENERIC_ACTION_43", "GENERIC_ACTION_44", "GENERIC_ACTION_45", "GENERIC_ACTION_46", "GENERIC_ACTION_47", "GENERIC_ACTION_48", "GENERIC_ACTION_49", "GENERIC_ACTION_50", "GENERIC_ACTION_51", "GENERIC_ACTION_52", "GENERIC_ACTION_53", "GENERIC_ACTION_54", "GENERIC_ACTION_55", "GENERIC_ACTION_56", "GENERIC_ACTION_57", "GENERIC_ACTION_58", "GENERIC_ACTION_59", "GENERIC_ACTION_60", "GENERIC_ACTION_61", "GENERIC_ACTION_62", "GENERIC_ACTION_63", "GENERIC_ACTION_64", "GENERIC_ACTION_65", "GENERIC_ACTION_66", "GENERIC_ACTION_67", "GENERIC_ACTION_68", "GENERIC_ACTION_69", "GENERIC_ACTION_70", "GENERIC_ACTION_71", "GENERIC_ACTION_72", "GENERIC_ACTION_73", "GENERIC_ACTION_74", "GENERIC_ACTION_75", "GENERIC_ACTION_76", "GENERIC_ACTION_77", "GENERIC_ACTION_78", "GENERIC_ACTION_79", "GENERIC_ACTION_80", "GENERIC_ACTION_81", "GENERIC_ACTION_82", "GENERIC_ACTION_83", "GENERIC_ACTION_84", "GENERIC_ACTION_85", "GENERIC_ACTION_86", "GENERIC_ACTION_87", "GENERIC_ACTION_88", "GENERIC_ACTION_89", "GENERIC_ACTION_90", "GENERIC_ACTION_91", "GENERIC_ACTION_92", "GENERIC_ACTION_93", "GENERIC_ACTION_94", "GENERIC_ACTION_95", "GENERIC_ACTION_96", "GENERIC_ACTION_97", "GENERIC_ACTION_98", "GENERIC_ACTION_99", "GENERIC_ACTION_100", "GENERIC_ACTION_101", "GENERIC_ACTION_102", "GENERIC_ACTION_103", "GENERIC_ACTION_104", "GENERIC_ACTION_105", "GENERIC_ACTION_106", "GENERIC_ACTION_107", "GENERIC_ACTION_108", "GENERIC_ACTION_109", "GENERIC_ACTION_110", "GENERIC_ACTION_111", "GENERIC_ACTION_112", "GENERIC_ACTION_113", "GENERIC_ACTION_114", "GENERIC_ACTION_115", "GENERIC_ACTION_116", "GENERIC_ACTION_117", "GENERIC_ACTION_118", "GENERIC_ACTION_119", "GENERIC_ACTION_120", "GENERIC_ACTION_121", "GENERIC_ACTION_122", "GENERIC_ACTION_123", "GENERIC_ACTION_124", "GENERIC_ACTION_125", "GENERIC_ACTION_126", "GENERIC_ACTION_127", "GENERIC_ACTION_128", "GENERIC_ACTION_129", "GENERIC_ACTION_130", "THEME_GENERIC_ACTION_1", "THEME_GENERIC_ACTION_2", "THEME_GENERIC_ACTION_3", "THEME_GENERIC_ACTION_4", "THEME_GENERIC_ACTION_5", "THEME_GENERIC_ACTION_6", "THEME_GENERIC_ACTION_7", "THEME_GENERIC_ACTION_8", "THEME_GENERIC_ACTION_9", "THEME_GENERIC_ACTION_10", "THEME_GENERIC_ACTION_11", "THEME_GENERIC_ACTION_12", "THEME_GENERIC_ACTION_13", "THEME_GENERIC_ACTION_14", "THEME_GENERIC_ACTION_15", "THEME_GENERIC_ACTION_16", "THEME_GENERIC_ACTION_17", "THEME_GENERIC_ACTION_18", "THEME_GENERIC_ACTION_19", "THEME_GENERIC_ACTION_20", "THEME_GENERIC_ACTION_21", "THEME_GENERIC_ACTION_22", "THEME_GENERIC_ACTION_23", "THEME_GENERIC_ACTION_24", "THEME_GENERIC_ACTION_25", "THEME_GENERIC_ACTION_26", "THEME_GENERIC_ACTION_27", "THEME_GENERIC_ACTION_28", "THEME_GENERIC_ACTION_29", "THEME_GENERIC_ACTION_30" ]
      },
      "StepActionContext" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "causeEvent" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "stepEvent" : {
            "$ref" : "#/components/schemas/StepConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "ProcessedRawEventBuilder" : {
        "type" : "object"
      },
      "WebhookResponseContext" : {
        "type" : "object",
        "properties" : {
          "webhookEvent" : {
            "$ref" : "#/components/schemas/WebhookEvent"
          },
          "webhookDispatchResultEvent" : {
            "$ref" : "#/components/schemas/WebhookDispatchResultEvent"
          },
          "webhook" : {
            "$ref" : "#/components/schemas/Webhook"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          }
        }
      },
      "EventContext" : {
        "type" : "object",
        "properties" : {
          "sourceGeoIps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GeoIp"
            }
          }
        }
      },
      "StepConsumerEvent" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "referralContext" : {
            "$ref" : "#/components/schemas/ReferralContext"
          },
          "firstSiteVisit" : {
            "type" : "boolean"
          },
          "selectedCampaignContext" : {
            "$ref" : "#/components/schemas/SelectedCampaignContext"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "eventTime" : {
            "type" : "string"
          },
          "sandbox" : {
            "$ref" : "#/components/schemas/Sandbox"
          },
          "causeEventId" : {
            "type" : "string"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          },
          "requestTime" : {
            "type" : "string"
          },
          "rootEventId" : {
            "type" : "string"
          },
          "eventContext" : {
            "$ref" : "#/components/schemas/EventContext"
          },
          "clientDomainContext" : {
            "$ref" : "#/components/schemas/ClientDomainContext"
          }
        }
      },
      "WebhookActionContext" : {
        "type" : "object",
        "properties" : {
          "webhook" : {
            "$ref" : "#/components/schemas/Webhook"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "causeEvent" : {
            "$ref" : "#/components/schemas/ConsumerEvent"
          },
          "stepEvent" : {
            "$ref" : "#/components/schemas/StepConsumerEvent"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "JwtBuilder" : {
        "type" : "object"
      },
      "ShareableConsumerEvent" : {
        "type" : "object",
        "properties" : {
          "new" : {
            "type" : "boolean"
          },
          "shareable" : {
            "$ref" : "#/components/schemas/ShareableWithLink"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "eventTime" : {
            "type" : "string"
          },
          "sandbox" : {
            "$ref" : "#/components/schemas/Sandbox"
          },
          "causeEventId" : {
            "type" : "string"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          },
          "requestTime" : {
            "type" : "string"
          },
          "rootEventId" : {
            "type" : "string"
          },
          "eventContext" : {
            "$ref" : "#/components/schemas/EventContext"
          },
          "clientDomainContext" : {
            "$ref" : "#/components/schemas/ClientDomainContext"
          }
        }
      },
      "CampaignSummary" : {
        "type" : "object",
        "properties" : {
          "lastStoppedDate" : {
            "type" : "string"
          },
          "lastPausedDate" : {
            "type" : "string"
          },
          "lastArchivedDate" : {
            "type" : "string"
          },
          "lastEndedDate" : {
            "type" : "string"
          },
          "firstLaunchDate" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "programType" : {
            "type" : "string"
          },
          "themeName" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "campaignId" : {
            "type" : "string"
          },
          "programLabel" : {
            "type" : "string"
          },
          "currentState" : {
            "type" : "string"
          },
          "campaignName" : {
            "type" : "string"
          }
        }
      },
      "ControllerBuildtimeContext" : {
        "type" : "object",
        "properties" : {
          "controllerName" : {
            "type" : "string"
          },
          "variableContext" : {
            "$ref" : "#/components/schemas/VariableContext"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "WebhookContext" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "webhook" : {
            "$ref" : "#/components/schemas/Webhook"
          },
          "globalServices" : {
            "$ref" : "#/components/schemas/GlobalServices"
          },
          "clientContext" : {
            "$ref" : "#/components/schemas/ClientContext"
          }
        }
      },
      "ShareableContent" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "imageUrl" : {
            "type" : "string"
          },
          "partnerContentId" : {
            "type" : "string"
          }
        }
      },
      "StepQuality" : {
        "type" : "string",
        "enum" : [ "HIGH", "LOW", "NONE" ]
      },
      "CouponService" : {
        "type" : "object"
      },
      "Id" : {
        "type" : "string"
      }
    },
    "securitySchemes" : {
      "HEADER" : {
        "type" : "apiKey",
        "name" : "authorization",
        "in" : "header"
      },
      "QUERY" : {
        "type" : "apiKey",
        "name" : "access_token",
        "in" : "query"
      },
      "COOKIE" : {
        "type" : "apiKey",
        "name" : "access_token",
        "in" : "cookie"
      }
    }
  }
}